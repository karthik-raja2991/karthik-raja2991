'==========================================================
'PSFIN Common Function Library
'Contains commonly used functions for BI/AR in the PSFin application.
'Changelog: 
'Date			Author					Description

'______________________________________________________ 

Option Explicit

Dim pageObj1
Set pageObj1 = Browser("creationtime:=0").page("index:=1")

'**************************************************************************************************************
''' <summary> 
''' custSendInvoices Function is to verify the 07_01comb customer send invoices
''' </summary>
''' <author>Venu Arigela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function custSendInvoices()
	Dim i, salesPerson, billToMedia, pageObj, invoiceValue, countOFinvoiceLines, billingPage, tcObjective

	tcObjective ="In Collections Workbench for Customer Account Information, validate Customer information Customer contacts names and the preferred communication field " & _
	       		 "Customer contacts "
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If setUserFieldValues() Then

		  	'''''''verifying data for a given business unit
		  	If GlobalDictionary("dataAvailable") = True Then
			Else
	        	Exit Function
		  	End If

			Wait 3
			IsObjectExist getObjectInfoFromXML("Customer_Details_Tab", objectsFile, "Value"), getObjectInfoFromXML("Customer_Details_Tab", objectsFile, "Description")
			If IsObjectExist (getObjectInfoFromXML("PrimaryContact_IMG", objectsFile, "Value"), getObjectInfoFromXML("PrimaryContact_IMG", objectsFile, "Description")) = True Then
				img_click getObjectInfoFromXML("PrimaryContact_IMG", objectsFile, "Value"), getObjectInfoFromXML("PrimaryContact_IMG", objectsFile, "Description")
				isObjExistDisplayVal getObjectInfoFromXML("CustomerName_Link", objectsFile, "Value"), getObjectInfoFromXML("CustomerName_Link", objectsFile, "Description"), "name"
				isObjExistDisplayVal getObjectInfoFromXML("PreferCommMethod_Element", objectsFile, "Value"), getObjectInfoFromXML("PreferCommMethod_Element", objectsFile, "Description"), "innertext"
				btn_click getObjectInfoFromXML("OK_BTN", objectsFile, "Value"), getObjectInfoFromXML("OK_BTN", objectsFile, "Description")
			End If

			If isObjectExist(getObjectInfoFromXML("CreditProfile_Tab", objectsFile, "Value"), getObjectInfoFromXML("CreditProfile_Tab", objectsFile, "Description")) = True Then
				element_Click getObjectInfoFromXML("CreditProfile_Tab", objectsFile, "Value"), getObjectInfoFromXML("CreditProfile_Tab", objectsFile, "Description")
				isCheckBoxDisabled getObjectInfoFromXML("Credit_ChkBox", objectsFile, "Value"), getObjectInfoFromXML("Credit_ChkBox", objectsFile, "Description")

				'isObjectExist getObjectInfoFromXML("Collector_Element", objectsFile, "Value"), getObjectInfoFromXML("Collector_Element", objectsFile, "Description")
				isObjExistDisplayVal getObjectInfoFromXML("Collector_Element", objectsFile, "Value"), getObjectInfoFromXML("Collector_Element", objectsFile, "Description"), "innertext"
				If IsObjectExist(getObjectInfoFromXML("Items_Tab", objectsFile, "Value"), getObjectInfoFromXML("Items_Tab", objectsFile, "Description")) = True Then
					element_Click getObjectInfoFromXML("Items_Tab", objectsFile, "Value"), getObjectInfoFromXML("Items_Tab", objectsFile, "Description")
					verifySalesPerson_Billing()
					invoiceValue = getLinkTextValue(getObjectInfoFromXML("Items_Link", objectsFile, "Value"), getObjectInfoFromXML("Items_Link", objectsFile, "Description"))
					click_Link getObjectInfoFromXML("Items_Link", objectsFile, "Value"), getObjectInfoFromXML("Items_Link", objectsFile, "Description")
					Wait 10

					If IsObjectExist( getObjectInfoFromXML("Detai2_Tab_Item_Maintenance", objectsFile, "Value"), getObjectInfoFromXML("Detai2_Tab_Item_Maintenance", objectsFile, "Description")) Then
						element_Click getObjectInfoFromXML("Detai2_Tab_Item_Maintenance", objectsFile, "Value"), getObjectInfoFromXML("Detai2_Tab_Item_Maintenance", objectsFile, "Description")
						check_WebEditBox_Value getObjectInfoFromXML("ItemInvoice_TXT", objectsFile, "Value"),invoiceValue, getObjectInfoFromXML("ItemInvoice_TXT", objectsFile, "Description")
						click_Link getObjectInfoFromXML("InvoiceDetail_Link", objectsFile, "Value"), getObjectInfoFromXML("InvoiceDetail_Link", objectsFile, "Description")
						Wait 5
						Set billingPage = Browser("name:=Item Billing Data").page("title:=Item Billing Data").Frame("title:=Item Billing Data")

						''verifying invocie lines on billing page for a particular Item clicked above
						countOFinvoiceLines = countOfElements(billingPage, "WebElement", "html id", "html tag", "AR_BI_LINE2_VW_IDENTIFIER.*", "SPAN", "invoice lines on billing page", True)
						If Not(countOFinvoiceLines = False) Then
							Call WriteToReport(micPass, "bill invoice lines", "the number of invoice lines on billing page are  " & countOFinvoiceLines, False)
							Browser("name:=Item Billing Data").Close
						End If
					End If
				Else
					Call WriteToReport(micFail, "Items Tab ", "Items Tab2 is not displayed  ", True)
				End If
			End If
		Else
			Exit Function 
		End If
	Else
		Call WriteToReport(micFail, "Main Menu Navigation", "Navigation to " & GlobalDictionary("MainMenuSelection") & " is failed", False)
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' taxExemptionStatus Function is to verify the 07_06comb Tax Exemption status
''' </summary>
''' <author>Venu Arigela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function taxExemptionStatus()
	Dim i, customerName, exemptionDataRows, exemptionValue, tcObjective

	tcObjective = "verifying tax exemption status"
	WriteToReport micDone, "######## " & GlobalDictionary("TestName") & " #######", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If setUserFieldValues() Then
		
			'''''''verifying data for a given business unit
			If GlobalDictionary("dataAvailable") = True Then
			Else
				Exit Function	
			End If

			Wait 3
			customerName = valueOfObject(getObjectInfoFromXML("Customer_Link", objectsFile, "Value"), "text")
			If doubleclick_Link (getObjectInfoFromXML("Customer_Link", objectsFile, "Value"), getObjectInfoFromXML("Customer_Link", objectsFile, "Description")) = True Then 
				verifyCustomerGeneralInfo(customerName)
				If isObjectExist(getObjectInfoFromXML("GeneralInfo_Link", objectsFile, "Value"), getObjectInfoFromXML("GeneralInfo_Link", objectsFile, "Description")) Then
					click_Link getObjectInfoFromXML("GeneralInfo_Link", objectsFile, "Value"), getObjectInfoFromXML("GeneralInfo_Link", objectsFile, "Description")
					Wait 2
					click_Link getObjectInfoFromXML("TaxExempt_Link", objectsFile, "Value"), getObjectInfoFromXML("TaxExempt_Link", objectsFile, "Description")  
					Wait 3
					'exemptionDataRows = countOfElements(pageObj1, "WebTable", "cols", "html tag", "7", "TABLE", "Exemption table", False) 
					exemptionDataRows = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=ACE_\$ICField3\$0").GetROProperty("Rows")
					If exemptionDataRows > 1 Then
						exemptionValue = valueOfObject(getObjectInfoFromXML("Exemption_Status_Element", objectsFile, "Value"),"innertext")
						If Not(exemptionValue = False) Then
							Call WriteToReport(micPass, "Exemption status Value", "The credit exemption status value is " & exemptionValue, True)
						Else
							Call WriteToReport(micFail, "Exemption status Value", "The credit exemption status value is not displayed", True)
						End If
					End If
				Else
					Exit Function
				End If
			Else
				Exit Function
			End If
		Else
			Exit Function
		End If
	Else
		Call WriteToReport(micFail, "Main Menu Navigation", "Navigation to " & GlobalDictionary("MainMenuSelection") & " is failed", False)
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' custRevNeeded Function is to verify the AR12_17 Customer Review Needed
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function custRevNeeded()
    Dim i, bSetSecure, descriptionVal
	Dim strCreationTimeStamp, strCreationModTimeStamp
	Dim ConvSearchRows, strExpDesc, intCount, strActDesc
	Dim objPage1, objTable1, intRowCt, strCellData, intCt, strExpDesc1, intComp

    bSetSecure = False
	WriteToReport micDone, "custRevNeeded", "" & GlobalDictionary("TestObjective") & " ", False
	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_ARCollectionsWorkbench")
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
    	GlobalDictionary("dataAvailable") = True
        setUserFieldValues1()
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(100) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
			Exit Function
		End If

		Wait 5
		If IsObjectExist(getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")) = True Then
        	element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
       	End If

		If IsObjectExist(getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Value"), getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Value"), getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Description")
		End If

		Wait 2
		'If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_3").WebEdit("html id:=CUST_CONVER_HDR_DESCR","index:=0").Exist(40) Then
		If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CONVER_HDR_DESCR","index:=0").Exist(40) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If

		'strCreationTimeStamp = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_3").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
		'strCreationModTimeStamp = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html tag:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")
		strCreationTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
		strCreationModTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")
		descriptionVal = "Test " & getRandomNumber(7)
	  	setValue_WebEdit getObjectInfoFromXML("Description_Tab", objectsFile, "Value"), descriptionVal, bSetSecure, getObjectInfoFromXML("Description_Tab", objectsFile, "Description")
	    setValue_WebEdit getObjectInfoFromXML("Contact_Id", objectsFile, "Value"), GlobalDictionary("ContactId"), bSetSecure, getObjectInfoFromXML("Contact_Id", objectsFile, "Description")
	  	setValue_WebEdit getObjectInfoFromXML("Comments_Box", objectsFile, "Value"), GlobalDictionary("CommentsBox"), bSetSecure, getObjectInfoFromXML("Comments_Box", objectsFile, "Description")
	  	
		'If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_3").WebTable("column names:=SetID SHARE.*", "name:=CONVER_STATUS").WebTable("column names:=;SetID;;SHARE.*", "html id:=ACE_width").WebTable("column names:=Review", "name:=CUST_CONVER_HDR_REVIEW_NEXT_DT").WebTable("column names:=;Review Days").Image("html tag:=IMG", "image type:=Image Link", "index:=0").Exist(10) Then
		'If Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetIDSHARE.*", "name:=CONVER_STATUS").WebTable("column names:=;SetID;;SHARE.*", "html id:=ACE_width").WebTable("column names:=Review", "name:=CUST_CONVER_HDR_REVIEW_NEXT_DT").WebTable("column names:=;Review Days").Image("html tag:=IMG", "image type:=Image Link", "index:=0").Exist(10) Then
		'If Browser("creationtime:=0").Page("index:=1").Image("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT\$prompt\$img").Exist(10) Then
		If Browser("creationtime:=0").Page("index:=1").Image("name:=CUST_CONVER_HDR_REVIEW_NEXT_DT\$prompt\$img").Exist(10) Then
	  		'Browser("creationtime:=0").Page("index:=1").WebButton("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT\$prompt")
	  		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT\$prompt").Click
			Wait 10
'			Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_3").Link("class:=PSHYPERLINK", "innertext:=Current Date", "index:=0").highlight
'			Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_3").Link("class:=PSHYPERLINK", "innertext:=Current Date", "index:=0").Click
			Browser("creationtime:=0").Page("index:=1").Link("class:=PSHYPERLINK", "innertext:=Current Date", "index:=0").highlight
			Browser("creationtime:=0").Page("index:=1").Link("class:=PSHYPERLINK", "innertext:=Current Date", "index:=0").Click
	    Else
	    	Call WriteToReport(micFail, "datecox button", "date pick icon is not displayed", True)
	     	Exit Function 
	  	End If

		verifyValue getObjectInfoFromXML("RevUser_Id1", objectsFile, "Value"), "HEIDBER", "default value", "User Id"
		Wait 2
		btn_click getObjectInfoFromXML("Apply_Btn", objectsFile, "Value"), getObjectInfoFromXML("Apply_Btn", objectsFile, "Description")
		Wait 5
		btn_click getObjectInfoFromXML("Ok_Btn", objectsFile, "Value"), getObjectInfoFromXML("Ok_Btn", objectsFile, "Description")
		Wait 2
		click_Link getObjectInfoFromXML("Menu_Link", objectsFile, "Value"), getObjectInfoFromXML("Menu_Link", objectsFile, "Description")
		click_Link getObjectInfoFromXML("AccountsReceivable_Link", objectsFile, "Value"), getObjectInfoFromXML("AccountsReceivable_Link", objectsFile, "Description")
		click_Link getObjectInfoFromXML("CustomerInteractions_Link", objectsFile, "Value"), getObjectInfoFromXML("CustomerInteractions_Link", objectsFile, "Description")
		click_Link getObjectInfoFromXML("Conversations_Link", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Link", objectsFile, "Description")
		click_Link getObjectInfoFromXML("ReviewNeeded_Link", objectsFile, "Value"), getObjectInfoFromXML("ReviewNeeded_Link", objectsFile, "Description")	
		If Browser("creationtime:=0").Page("index:=1").WebEdit("name:=CONVR_CALL_VW_REVIEW_OPRID", "index:=1").Exist(40) Then
			Call WriteToReport(micPass, "Conversation Review Needed Page", "Conversation Review Needed Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversation Review Needed Page", "Failed to load Conversation Review Needed Page", True)
		End If

		verifyValue getObjectInfoFromXML("RevUser_Id", objectsFile, "Value"), "HEIDBER", "default value", "User Id"
		click_Lookup_Img_And_Select_Item "Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID"
		Wait 2
		click_Lookup_Img_And_Select_Item "Look up Business Unit.*", "SP_BUARDS_CLSVW_BUSINESS_UNIT", GlobalDictionary("BusinessUnit"), "BusinessUnit"
		Wait 5
		click_Lookup_Img_And_Select_Item "Look up Customer ID.*", "AR_CUST_ALL_VW_CUST_ID", GlobalDictionary("Customer"), "Customer"
		Wait 5
		btn_click getObjectInfoFromXML("Srch_btn", objectsFile, "Value"), getObjectInfoFromXML("Srch_btn", objectsFile, "Description")
		'If Browser("creationtime:=0").Page("index:=1").WebTable("column names:=User ID;Next Review Date;SetID;Business Unit;Customer ID;Conversation Date;Status;Description;Subject;Subject Topic;Number of Entries;Attachments;Cash Forecast").Exist(60) Then
		If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS").Exist(60) Then
			click_Link getObjectInfoFromXML("Conversation_Date", objectsFile, "Value"), getObjectInfoFromXML("Conversation_Date", objectsFile, "Description")
			Wait 3
			click_Link getObjectInfoFromXML("Conversation_Date", objectsFile, "Value"), getObjectInfoFromXML("Conversation_Date", objectsFile, "Description")
			Wait 5
			'ConvSearchRows = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebTable("column names:=View All First.*", "index:=0", "html taG:=TABLE").WebTable("column names:=User ID;Next Review.*", "index:=0", "html taG:=TABLE").GetROProperty("rows")
			ConvSearchRows = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS").GetROProperty("rows")
			Wait 4
			For intCount = 2 To ConvSearchRows
				Wait 1
				'strActDesc = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebTable("column names:=View All First.*", "index:=0", "html tag:=TABLE").WebTable("column names:=User ID;Next Review.*", "index:=0", "html taG:=TABLE").GetCellData(intCount,8)
				strActDesc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS").GetCellData(intCount,8)
				If StrComp(descriptionVal,strActDesc,1)=0 Then
					'Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebTable("column names:=View All First.*", "index:=0", "html tag:=TABLE").WebTable("column names:=User ID;Next Review.*","index:=0", "html taG:=TABLE").Link("innertext:=" & descriptionVal, "index:=1").click
					Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS").Link("innertext:=" & descriptionVal, "index:=1").click
					Exit For
				End If
			Next
		Else
			Call WriteToReport(micFail, "Search Results Table", "Search Results Table is not displayed", True)
			Exit Function
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebCheckBox("class:=PSCHECKBOX", "name:=CUST_CONVER_HDR_REVIEW_COMP", "index:=1").Exist(60) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If

		'If Browser("creationtime:=0").Page("index:=1").Frame("name:=TargetContent").WebTable("class:=PSPAGECONTAINER", "column names:=SetID SHARE.*", "index:=0", "html taG:=TABLE").WebTable("class:=PSPAGECONTAINER", "column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").Exist(40) Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").Exist(40) Then
			Dim strReviewTimeStamp
			'strReviewTimeStamp = Browser("creationtime:=0").Page("index:=1").Frame("name:=TargetContent").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY","html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
			strreviewtimestamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
			If StrComp(strCreationTimeStamp,strReviewTimeStamp,1)=0 Then
				Call WriteToReport(micPass, "Creation time stamp", "Verified in Review Page"&strReviewTimeStamp, False)
			Else
				Call WriteToReport(micFail, "Creation time stamp", "Verification Failed in Review page", True)
		    End If
		Else
		 	Call WriteToReport(micFail, "Review Page", "Did not displayed", True)
		End If

	    'If Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").Exist(30) Then
	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").Exist(30) Then
			Dim strReviewModTimeStamp
			'strReviewModTimeStamp = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html tag:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY","html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")
			strReviewModTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")
			If (StrComp(strCreationModTimeStamp,strReviewModTimeStamp,1)>=0) or (StrComp(strCreationModTimeStamp, strReviewModTimeStamp,0) = -1) Then
				Call WriteToReport(micPass, "Modified time stamp", "Verified in Review Page" & strReviewTimeStamp, False)
			Else
				Call WriteToReport(micFail, "Modified time stamp", "Verification Failed in Review page", True)
		    End If
		Else
		 	Call WriteToReport(micFail, "Review Page", "Did not displayed", True)
		End If

		check_CheckBox getObjectInfoFromXML("Done_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Done_Checkbox", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
		If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
	    	setUserFieldValues1()
	  	End If

		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		Wait 3
		If IsObjectExist(getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")) = True Then
			element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
		End If

		If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("ViewAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link", objectsFile, "Description")
		End If

		Set objPage1 = Browser("name:=Collections Workbench").Page("title:=Collections Workbench").Frame("html id:=ptifrmtgtframe")
		'Set objTable1 = objPage1.WebTable("class:=PSLEVEL1GRIDWBO","column names:=Conversations  Personalize.*","index:=0").WebTable("column names:=More Info Unit Cust ID.*","index:=0").WebTable("class:=psprintgrid","html id:=gbCWB_CONVR_VW\$0").WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		Set objTable1 = objPage1.WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		
		'' added table check codniton
		If objTable1.Exist(45) Then
			intRowCt = objTable1.RowCount
		Else
			Call WriteToReport(micFail, "Conversations table", "Failed to load Conversations table", True)
			Exit function
		End If

		Wait 3		
		For intCt = 1 To intRowCt
			strCellData = objTable1.GetCellData(intCt,5)
			intComp = StrComp(descriptionVal, Trim(strCellData),1)
			If intComp=0 Then
				objTable1.WebElement("html tag:=IMG","name:=CWB_CONVR_WRK_LINK1\$IMG\$"&intCt-1).Click
				Exit For
			End If
		Next

		If Browser("creationtime:=0").Page("index:=1").WebCheckBox("class:=PSCHECKBOX", "name:=CUST_CONVER_HDR_REVIEW_COMP", "index:=1", "value:=Y").Exist(30) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If

		'If Browser("creationtime:=0").Page("index:=1").WebTable("class:=PSPAGECONTAINER", "column names:=SetID SHARE.*", "index:=0", "html taG:=TABLE").WebTable("class:=PSPAGECONTAINER", "column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").Exist(30) Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").Exist(30) Then
			Dim strConverTimeStamp
			'strConverTimeStamp = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetID SHARE.*","index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*","index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY","html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
			strConverTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
			If StrComp(strCreationTimeStamp,strConverTimeStamp,1)=0 Then
				Call WriteToReport(micPass, "Creation time stamp", "Verified in Conversation Page" & strReviewTimeStamp, False)
			Else
				Call WriteToReport(micFail, "Creation time stamp", "Verification Failed in Conversation Page", True)
			End If
		Else
			Call WriteToReport(micFail, "Conversation Page", "Did not displayed", True)
		End If

		'If Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetID SHARE.*","index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*","index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY","html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").Exist(30) Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").Exist(30) Then
			Dim strConverModTimeStamp
			'strConverModTimeStamp = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")			
			strConverModTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")
			If (StrComp(strCreationModTimeStamp,strConverModTimeStamp,1)=0) or (StrComp(strCreationModTimeStamp,strConverModTimeStamp,0) = -1) Then
				Call WriteToReport(micPass, "Modified time stamp", "Verified in Conversation Page" & strReviewModTimeStamp, False)
			Else
				Call WriteToReport(micFail, "Modified time stamp", "Verification Failed in Conversation Page", True)
			End If
		Else
			Call WriteToReport(micFail, "Conversation Page", "Did not displayed", True)
		End If

		If Browser("creationtime:=0").Page("index:=1").WebCheckBox("class:=PSCHECKBOX","name:=CUST_CONVER_HDR_REVIEW_COMP", "index:=1", "value:=Y").Exist(30) Then
			Dim bDoneCheckbox1,objDoneCheckbox1, propertyVal
			Set objDoneCheckbox1 = Browser("creationtime:=0").Page("index:=1").WebCheckBox("class:=PSCHECKBOX", "name:=CUST_CONVER_HDR_REVIEW_COMP", "index:=1", "value:=Y")
			bDoneCheckbox1 = Browser("creationtime:=0").Page("index:=1").WebCheckBox("class:=PSCHECKBOX", "name:=CUST_CONVER_HDR_REVIEW_COMP", "index:=1", "value:=Y").GetROProperty("value")
			If bDoneCheckbox1 = "Y" Then
				Call WriteToReport(micPass, "Done Checkbox 'Y' means editable", "The expected value 'Y' matches with actual value  " & Trim(objDoneCheckbox1.getroproperty("value")), False)
			Else
				Call WriteToReport(micFail, "Done Checkbox 'N' is not editable", "The expected value 'N' does not match with actual value  " & Trim(objDoneCheckbox1.getroproperty("value")), True)
			End If
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' followupAction Function is to verify the AR12_19 Customer Followup Action
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'06/12/2018			Eric Trout	Object updates due to PS update
'**************************************************************************************************************
Public Function followupAction()
	Err.Clear
	On Error Resume Next
	Dim i, bSetSecure, descriptionVal, strCreationTimeStamp, pastDate
	Dim objPage, objTable1, intRowCount, strCellData, intCount, strExpDesc
	Dim objPage2, objTable2, intRowCt1, strCellData1, intCt1
	Dim objPage3, objTable3, intRowCt2, strCellData2, intCt2
	Dim objPage4, objTable4, intRowCt3, strCellData3, intCt3

	bSetSecure = False
	WriteToReport micDone, "followupAction", "" & GlobalDictionary("TestObjective") & " ", False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		GlobalDictionary("dataAvailable") = True
		setUserFieldValues1()
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(60) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		If IsObjectExist(getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")) = True Then
		    element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
		End If

		Wait 5
		If IsObjectExist(getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Value"), getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Value"), getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Description")
		End If

		If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CONVER_HDR_DESCR","index:=0").Exist(60) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If

		'strCreationTimeStamp = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_3").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
		strCreationTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
		setValue_WebEdit getObjectInfoFromXML("Subject_Tab", objectsFile, "Value"),GlobalDictionary("Subject"),bSetSecure, getObjectInfoFromXML("Subject_Tab", objectsFile, "Description")
		descriptionVal = "Test "&getRandomNumber(7)
		setValue_WebEdit getObjectInfoFromXML("Description_Tab", objectsFile, "Value"),descriptionVal, bSetSecure, getObjectInfoFromXML("Description_Tab", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Comments_Box1", objectsFile, "Value"),GlobalDictionary("CommentsBox1"), bSetSecure, getObjectInfoFromXML("Comments_Box1", objectsFile, "Description")
		'setValue_WebEdit getObjectInfoFromXML("Contact_Id", objectsFile, "Value"),GlobalDictionary("ContactId"), bSetSecure, getObjectInfoFromXML("Contact_Id", objectsFile, "Description")
		Browser("title:=Collections Workbench").Page("title:=Collections Workbench").WebEdit("html id:=CUST_CONVER_CONTACT_ID\$0").Set GlobalDictionary("ContactId")
		setValue_WebEdit getObjectInfoFromXML("Keyword_1", objectsFile, "Value"),GlobalDictionary("Keyword1"), bSetSecure, getObjectInfoFromXML("Keyword_1", objectsFile, "Description") 
		setValue_WebEdit getObjectInfoFromXML("Keyword_2", objectsFile, "Value"),GlobalDictionary("Keyword2"), bSetSecure, getObjectInfoFromXML("Keyword_2", objectsFile, "Description") 
		setValue_WebEdit getObjectInfoFromXML("Keyword_3", objectsFile, "Value"),GlobalDictionary("Keyword3"), bSetSecure, getObjectInfoFromXML("Keyword_3", objectsFile, "Description") 
		'btn_click  getObjectInfoFromXML("Date_Box", objectsFile, "Value"), getObjectInfoFromXML("Date_Box", objectsFile, "Description")
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT\$prompt").Click
		Browser("creationtime:=0").Sync
		click_Link getObjectInfoFromXML("Current_Date", objectsFile, "Value"), getObjectInfoFromXML("Current_Date", objectsFile, "Description")
		click_Link getObjectInfoFromXML("Followup_Action", objectsFile, "Value"), getObjectInfoFromXML("Followup_Action", objectsFile, "Description")  
		click_Link getObjectInfoFromXML("Followup_Review", objectsFile, "Value"), getObjectInfoFromXML("Followup_Review", objectsFile, "Description")
		Browser("creationtime:=0").Sync
		verifyValue getObjectInfoFromXML("RevUser_Id1", objectsFile, "Value"),"BASIJOH","default value","User Id"
		Wait 5
		btn_click getObjectInfoFromXML("Apply_Btn", objectsFile, "Value"), getObjectInfoFromXML("Apply_Btn", objectsFile, "Description")
		Wait 5
		btn_click getObjectInfoFromXML("Ok_Btn", objectsFile, "Value"), getObjectInfoFromXML("Ok_Btn", objectsFile, "Description")
		Wait 4

		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Conversations","index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		Wait 2
		If IsObjectExist(getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Value"), getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Value"), getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Description")
		End If

		If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CWB_FLTCONV_WRK_CONVER_STATUS","index:=0").Exist(60) Then
			Call WriteToReport(micPass, "Filter Conversation Page", "Filter Conversation Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Filter Conversation Page", "Failed to load Filter Conversation Page", True)
		End If

		WebList_select getObjectInfoFromXML("Conv_Status", objectsFile, "Value"),"New", getObjectInfoFromXML("Conv_Status", objectsFile, "Description")
		WebList_select getObjectInfoFromXML("Conv_Date", objectsFile, "Value"),"Greater Than", getObjectInfoFromXML("Conv_Date", objectsFile, "Description")
		pastDate = Date-1
		setValue_WebEdit getObjectInfoFromXML("FilterConversation_Date", objectsFile, "Value"),pastDate,bSetSecure, getObjectInfoFromXML("FilterConversation_Date", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Search_Button1", objectsFile, "Value"), getObjectInfoFromXML("Search_Button1", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Conversations", "index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("ViewAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link", objectsFile, "Description")
		End If

		Wait 2
		Set objPage = Browser("name:=Collections Workbench").Page("title:=Collections Workbench").Frame("html id:=ptifrmtgtframe")
		'Set objTable1 = objPage.WebTable("class:=PSLEVEL1GRIDWBO", "column names:=Conversations  Personalize.*", "index:=0").WebTable("column names:=More Info Unit Cust ID.*", "index:=0").WebTable("class:=psprintgrid", "html id:=gbCWB_CONVR_VW\$0").WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		'html id l1CWB_CONVR_VW$0
		Set objTable1 = objPage.WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		''added check condition
		If objTable1.Exist(40) Then
			intRowCount = objTable1.RowCount
		Else
			Call WriteToReport(micFail, "Conversations table", "Failed to load Conversations table", True) 
			Exit Function
		End If

		For intCount = 1 To intRowCount
			strCellData = objTable1.GetCellData(intCount,5)
			If StrComp(descriptionVal, Trim(strCellData),1)=0 Then
				objTable1.WebElement("html tag:=IMG","name:=CWB_CONVR_WRK_LINK1\$IMG\$"&intCount-1).Click
				Exit For
			End If
		Next

		If Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=CREDIT","index:=0").Exist(60) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If   

		verifyValue getObjectInfoFromXML("Subject_Field", objectsFile, "Value"),GlobalDictionary("Subject"), "innertext", "Subject Field"
		verifyValue getObjectInfoFromXML("Subtopic_Field", objectsFile, "Value"), "Sub-Topic", "innerhtml", "Subtopic Field"
		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebElement("html id:=CUST_CONVER_HDR_PROMISE_TO_PAY", "index:=0").Exist(30) Then
			Dim bPromPayment,objPromPayment	
			Set objPromPayment = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebElement("html id:=CUST_CONVER_HDR_PROMISE_TO_PAY","index:=0")
			bPromPayment =  Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebElement("html id:=CUST_CONVER_HDR_PROMISE_TO_PAY", "index:=0").GetROProperty("disabled")
			If bPromPayment = "0" Then
				Call WriteToReport(micPass, "Promise Of Payment Checkbox '0' means editable", "The expected value '0' matches with actual value  " & Trim(objPromPayment.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, "Promise Of Payment Checkbox '1' is not editable", "The expected value '0' does not match with actual value  " & Trim(objPromPayment.getroproperty("disbaled")), True)
			End If
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebElement("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT","index:=0").Exist(30) Then
			Dim bDateField,objDateField
			Set objDateField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebElement("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT","index:=0")
			bDateField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebElement("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT","index:=0").GetROProperty("disabled")
			If bDateField = "0" Then
				Call WriteToReport(micPass, "Date Field '0' means editable", "The expected value '0' matches with actual value  " & Trim(objDateField.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, "Date Field '1' is not editable", "The expected value '0' does not match with actual value  " & Trim(objDateField.getroproperty("disabled")), True)
			End If
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebCheckBox("html id:=CUST_CONVER_HDR_SUP_REVIEW","index:=0").Exist(30) Then
			Dim bSupervisorReview,objSupervisorReview
			Set objSupervisorReview = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebCheckBox("html id:=CUST_CONVER_HDR_SUP_REVIEW","index:=0")
			bSupervisorReview = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebCheckBox("html id:=CUST_CONVER_HDR_SUP_REVIEW","index:=0").GetROProperty("disabled")
			If bSupervisorReview = "0" Then
				Call WriteToReport(micPass, "Supervisor Review Checkbox '0' means editable", "The expected value '0' matches with actual value  " & Trim(objSupervisorReview.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, "Supervisor Review Checkbox '1' is not editable", "The expected value '0' does not match with actual value  " & Trim(objSupervisorReview.getroproperty("disabled")), True)
			End If
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_ACTION","index:=0").Exist(30) Then
			Dim bActionField,objActionField
			Set objActionField =Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_ACTION","index:=0")
			bActionField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_ACTION","index:=0").GetROProperty("disabled")
			If bActionField = "0" Then
				Call WriteToReport(micPass, "Action Field '0' means editable", "The expected value '0' matches with actual value  "&Trim(objActionField.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, " Action Field '1' is not editable", "The expected value '0' does not match with actual value  "&Trim(objActionField.getroproperty("disabled")), True)
			End If
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_OPRID","index:=0").Exist(30) Then
			Dim bUserIdField,objUserIdField
			Set objUserIdField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_OPRID", "index:=0")
			bUserIdField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_OPRID", "index:=0").GetROProperty("disabled")
			If bUserIdField = "0" Then
				Call WriteToReport(micPass, "UserId Field '0' means editable", "The expected value '0' matches with actual value  " & Trim(objUserIdField.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, "UserId Field '1' is not editable", "The expected value '0' does not match with actual value  " & Trim(objUserIdField.getroproperty("disabled")), True)
			End If	
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_ACTION", "index:=0").Exist(30) Then
			Dim bLetterField,objLetterField
			Set objLetterField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_ACTION", "index:=0")
			bLetterField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_ACTION", "index:=0").GetROProperty("disabled")
			If bLetterField = "0" Then
				Call WriteToReport(micPass, "Letter Field '0' means editable", "The expected value '0' matches with actual value  " & Trim(objLetterField.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, "Letter Field '1' is not editable", "The expected value '0' does not match with actual value  " & Trim(objLetterField.getroproperty("disabled")), True)
			End If
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_PROMISE_AMT", "index:=0").Exist(30) Then
			Dim bAmountField,objAmountField
			Set objAmountField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_PROMISE_AMT", "index:=0")
			bAmountField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_PROMISE_AMT", "index:=0").GetROProperty("disabled")
			If bAmountField = "0" Then
				Call WriteToReport(micPass, "Amount Field '0' means editable", "The expected value '0' matches with actual value  " & Trim(objAmountField.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, "Amount Field '1' is not editable", "The expected value '0' does not match with actual value  " & Trim(objAmountField.getroproperty("disabled")), True)
			End If
		End If

		verifyValue getObjectInfoFromXML("Amount_Field", objectsFile, "Value"),"0.00","default value","Amount Field"
		verifyValue getObjectInfoFromXML("Currency_Field", objectsFile, "Value"),"USD","default value","Currency Field"
		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_PROMISE_AMT", "index:=0").Exist(30) Then
			Dim bPromiseDateField,objPromiseDateField
			Set objPromiseDateField =Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_PROMISE_AMT", "index:=0")
			bPromiseDateField = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_HDR_PROMISE_AMT", "index:=0").GetROProperty("disabled")
			If bPromiseDateField = "0" Then
				Call WriteToReport(micPass, "Promise Date Field '0' means editable", "The expected value '0' matches with actual value  " & Trim(objPromiseDateField.getroproperty("disabled")), False)
			Else
				Call WriteToReport(micFail, "Promise Date Field '1' is not editable", "The expected value '0' does not match with actual value  " & Trim(objPromiseDateField.getroproperty("disabled")), True)
			End If	
		End If

		verifyValue getObjectInfoFromXML("PromiseDate_Field", objectsFile, "Value"),"0","disabled","Promise Date Field"
		verifyValue getObjectInfoFromXML("Keyword_11", objectsFile, "Value"),GlobalDictionary("Keyword1"),"default value","Keyword 1"
		verifyValue getObjectInfoFromXML("Keyword_22", objectsFile, "Value"),GlobalDictionary("Keyword2"),"default value","Keyword 2"
		verifyValue getObjectInfoFromXML("Keyword_33", objectsFile, "Value"),GlobalDictionary("Keyword3"),"default value","Keyword 3"
		'If Browser("creationtime:=0").Page("index:=1").WebTable("class:=PSPAGECONTAINER","column names:=SetID SHARE.*", "index:=0", "html taG:=TABLE").WebTable("class:=PSPAGECONTAINER", "column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").Exist(30) Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").Exist(30) Then
			Dim strConverTimeStamp
			'strConverTimeStamp = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=SetIDSHARE.*", "index:=0", "html taG:=TABLE").WebTable("column names:=;SetID;;SHARE.*", "index:=0", "html taG:=TABLE").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
			strConverTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_CONVER_DTTM_INIT").GetROProperty("innertext")
			If StrComp(strCreationTimeStamp,strConverTimeStamp,1)=0 Then
				Call WriteToReport(micPass, "Creation time stamp", "Verified in Conversation Page" & strConverTimeStamp, False)
			Else
				Call WriteToReport(micFail, "Creation time stamp", "Verification Failed in Conversation Page", True)
			End If
		Else
			Call WriteToReport(micFail, "Conversation Page", "Did not displayed", True)
		End If

		verifyValue getObjectInfoFromXML("CreatedBy_Webelement", objectsFile, "Value"),"BASIJOH","innerhtml","Created By"  
		verifyValue getObjectInfoFromXML("ContactId_Field", objectsFile, "Value"),GlobalDictionary("ContactId"),"innerhtml","Conversation entry section-ContactId Field"
		verifyValue getObjectInfoFromXML("ContactId_Name", objectsFile, "Value"),GlobalDictionary("Name"),"innerhtml","Conversation entry section-ContactId Name"
		verifyValue getObjectInfoFromXML("Comments_Box3", objectsFile, "Value"),GlobalDictionary("CommentsBox1"),"default value","Conversation entry section-Comments Field"
		Wait 2
		Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
		element_Click getObjectInfoFromXML("Reference_Tab", objectsFile, "Value"), getObjectInfoFromXML("Reference_Tab", objectsFile, "Description")
		Setting.WebPackage("ReplayType") = 1 '2-Runs mouse operations using the mouse
		verifyValue getObjectInfoFromXML("SetId_Field", objectsFile, "Value"),GlobalDictionary("SetID"),"innerhtml","SetId Field"
		verifyValue getObjectInfoFromXML("BusinessUnit_Field", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),"innerhtml","Business Unit Field"
		verifyValue getObjectInfoFromXML("Customer_Field", objectsFile, "Value"),GlobalDictionary("Customer"),"innerhtml","Customer Field"
		Wait 2
		Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
		element_Click getObjectInfoFromXML("Attachments_Tab", objectsFile, "Value"), getObjectInfoFromXML("Attachments_Tab", objectsFile, "Description")
		Setting.WebPackage("ReplayType") = 1 '2-Runs mouse operations using the mouse
		verifyValue getObjectInfoFromXML("SetId_Field", objectsFile, "Value"),GlobalDictionary("SetID"),"innerhtml","SetId Field"
		verifyValue getObjectInfoFromXML("BusinessUnit_Field", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), "innerhtml", "Business Unit Field"
		verifyValue getObjectInfoFromXML("Customer_Field", objectsFile, "Value"),GlobalDictionary("Customer"),"innerhtml","Customer Field"
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=tdCUST_CONVER_ATT\$0#0").Exist Then
			Dim arrAttach, strAttach, intAttach
			strAttach = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=tdCUST_CONVER_ATT\$0#0").getroproperty("html id")
			arrAttach = split(strAttach,"$")
			intAttach = split(arrAttach(1),"#")
			If intAttach(0) = 0 Then
				Call WriteToReport(micPass, "Review Attachments", "Does not contain any attachments as Expected", False)
			Else
				Call WriteToReport(micFail, "Review Attachments", "Contains one or more attachments", True)
			End If
		End If

		btn_click getObjectInfoFromXML("Ok_Btn1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Btn1", objectsFile, "Description")
		Call login(GlobalDictionary("SignInUser1"))
		If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
			setUserFieldValues1()
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(60) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		If IsObjectExist(getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")) = True Then
			element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
		End If

		click_Link getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Value"), getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CWB_FLTCONV_WRK_CONVER_STATUS","index:=0").Exist(60) Then
			Call WriteToReport(micPass, "Filter Conversation Page", "Filter Conversation Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Filter Conversation Page", "Failed to load Filter Conversation Page", True)
		End If

		WebList_select getObjectInfoFromXML("Conv_Status1", objectsFile, "Value"),"New", getObjectInfoFromXML("Conv_Status", objectsFile, "Description")
		WebList_select getObjectInfoFromXML("Conv_Date1", objectsFile, "Value"),"Greater Than", getObjectInfoFromXML("Conv_Date1", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("FilterConversation_Date1", objectsFile, "Value"),pastDate,bSetSecure, getObjectInfoFromXML("FilterConversation_Date1", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_Button2", objectsFile, "Value"), getObjectInfoFromXML("Search_Button2", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("ViewAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link", objectsFile, "Description")
		End If

		Wait 15
		Set objPage2 = Browser("name:=Collections Workbench").Page("title:=Collections Workbench").Frame("html id:=ptifrmtgtframe")
		'Set objTable2 = objPage2.WebTable("class:=PSLEVEL1GRIDWBO", "column names:=Conversations  Personalize.*","index:=0").WebTable("column names:=More Info Unit Cust ID.*","index:=0").WebTable("class:=psprintgrid","html id:=gbCWB_CONVR_VW\$0").WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		Set objTable2 = objPage2.WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		intRowCt1 = objTable2.RowCount
		For intCt1 = 0 To intRowCt1
			strCellData1 = objTable2.GetCellData(intCt1,5)
			If StrComp(descriptionVal,Trim(strCellData1),1)=0 Then
				objTable2.WebElement("html tag:=IMG", "name:=CWB_CONVR_WRK_LINK1\$IMG\$" & intCt1-1).Click
				Exit For
			End If
		Next

		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CONVR_WRK_EDIT_BUTTON\$0").Exist(60) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If

		btn_click getObjectInfoFromXML("EditEntry_Button", objectsFile, "Value"), getObjectInfoFromXML("EditEntry_Button", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Comments_Box2", objectsFile, "Value"),GlobalDictionary("CommentsBox2"),bSetSecure, getObjectInfoFromXML("Comments_Box2", objectsFile, "Description")
		Wait 2
		btn_click getObjectInfoFromXML("Apply_Btn3", objectsFile, "Value"), getObjectInfoFromXML("Apply_Btn3", objectsFile, "Description")
		wait 5
		btn_click getObjectInfoFromXML("Ok_Btn3", objectsFile, "Value"), getObjectInfoFromXML("Ok_Btn3", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(60) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		Wait 20
		Set objPage3 = Browser("name:=Collections Workbench").Page("title:=Collections Workbench").Frame("html id:=ptifrmtgtframe")
		'Set objTable3 = objPage3.WebTable("class:=PSLEVEL1GRIDWBO","column names:=Conversations  Personalize.*","index:=0").WebTable("column names:=More Info Unit Cust ID.*","index:=0").WebTable("class:=psprintgrid","html id:=gbCWB_CONVR_VW\$0").WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		Set objTable3 = objPage3.WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		intRowCt2 = objTable3.RowCount
		For intCt2 = 0 To intRowCt2
			strCellData2 = objTable3.GetCellData(intCt2,5)
			If StrComp(descriptionVal,Trim(strCellData2),1)=0 Then
				objTable3.WebElement("html tag:=IMG","name:=CWB_CONVR_WRK_LINK1\$IMG\$"&intCt2-1).Click
				Exit For
			End If
		Next

		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=CONVR_WRK_DELETE_BUTTON\$0").Exist(60) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If

		Wait 2
		btn_click getObjectInfoFromXML("Delete_Entry", objectsFile, "Value"), getObjectInfoFromXML("Delete_Entry", objectsFile, "Description")
		Wait 5
		
		
		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_DESCRLONG\$0").Exist(30) Then
			Dim bCommentsBox3,objCommentsBox3
			Set objCommentsBox3 = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_DESCRLONG\$0")
			
			If bCommentsBox3 = "" Then
				Call WriteToReport(micPass, "Value in Comments Box", "Verified Value in comment box is deleted  "&Trim(objCommentsBox3.getroproperty("default Value")), False)
			Else
				Call WriteToReport(micFail, "Value in Comments Box", "Verified Value in comment box is not deleted  "&Trim(objCommentsBox3.getroproperty("default Value")), True)
			End If	
		
		btn_click getObjectInfoFromXML("Cancel_Button", objectsFile, "Value"), getObjectInfoFromXML("Cancel_Button", objectsFile, "Description")

		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(60) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		Wait 2
		Set objPage4 = Browser("name:=Collections Workbench").Page("title:=Collections Workbench").Frame("html id:=ptifrmtgtframe")
		'Set objTable4 = objPage3.WebTable("class:=PSLEVEL1GRIDWBO","column names:=Conversations  Personalize.*","index:=0").WebTable("column names:=More Info Unit Cust ID.*","index:=0").WebTable("class:=psprintgrid","html id:=gbCWB_CONVR_VW\$0").WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		Set objTable4 = objPage3.WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
		intRowCt3 = objTable4.RowCount
		For intCt3 = 0 To intRowCt3
			strCellData3 = objTable4.GetCellData(intCt3,5)
			If StrComp(descriptionVal,Trim(strCellData3),1)=0 Then
				objTable4.WebElement("html tag:=IMG","name:=CWB_CONVR_WRK_LINK1\$IMG\$"&intCt3-1).Click
				Exit For
			End If
		Next

		If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CONVER_DESCRLONG\$0").Exist(60) Then
			Call WriteToReport(micPass, "Conversations Page", "Conversations Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Conversations Page", "Failed to load Conversations Page", True)
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_DESCRLONG\$0").Exist(30) Then

			Set objCommentsBox3 = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_DESCRLONG\$0")
			
			bCommentsBox3 = Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame.*").WebEdit("html id:=CUST_CONVER_DESCRLONG\$0").GetROProperty("default Value")
			If bCommentsBox3 = GlobalDictionary("CommentsBox2") Then
				Call WriteToReport(micPass, "Value in Comments Box", "Verified Value in comment box was edited. "&Trim(objCommentsBox3.getroproperty("default Value")), False)
			Else
				Call WriteToReport(micFail, "Value in Comments Box", "Verified Value in comment box is not correct.  "&Trim(objCommentsBox3.getroproperty("default Value")), True)
			End If					
			End If
			'Ther is nothing in steps about verifying comment box is deleted, code above cancels deletion
			'If bCommentsBox3 = "" Then
			'	Call WriteToReport(micPass, "Value in Comments Box", "Verified Value in comment box is deleted  "&Trim(objCommentsBox3.getroproperty("default Value")), False)
			'Else
			'	Call WriteToReport(micFail, "Value in Comments Box", "Verified Value in comment box is not deleted  "&Trim(objCommentsBox3.getroproperty("default Value")), True)
			'End If	
		End If

	End If

	On Error GoTo 0
End Function

'**************************************************************************************************************
''' <summary> 
''' SubscriptionBill is to validtate the all Actions in BI01_05 
''' </summary>
''' <author>SWETHA RAVOORI Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'05/29/2018			Eric Trout	Updated objects due to PeopleSoft upgrade
'07/12/2018			Eric Trout  Changed out WebList Select to use Link on bottom of page instead due to it not recognizing Selection in WebList
'**************************************************************************************************************
Public Function SubscriptionBill()
	Dim tcObjective, ACCNT1, DEPT1
	Dim bSetSecure, IDNT, ACCNT, DEPT, Invoice, identifierValidate, qtyValidate, tableValidate, shipToValidate
	Dim shipToLoc, recordCount, arrRecordValues, fieldValues

	tcObjective="Edit Subscription Bill - Single line - Single AR Dist: Invalid Chartfield Combo,Create Subscription Bill - Single line - Multiple AR Distr,Create Subscription Bill - Multiple line - multiple AR Distr,Create Subscription Bill - Multiple line - multiple AR Distr"
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), False
    WriteToReport micDone, "Subscription Bill", "Starting SubscriptionBill", False
    If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		setValue_WebEdit getObjectInfoFromXML("business_unit", objectsFile, "Value"),GlobalDictionary("businessunit"), False, getObjectInfoFromXML("business_unit", objectsFile, "Description")
		Wait 3
		btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
		Invoice=Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT1\$0").GetROProperty("innerhtml")
        If IsObjectExist(getObjectInfoFromXML("invoice_id", objectsFile, "Value"), getObjectInfoFromXML("invoice_id", objectsFile, "Description")) = True Then
            Call WriteToReport (micPass, "Invoice Captured is " & Invoice & "", "", True)
        Else
            Call WriteToReport (micFail, "Invoice is not Captured", "", True)
        End If

        click_Link getObjectInfoFromXML("invoice_id", objectsFile, "Value"), getObjectInfoFromXML("invoice_id", objectsFile, "Description")
        If isObjectExist(getObjectInfoFromXML("copy_bill", objectsFile, "Value"), getObjectInfoFromXML("copy_bill", objectsFile, "Description")) = True Then
        	WriteToReport micPass, "Copy Single Bill Page loaded successfully", "Copy Single Bill Page loaded successfully", False
        Else
            WriteToReport micFail, "Copy Single Bill Page not loaded", "Copy Single Bill Page loading failed, so failing the test case", True
    		Exit Function
        End If

		btn_click getObjectInfoFromXML("copy_bill", objectsFile, "Value"), getObjectInfoFromXML("copy_bill", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
		click_Link getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Value"), getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Description")
		
		Wait 2
		
		'Check for link an click
		If Browser("creationtime:=1").Page("index:=1").Link("name:=Line - Info 1").exist(20) Then
			Browser("creationtime:=1").Page("index:=1").Link("name:=Line - Info 1").Click		
		End If
		'webList_select getObjectInfoFromXML("Line_Info111", objectsFile, "Value"), "Line - Info 1", ("Line - Info 1 selection from weblist")
		Wait 1
		If Browser("creationtime:=1").Page("index:=1").WebElement("class:=PTCPSCROLLAREAHEADER", "innertext:=Bill Line").Exist(120) Then
			Call WriteToReport(micPass, "Line info 1 Page loaded Successfully", "Line info 1 Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Line info 1 Page not loaded Successfully", "Failed to load Line info 1 Page", True)
		End If

		Wait 3
        identifierValidate = Browser("creationtime:=1").Page("index:=1").WebEdit("class:=PSEDITBOX.*","html id:=BI_LINE_IDENTIFIER\$0","html tag:=INPUT").GetROProperty("default value")
		qtyValidate = Browser("creationtime:=1").Page("index:=1").WebEdit("class:=PSEDITBOX","html id:=BI_LINE_QTY\$0").GetROProperty("default value")
		tableValidate = Browser("creationtime:=1").Page("index:=1").WebEdit("class:=PSEDITBOX.*","html id:=DERIVED_WORK_BI_IDENTIFIER_SEL\$0").GetROProperty("default value")

		'''SQL QUERY TO VALIDATE VALUES'''''
		recordCount = dbFetchInvoiceProperties(GlobalDictionary("businessunit"), Invoice)
        If IsArrayEmpty(recordCount) Then
        	GlobalDictionary("dataAvailable") = False
          	Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
           	Exit Function
       	Else
          	GlobalDictionary("dataAvailable") = True
			If Trim(recordCount(0)) = Trim(identifierValidate) Then
			    WriteToReport micPass, "Identifier Value is " & identifierValidate & "", "Identifier Value is Validated successfully", False
			Else
			    WriteToReport micFail, "Identifier Value is not Validated", "Identifier Value is Validation failed", False
			End If

			If CInt(recordCount(1)) = CInt(qtyValidate) Then
			     WriteToReport micPass, "Quantity Value  is " & qtyValidate & "", "Quantity Value is Validated successfully", False
			Else
			     WriteToReport micFail, "Quantity Value ", "Quantity Value is Validation failed", False
			End If

			If Trim(recordCount(2)) = Trim(tableValidate) Then
			    WriteToReport micPass, "Table Value is " & tableValidate & "", "Table Value is Validated successfully", False
			Else
			      WriteToReport micFail, "Table Value ", "Table Value is Validation failed", False
			End If
		End If

		click_Link getObjectInfoFromXML("Tax_link", objectsFile, "Value"), getObjectInfoFromXML("Tax_link", objectsFile, "Description")
        If Browser("creationtime:=1").Page("index:=1").WebEdit("class:=PSEDITBOX.*","html id:=BI_LINE_SHIP_TO_CUST_ID\$0").Exist(30) Then
            Call WriteToReport(micPass, "Tax link Page loaded Successfully", "Tax link Page loaded Successfully", False)
        Else
            Call WriteToReport(micFail, "Tax link Page not loaded Successfully", "Failed to load Tax link Page", True)
        End If

		shipToValidate = Browser("creationtime:=1").Page("index:=1").WebEdit("class:=PSEDITBOX.*","html id:=BI_LINE_SHIP_TO_CUST_ID\$0").GetROProperty("default value")
		shipToLoc = Browser("creationtime:=1").Page("index:=1").WebEdit("class:=PSEDITBOX.*","html id:=BI_LINE_SHIP_TO_ADDR_NUM\$0").GetROProperty("default value")
		recordCount = dbFetchInvoiceProperties(GlobalDictionary("businessunit"),Invoice)
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			If Trim(recordCount(3)) = Trim(shipToValidate) Then
				WriteToReport micPass, "Ship to Value is equal to " & shipToValidate & "", "Ship to Value is Validated successfully", False
			Else
				WriteToReport micFail, "Ship to  Value is not Validated", "Ship to Value is Validation failed", False
			End If

			If Trim(recordCount(4)) = Trim(shipToLoc) Then
				WriteToReport micPass, "Ship to location Value is equal to  "&shipToLoc&"", "Ship to location Value is Validated successfully", False
			Else
				WriteToReport micFail, "Ship to location Value is not Validated", "Ship to location Value is Validation failed", False
			End If
		End If

		Wait 3
		webList_select getObjectInfoFromXML("Line_Misc_Info", objectsFile, "Value"), "Line - Misc Info", getObjectInfoFromXML("Line_Misc_Info", objectsFile, "Description")		
		If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_LINE_END_DT\$0").Exist(30) Then
			Call WriteToReport(micPass, "Line Misc Info Page loaded Successfully", "Line Misc Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Line Misc Info Page not loaded Successfully", "Failed to load Line Misc Info Page", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("End_Date", objectsFile, "Value"),Date,false, getObjectInfoFromXML("Start_Date", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Start_Date", objectsFile, "Value"),Date,false, getObjectInfoFromXML("End_Date", objectsFile, "Description")
		webList_select getObjectInfoFromXML("Acctg_Rev_Distribution", objectsFile, "Value"),"Acctg - Rev Distribution", getObjectInfoFromXML("Acctg_Rev_Distribution", objectsFile, "Description")
		If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=ACCOUNT.*", "class:=PSEDITBOX.*").Exist(30) Then
			Call WriteToReport(micPass, "Acctg Rev Distribution Page loaded Successfully", "Acctg Rev Distribution Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Acctg Rev Distribution Page not loaded Successfully", "Failed to load Acctg Rev Distribution Page", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("Account_invalid", objectsFile, "Value"), GlobalDictionary("Accountinvalid"), False, getObjectInfoFromXML("Account_invalid", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Dept_ID_invalid", objectsFile, "Value"), GlobalDictionary("DeptIDinvalid"), False, getObjectInfoFromXML("Dept_ID_invalid", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Click_Save_valid", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_valid", objectsFile, "Description")
		Wait 3
		btn_click getObjectInfoFromXML("Click_Ok_ChartField", objectsFile, "Value"), getObjectInfoFromXML("Click_Ok_ChartField", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Account_valid", objectsFile, "Value"), GlobalDictionary("Accountvalid"), False, getObjectInfoFromXML("Account_valid", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Department_ID_valid", objectsFile, "Value"), GlobalDictionary("DepartmentIDvalid"), False, getObjectInfoFromXML("Department_ID_valid", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Click_Save_valid", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_valid", objectsFile, "Description")
		wait 1
		'Check for link an click
		If Browser("creationtime:=1").Page("index:=1").Link("name:=Line - Info 1").exist(20) Then
			Browser("creationtime:=1").Page("index:=1").Link("name:=Line - Info 1").Click		
		End If
		wait 1
		'webList_select getObjectInfoFromXML("Line_Info1_Add", objectsFile, "Value"), "Line - Info 1", getObjectInfoFromXML("Line_Info1_Add", objectsFile, "Description")
		If Browser("creationtime:=1").Page("index:=1").WebButton("class:=PSPUSHBUTTONTBSAVE PSPUSHBUTTONTBSAVEA.*", "html id:=#ICSave").Exist(30) Then
			Call WriteToReport(micPass, "Line info 1 Page loaded Successfully", "Line info 1 Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Line info 1 Page not loaded Successfully", "Failed to load Line info 1 Page", True)
		End If          

		Wait 5
		''''')*)()&*)&*)&*)&******************************************)(*)(**&)(&)&)
		element_Click getObjectInfoFromXML("Add_Line", objectsFile, "Value"), getObjectInfoFromXML("Add_Line", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Click_ok_Decimal", objectsFile, "Value"), getObjectInfoFromXML("Click_ok_Decimal", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Table_ID_Add", objectsFile, "Value"), GlobalDictionary("TableIDAdd"), False, getObjectInfoFromXML("Table_ID_Add", objectsFile, "Description")
		btn_click getObjectInfoFromXML("View_All", objectsFile, "Value"), getObjectInfoFromXML("View_All", objectsFile, "Description")
		Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_LINE_IDENTIFIER\$1").Set (identifierValidate)
		setValue_WebEdit getObjectInfoFromXML("Quantity_Value_Add1", objectsFile, "Value"), GlobalDictionary("QuantityAdd"), False, getObjectInfoFromXML("Quantity_Value_Add1", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Table_ID_Add1", objectsFile, "Value"), GlobalDictionary("TableIDAdd"), False, getObjectInfoFromXML("Table_ID_Add1", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Unit_Price_Add1", objectsFile, "Value"), GlobalDictionary("UnitPriceAdd"), False, getObjectInfoFromXML("Unit_Price_Add1", objectsFile, "Description")
		webList_select getObjectInfoFromXML("Acctg_Rev_Distribution", objectsFile, "Value"), "Acctg - Rev Distribution", getObjectInfoFromXML("Acctg_Rev_Distribution", objectsFile, "Description")
		ACCNT1=Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=ACCOUNT\$0","html tag:=INPUT").GetROProperty("default value")
		DEPT1=Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=DEPTID\$0","html tag:=INPUT").GetROProperty("default value")
		Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=ACCOUNT\$1","html tag:=INPUT").Set (ACCNT1)
		Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=DEPTID\$1","html tag:=INPUT").Set (DEPT1)
		webList_select getObjectInfoFromXML("Line_Info1_Add", objectsFile, "Value"), "Line - Info 1", getObjectInfoFromXML("Line_Info1_Add", objectsFile, "Description")
		If Browser("creationtime:=1").Page("index:=1").WebButton("class:=PSPUSHBUTTONTBSAVE PSPUSHBUTTONTBSAVEA.*", "html id:=#ICSave").Exist(30) Then
			Call WriteToReport(micPass, "Line info 1 Page loaded Successfully", "Line info 1 Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Line info 1 Page not loaded Successfully", "Failed to load Line info 1 Page", True)
		End If

		element_Click getObjectInfoFromXML("Delete_Line1", objectsFile, "Value"), getObjectInfoFromXML("Delete_Line1", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Click_Ok_Delete", objectsFile, "Value"), getObjectInfoFromXML("Click_Ok_Delete", objectsFile, "Description")
		
		If Browser("creationtime:=1").Page("index:=1").Link("name:=Header - Info 1").Exist(30) Then
			Browser("creationtime:=1").Page("index:=1").Link("name:=Header - Info 1").Click
		End If
		
		'element_Click getObjectInfoFromXML("Header_Info1_Status", objectsFile, "Value"), getObjectInfoFromXML("Header_Info1_Status", objectsFile, "Description")
		If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_BILL_STATUS").Exist(40) Then
			Call WriteToReport(micPass, "Header info 1 Page loaded Successfully", "Header info 1 Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Header info 1 Page not loaded Successfully", "Failed to load Header info 1 Page", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("Status_RDY", objectsFile, "Value"),GlobalDictionary("StatusRDY"),false, getObjectInfoFromXML("Status_RDY", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Click_Save", objectsFile, "Value"), getObjectInfoFromXML("Click_Save", objectsFile, "Description")
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Finalize and Print Invoices 
''' </summary>
''' <author> Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function FinalizeandPrintInvoices()
	Dim Runcontrolid, runStatus
	Dim processInstance, processInstance1, processInstance2
	Dim journalID, sql, journal_ID, rows
	Dim objNextBtn, objTable, objTable1, accnt, dept, completed, objProcessing 
	Dim invoiceId, invoiceId1, invoiceId2

	Call  WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)

	'Select Single Action Invoice from the main menu
	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_BillingGenInvSingleAction")
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))	
	If Browser("CreationTime:=0").Page("title:=Single Action Invoice").PSFrame("name:=TargetContent").WebElement("html id:=app_label","html tag:=H1").Exist(60) Then
   		Call WriteToReport (micPass, "Single Action Invoice page is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Single Action Invoice page is not Loaded", "", True)
		Exit Function
	End If

	'Select run control id
	btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
	Runcontrolid=Browser("Creationtime:=0").Page("index:=1").PSFrame("name:=TargetContent").WebTable("html id:=PTSRCHRESULTS","html tag:=TABLE").GetCellData(10,1)
    If Trim(Runcontrolid) <> "" Then
        Call WriteToReport (micPass, "Runcontrol ID", "Runcontrol ID Selected is " & Runcontrolid & "", True)
	Else
		Call WriteToReport (micFail, "Runcontrol ID is not Selected", "", True)
	End If

    btn_click getObjectInfoFromXML("Runcontrolid_link", objectsFile, "Value"), getObjectInfoFromXML("Runcontrolid_link", objectsFile, "Description")
    If Browser("creationtime:=0").Page("index:=1").PSFrame("name:=TargetContent").WebButton("name:=Run","html tag:=INPUT").Exist(60) Then
        Call WriteToReport (micPass, "Single Action Invoice Page for Selecting Selection Parameters is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Single Action Invoice Page for Selecting Selection Parameters is not Loaded Successfully", "", True)
    End If

	'Selection Parameters   
    Verify_ClickRadioBtn getObjectInfoFromXML("Processingdate", objectsFile, "Value"), getObjectInfoFromXML("Processingdate", objectsFile, "Description"), "P"
    Verify_ClickRadioBtn getObjectInfoFromXML("PostingAction", objectsFile, "Value"), getObjectInfoFromXML("PostingAction", objectsFile, "Description"), "L"
    Verify_ClickRadioBtn getObjectInfoFromXML("All", objectsFile, "Value"), getObjectInfoFromXML("All", objectsFile, "Description"), "ALL"
    setValue_WebEdit getObjectInfoFromXML("Unit_selectionparameters_TXT", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Unit_selectionparameters_TXT", objectsFile, "Description")
    btn_click getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
    btn_click getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Value"), getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Description")
    If Browser("CreationTime:=0").Page("index:=1").PSFrame("html id:=ptModFrame_0").WebElement("innerhtml:=User ID","html tag:=SPAN").Exist(30) Then
		Call WriteToReport (micPass, "Process Scheduler Page is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Process scheduler Page is not Loaded Successfully", "", True)
    End If

    check_CheckBox getObjectInfoFromXML("SingleActionInvoice_CHKBOX", objectsFile, "Value"), getObjectInfoFromXML("SingleActionInvoice_CHKBOX", objectsFile, "Description")
    btn_click  getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
    Wait 5
    processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
    btn_click getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Description")
    If Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").webbutton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
        Call WriteToReport (micPass,"Process Monitor Page is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Process Monitor Page is not Loaded Successfully", "", True)
	End If

 	runStatus = getStatus(Split(processInstance,":")(1), GlobalDictionary("SignInUser"))
 	If Trim(runStatus) = "Warning" Then
 		'Exit function  ' need confirmation from Rini what if process BIJOB03 runs into warning?
 	End If

  	If Trim(runStatus) <> "No Success"  Then ' added trim

	   	'Select Report Manager from the main menu
	   	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_ReportManager")
		SelectMainMenu1(GlobalDictionary("MainMenuSelection"))

		'Navigating to CDW Invoice Status Report 
		Wait 3
		btn_click getObjectInfoFromXML("Administration_Tab", objectsFile, "Value"), getObjectInfoFromXML("Administration_Tab", objectsFile, "Description")
		Set objTable = Browser("CreationTime:=0").Page("title:=Report Manager").PSFrame("title:=Report Distribution Mgr").WebTable("name:=Select")
		objTable.highlight
		objTable.ChildItem(2, 4, "Link", 0).Click
		Wait 5
		ReadandVerifyPDFfile ("FINALINV")

		'Create Acctng Entries
		GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_BillingGenInvCreateAccountingEntries" )	
		SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
		If Browser("CreationTime:=0").Page("title:=Create Accounting Entries").PSFrame("name:=TargetContent").WebElement("innertext:=Load GL Acctng Entries", "html tag:=H1").Exist(30) Then
	        Call WriteToReport (micPass, "Load GL Acctng Entries Page is Loaded Successfully", "", True)
		Else
			Call WriteToReport (micFail, "Load GL Acctng Entries Page is not Loaded Successfully", "", True)
		End If

		'Select run control id
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Runcontrolid=Browser("Creationtime:=0").Page("index:=1").PSFrame("name:=TargetContent").WebTable("html id:=PTSRCHRESULTS", "html tag:=TABLE").GetCellData(15,1)
	    If Trim(Runcontrolid) <> "" Then
	    	Call WriteToReport (micPass,"Runcontrol ID", "Runcontrol ID Selected is " & Runcontrolid & "", True)
	  	Else
		    Call WriteToReport (micFail, "Runcontrol ID is not Selected", "", True)
		End If

		'Selection Parameters
	    btn_click getObjectInfoFromXML("AcctngEntries_link", objectsFile, "Value"), getObjectInfoFromXML("AcctngEntries_link", objectsFile, "Description")
	    If Browser("creationtime:=0").Page("index:=1").PSFrame("name:=TargetContent").WebButton("name:=Run","html tag:=INPUT").Exist(30) Then
	        Call WriteToReport (micPass,"Create Accounting Entries Page for Selecting Load GL Selection Parameters is Loaded Successfully","", True)
		Else
	    	Call WriteToReport (micFail, "Create Accounting Entries Page for Selecting Load GL Selection Parameters is not Loaded Successfully", "", True)
		End If

	    Verify_ClickCheckBox getObjectInfoFromXML("PrintLoadGLReport_CHKBox", objectsFile, "Value"), getObjectInfoFromXML("PrintLoadGLReport_CHKBox", objectsFile, "Description")
	    WebList_select getObjectInfoFromXML("CsonReport_weblist", objectsFile, "Value"),"Transaction Currency", getObjectInfoFromXML("CsonReport_weblist", objectsFile, "Description")
	    setValue_WebEdit getObjectInfoFromXML("Unit_LoadGLSelection_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Unit_LoadGLSelection_TXT", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("ALLINVBills_WebElement", objectsFile, "Value"), getObjectInfoFromXML("ALLINVBills_WebElement", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Value"), getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Description")
		If Browser("CreationTime:=0").Page("index:=1").WebElement("innerhtml:=User ID","html tag:=SPAN").Exist(30) Then
		    Call WriteToReport (micPass, "Process Scheduler Page is Loaded Successfully", "", True)
		Else
			Call WriteToReport (micFail, "Process scheduler Page is not Loaded Successfully", "", True)
		End If

	    Wait 3
	    check_CheckBox getObjectInfoFromXML("CurrencyConv_Process_CHKBox", objectsFile, "Value"), getObjectInfoFromXML("CurrencyConv_Process_CHKBox", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
	    Browser("creationtime:=0").Sync
	    If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").Exist(45) Then
	   	   processInstance1 = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
	       btn_click getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Description")
	    Else
	       Call WriteToReport (micFail, "Process instance number", "Process instance number is not displayed", True)
	       Exit Function
	   	End If

	    If Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").Webbutton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
            Call WriteToReport (micPass, "Process Monitor Page is Loaded Successfully", "", True)
		Else
			Call WriteToReport (micFail, "Process Monitor Page is not Loaded Successfully", "", True)
		End If

	 	runStatus = getStatus(Split(processInstance1,":")(1),GlobalDictionary("SignInUser"))
	   	If Trim(runStatus) = "Warning" Then
	 		'Exit function
	 	End If

		login(GlobalDictionary("SignInUser1"))

		'Generate Journals
		GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_GLGenerateJournals")
		SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
		Browser("creationtime:=0").Sync
		If Browser("CreationTime:=0").Page("title:=Generate Journals").PSFrame("name:=TargetContent").WebElement("innertext:=Generate Journals","html tag:=H1").Exist(30) Then
			Call WriteToReport (micPass,"Generate Journals Page is Loaded Successfully", "", True)
	 	Else
			Call WriteToReport (micFail, "Generate Journals Page is not Loaded Successfully", "", True)
		End If

		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 2
		Browser("creationtime:=0").Page("index:=1").Link("html tag:=A", "name:=1099CORR2012").click
		Browser("creationtime:=0").Sync
		If Browser("CreationTime:=0").Page("title:=Generate Journals").PSFrame("name:=TargetContent").WebElement("innertext:=Generate Journals Request", "html tag:=SPAN").Exist(30) Then
			Call WriteToReport (micPass,"Generate Journals Request Page is Loaded Successfully","", True)
		Else
			Call WriteToReport (micFail, "Generate Journals Request Page is not Loaded Successfully", "", True)
		End If

		check_CheckBox getObjectInfoFromXML("Edit_JournalProcessingOption_CHKBox", objectsFile, "Value"), getObjectInfoFromXML("Edit_JournalProcessingOption_CHKBox", objectsFile, "Description")
		Verify_ClickRadioBtn getObjectInfoFromXML("Always_ProcessFrequency_RadioBtn", objectsFile, "Value"), getObjectInfoFromXML("Always_ProcessFrequency_RadioBtn", objectsFile, "Description"), "A"
		setValue_WebEdit getObjectInfoFromXML("SetID_PRP_TXT", objectsFile, "Value"), "SHARE", False, getObjectInfoFromXML("SetID_PRP_TXT", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("AccountingDefinitionName_TXT", objectsFile, "Value"), "BIDEFN", False, getObjectInfoFromXML("AccountingDefinitionName_TXT", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ApplicationUnit_TXT", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("ApplicationUnit_TXT", objectsFile, "Description")
		WebList_select getObjectInfoFromXML("FromDateOption_weblist", objectsFile, "Value"), "Begin Date - From Period", getObjectInfoFromXML("FromDateOption_weblist", objectsFile, "Description")
		Wait 1
		WebList_select getObjectInfoFromXML("ToDateOption_weblist", objectsFile, "Value"), "End Date - To Period", getObjectInfoFromXML("ToDateOption_weblist", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Value"), getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Description")
		Browser("creationtime:=0").Sync
		If Browser("CreationTime:=0").Page("index:=1").PSFrame("html id:=ptModFrame_0").WebElement("innerhtml:=User ID", "html tag:=SPAN").Exist(30) Then
		    Call WriteToReport (micPass, "Process Scheduler Page is Loaded Successfully", "", True)
		Else
		    Call WriteToReport (micFail, "Process scheduler Page is not Loaded Successfully", "", True)
		End If

		check_CheckBox getObjectInfoFromXML("FS_JGEN_ProcessScheduler", objectsFile, "Value"), getObjectInfoFromXML("FS_JGEN_ProcessScheduler", objectsFile, "Description")
		btn_click getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
		Browser("creationtime:=0").Sync
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").Exist(40) Then
			processInstance2 = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
		    btn_click getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Description")
		    Browser("creationtime:=0").Sync
		Else
		    Call WriteToReport (micFail, "Process instance number", "Process instance number is not displayed", True)
		    Exit Function
		End If

		If Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").webbutton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
			Call WriteToReport (micPass, "Process Monitor Page is Loaded Successfully", "", True)
		Else
			Call WriteToReport (micFail, "Process Monitor Page is not Loaded Successfully", "", True)
		End If
		
		Wait 3
		runStatus = getStatus(Split(processInstance2, ":")(1), GlobalDictionary("SignInUser1"))
		If Trim(runStatus) = "Warning" Then
			'Exit function
		End If

	   	'Step 25
	   	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_BillingRevEntriesbyJournal") 
		SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
		journalID = dbGetJournalId(Trim(Split(processInstance2, ":")(1)))
		If dtSheetExist(GlobalDictionary("DBsheetname")) Then
	        rows = datatable.GetSheet(GlobalDictionary("DBsheetname")).GetRowCount	        
	        If rows > 0 Then
	        	GlobalDictionary("dataAvailable") = True
	        Else
	       		GlobalDictionary("dataAvailable") = False
		        Exit Function
	        End If
        End If

		journal_ID=DataTable.Value("JOURNAL_ID", "JournalID_" & Trim(Split(processInstance2, ":")(1)))
		If Trim(journal_ID) <> "" Then
	       	Call WriteToReport (micPass, "journalID", "journalID is " & journalID & "", True)
		Else
			Call WriteToReport (micFail, "journalID is not captured", "", True)
        End If

        setValue_WebEdit getObjectInfoFromXML("Unit_Journals", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Unit_Journals", objectsFile, "Description")
        setValue_WebEdit getObjectInfoFromXML("JournalID_Journals", objectsFile, "Value"), journal_ID, False, getObjectInfoFromXML("JournalID_Journals", objectsFile, "Description")
        btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
        btn_click getObjectInfoFromXML("JournalID_Link", objectsFile, "Value"), getObjectInfoFromXML("JournalID_Link", objectsFile, "Description")
        'Set objNextBtn = Browser("CreationTime:=0").Page("title:=Review Entries by Journal").PSFrame("name:=TargetContent").WebButton("name:=Next in List")
		Browser("title:=Review Entries by Journal").Sync
		Set objNextBtn = Browser("title:=Review Entries by Journal").Page("title:=Review Entries by Journal").WebButton("html id:=#ICNextInList")
		completed = False

		If objNextBtn.Exist(30) Then
			Do While objNextBtn.Object.isDisabled = False Or completed = False
				Set objTable = Browser("CreationTime:=0").Page("title:=Review Entries by Journal").PSFrame("html id:=ptifrmtgtframe").WebTable("html id:=tdgblBI_ACCT_JRNL_VW.*")
				invoiceId = objTable.GetCellData(1,2)
				Print invoiceId
				If Trim(invoiceId) = invoiceId1 or Trim(invoiceId) = invoiceId2 Then
					Set objTable1 = Browser("CreationTime:=0").Page("title:=Review Entries by Journal").PSFrame("html id:=ptifrmtgtframe").WebTable("html id:=tdgbrBI_ACCT_JRNL_VW.*")
					accnt = objTable1.GetCellData(1,1)
					If Trim(accnt) = "" Then
						Call WriteToReport (micFail, "Account is blank for the invoice id " & invoiceId & "", "", True)
					Else
						Call WriteToReport (micPass,"Account is "  & accnt & "  for the invoice id " & invoiceId & "", "", True)
					End If

					dept = objTable1.GetCellData(1,2)
					If Trim(dept) = "" Then
						Call WriteToReport (micFail, "Dept is blank for the invoice id " & invoiceId & "", "", True)
					Else
						Call WriteToReport (micPass, "Dept is " & dept & "  for the invoice id " & invoiceId & "", "", True)
					End If
				End If

				If objNextBtn.Object.isDisabled = True Then
					completed = True
				End If

				If Not completed Then
					'Browser("CreationTime:=0").Page("title:=Review Entries by Journal").PSFrame("name:=TargetContent").WebButton("name:=Next in List").Click
					'Wait 2
					Browser("title:=Review Entries by Journal").Page("title:=Review Entries by Journal").WebButton("html id:=#ICNextInList").Click
					Browser("title:=Review Entries by Journal").Sync

					'Set objProcessing = Browser("CreationTime:=0").Page("title:=Review Entries by Journal").PSFrame("name:=TargetContent").Image("html id:=processing")
					'Do While objProcessing.GetROProperty("visible") = True
					'	Wait 1
					'Loop

					'Wait 2
				End If

				Set objProcessing = Nothing
				Set objTable = Nothing
				Set objTable1 = Nothing
				Set objNextBtn = Nothing
				'Set objNextBtn = Browser("CreationTime:=0").Page("title:=Review Entries by Journal").PSFrame("name:=TargetContent").WebButton("name:=Next in List")
				Set objNextBtn = Browser("title:=Review Entries by Journal").Page("title:=Review Entries by Journal").WebButton("html id:=#ICNextInList")
			Loop
		Else
			Call WriteToReport (micFail, "Fail " & invoiceId&"", "", True)
		End If
   Else 
		Call WriteToReport (micFail, "TEST Case Fails because BIJOB03 Runs into NoSuccess, Invoices Could not be Generated Failing the BIJOB06 and FS_JGEN Processes", "", True) 
   End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Validate the Process to Change Status of a bill  
''' </summary>
''' <author> Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function ValidatetheprocesstoChangeStatusofBills()
	Dim objDesc, Invoice, objTable, Runcontrolid
	Dim procInstance, runStatus, tblPageObj

	Call WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)
	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_BillingMaintainStndrdBilling") 
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("CreationTime:=0").Page("title:=Standard Billing").PSFrame("name:=TargetContent").WebElement("innertext:=Bill Entry", "html tag:=H1").Exist(60) Then
		Call WriteToReport (micPass, "Bill Entry Page is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Bill Entry Page is not Loaded Successfully", "", True)
	End If

	setValue_WebEdit getObjectInfoFromXML("unit_BillEntry_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("unit_BillEntry_TXT", objectsFile, "Description")
	WebList_select getObjectInfoFromXML("StatusBill_Weblist", objectsFile, "Value"),"New Bill", getObjectInfoFromXML("StatusBill_Weblist", objectsFile, "Description")
	btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
	If Browser("creationtime:=0").page("index:=1").WebElement("innertext:=No matching values were found.*","index:=0").Exist(40) Then		
		Call WriteToReport (micFail, "search returns no values", "", True)
		Exit Function
	End If

   '' added if condition to check invoice id - 06/29
   ''''''''''''''''''''''''''''''''''''''''''''''''''''''''' adding if condition if more than one search results displayed in search grid
   	If Browser("CreationTime:=0").Page("title:=Standard Billing").Link("html id:=RESULT1\$0").Exist(30) Then
    	Invoice = Trim(Browser("CreationTime:=0").Page("title:=Standard Billing").Link("html id:=RESULT1\$0").GetROProperty("innertext"))
      	Browser("CreationTime:=0").Page("title:=Standard Billing").Link("html id:=RESULT1\$0").Click
	Else
	   	If Browser("CreationTime:=0").Page("title:=Standard Billing").WebElement("html id:=BI_HDR_INVOICE").Exist(30) Then
	    	Invoice = Browser("CreationTime:=0").Page("title:=Standard Billing").WebElement("html id:=BI_HDR_INVOICE").GetROProperty("innertext")
	   	  	If Trim(Invoice) <> "" Then
		    	Call WriteToReport (micPass,"Invoice","Invoice Captured is "&Invoice&"", True)
			Else
				Call WriteToReport (micFail, "Invoice is empty", "", True)
	        End If
	   	Else
			Call WriteToReport (micFail, "Invoice is not captured", "", True)
         	Exit Function
   		End If
	End If

	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_BillingChangeBillsStatus") 
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("CreationTime:=0").Page("title:=Change Status of Bills").PSFrame("name:=TargetContent").WebElement("innertext:=Bill Status Change").Exist(30) Then
        Call WriteToReport (micPass,"Bill Status Change Page is Loaded Successfully","", True)
	Else
		Call WriteToReport (micFail, "Bill Status change Page is not Loaded Successfully", "", True)
	End If

	btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
	Runcontrolid=Browser("Creationtime:=0").Page("title:=Change Status of Bills").PSFrame("name:=TargetContent").WebTable("html id:=PTSRCHRESULTS", "html tag:=TABLE").GetCellData(10,1)
    If Trim(Runcontrolid) <> "" Then
        Call WriteToReport (micPass,"Runcontrol ID","Runcontrol ID Selected is "&Runcontrolid&"", True)
	Else
		Call WriteToReport (micFail, "Runcontrol ID is not Selected", "", True) 
    End If

    btn_click getObjectInfoFromXML("Runcontrolid_link", objectsFile, "Value"), getObjectInfoFromXML("Runcontrolid_link", objectsFile, "Description")
    If Browser("CreationTime:=0").Page("title:=Change Status of Bills").PSFrame("name:=TargetContent").WebElement("innertext:=Change Status of Bills", "html tag:=SPAN").Exist(45) Then
        Call WriteToReport (micPass, "Change Status of Bills Page is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Change Status of Bills Page is not Loaded Successfully", "", True)
	End If

	Verify_ClickCheckBox getObjectInfoFromXML("New_FromStatus_CHKBox", objectsFile, "Value"), getObjectInfoFromXML("New_FromStatus_CHKBox", objectsFile, "Description")
	Verify_ClickUnCheckBox getObjectInfoFromXML("Ready_FromStatus_CHKBox", objectsFile, "Value"), getObjectInfoFromXML("Ready_FromStatus_CHKBox", objectsFile, "Description")
	WebList_select getObjectInfoFromXML("ToStatus_weblist", objectsFile, "Value"),"Ready Bill", getObjectInfoFromXML("ToStatus_weblist", objectsFile, "Description")
	Verify_ClickRadioBtn getObjectInfoFromXML("InvoicedID_RadioBtn", objectsFile, "Value"), getObjectInfoFromXML("InvoicedID_RadioBtn", objectsFile, "Description"),"INV"
	setValue_WebEdit getObjectInfoFromXML("Unit_CBS_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Unit_CBS_TXT", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("FromInvoice_TXT", objectsFile, "Value"), Invoice, False, getObjectInfoFromXML("FromInvoice_TXT", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("ToInvoice_TXT", objectsFile, "Value"), Invoice, False, getObjectInfoFromXML("ToInvoice_TXT", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Value"), getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Description")
	If Browser("CreationTime:=0").Page("title:=Change Status of Bills").PSFrame("html id:=ptModFrame_0").WebElement("innerhtml:=User ID", "html tag:=SPAN").Exist(30) Then
	    Call WriteToReport (micPass, "Process Scheduler Page is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Process scheduler Page is not Loaded Successfully", "", True)
	End If

	check_CheckBox getObjectInfoFromXML("InvoiceStatusChange_ChkBox", objectsFile, "Value"), getObjectInfoFromXML("InvoiceStatusChange_ChkBox", objectsFile, "Description")
	btn_click getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").Exist(40) Then
		 procInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
		 btn_click getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Description")
	Else
	    Call WriteToReport (micFail, "Process instance number", "Process instance number is not displayed", True)
	    Exit Function
	End If

	If Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").webbutton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
	    Call WriteToReport (micPass, "Process Monitor Page is Loaded Successfully", "", True)
	Else
		Call WriteToReport (micFail, "Process Monitor Page is not Loaded Successfully", "", True)
	End If

	runStatus = getStatus(split(procInstance,":")(1), GlobalDictionary("SignInUser"))
	Set tblPageObj = Browser("creationtime:=0").page("index:=1")
	If countOfElements(tblPageObj, "Link", "html id", "html tag", "PRCSDETAIL_BTN.*", "A", "Details Column is Populated with Details link on for each process listed", False) > 0 Then
  		getObjFromMultipleObjs(tblPageObj, "Link", "html id", "html tag", "PRCSDETAIL_BTN.*", "A", "Details Column is Populated with Details link on for each process listed", 0).click
   		Call WriteToReport (micPass,"Details Link is Clicked Successfully for Process BIIVCSTS", "", True)
 	End If

	If Browser("CreationTime:=0").Page("title:=Process Monitor").WebElement("html id:=ptModTitle_1", "html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Process Detail Page is Loaded Successfully","", True)
	Else
		Call WriteToReport (micFail, "Process Detail Page is not Loaded Successfully", "", True)
	End If

	 'btn_click  getObjectInfoFromXML("Details_link", objectsFile, "Value"), getObjectInfoFromXML("Details_link", objectsFile, "Description")
	 btn_click getObjectInfoFromXML("ViewLogTrace_link", objectsFile, "Value"), getObjectInfoFromXML("ViewLogTrace_link", objectsFile, "Description") 
	 btn_click getObjectInfoFromXML("PdfFile_ViewLogTrace", objectsFile, "Value"), getObjectInfoFromXML("PdfFile_ViewLogTrace", objectsFile, "Description")

	'Reading Pdf File
	ReadandVerifyPDFfile (Invoice)
End Function 

'**************************************************************************************************************
''' <summary> 
''' ReadandVerifyPDFfile Function is to open and verify the PDF log files not 
''' this is used by both FinalizeandPrintInvoices and ValidatetheprocesstoChangeStatusofBills
''' </summary>
''' <author>Jolly Thomas</author>
''' <startstate>Script has clicked on lik to Openfile</startstate>
''' <endstate>Verify text in file</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Private Function ReadandVerifyPDFfile (sVerificationString)
	Dim clipBoard, objFso, otempFile, txt, reqText
	Dim  driverScriptFolder, projectFolder, tempFilePath

	'Click open for PDF file
	If Browser("CreationTime:=0").WinObject("text:=Do you want to open or save.*").Exist Then
		Browser("CreationTime:=0").WinObject("text:=Do you want to open or save.*").WinButton("acc_name:=Open").click
	End If
 
	If Window("regexpwndtitle:= Adobe Acrobat Reader DC").Exist Then
		Window("regexpwndtitle:= Adobe Acrobat Reader DC").WinObject("regexpwndtitle:=AVPageView").highlight
		Call WriteToReport (micPass,"Invoice Status Change Report is Loaded Successfully","", True)
		Window("regexpwndtitle:= Adobe Acrobat Reader DC").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "a" + micCtrlUp
		Wait 2
		Window("regexpwndtitle:= Adobe Acrobat Reader DC").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "c" + micCtrlUp  
	Else
		Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").highlight
		Call WriteToReport (micPass,"Invoice Status Change Report is Loaded Successfully","", True)
		Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "a" + micCtrlUp
		Wait 2
		Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "c" + micCtrlUp
		Browser("CreationTime:=1").Close
	End If

	Set clipBoard = CreateObject("Mercury.Clipboard")
	reqText = clipBoard.GetText
	clipBoard.Clear
	Set clipBoard = Nothing

	Set objFso = CreateObject("Scripting.FileSystemObject")
	driverScriptFolder = objFso.GetParentFolderName(Environment.Value("TestDir"))
	projectFolder = objFso.GetParentFolderName(driverScriptFolder)
	tempFilePath = projectFolder & "\temp.txt"
	Set objFso = CreateObject("Scripting.FileSystemObject")
	Set otempFile = objFso.CreateTextFile(tempFilePath, True)
	otempFile.Write reqText
	otempFile.Close
	Set otempFile = objFso.OpenTextFile(tempFilePath)

	Select Case sVerificationString
		Case "FINALINV"
			Dim isFound, invoiceId1, invoiceId2, rowNum
			isFound = False
			Do Until otempFile.AtEndOfStream
				txt = otempFile.ReadLine
				If InStr(txt, "Invoices interfaced to Bill Trust for RBT:") > 0 Then
					isFound = True
					rowNum = 0
				ElseIf isFound Then
					rowNum = rowNum + 1
					If rowNum = 2 Then
						invoiceId1 = Split(txt," ")(0)
						Call WriteToReport (micPass, "InvoiceID1 captured is " & invoiceId1 & "", "", True)
					ElseIf rowNum = 3 Then
						invoiceId2 = Split(txt," ")(0)
						Call WriteToReport (micPass, "InvoiceID2 captured is " & invoiceId2 & "","", True)
						isFound = False
					End If
				End If
			Loop

		Case Else

			'Find the first instance of string in file
			Do Until otempFile.AtEndOfStream
				txt = otempFile.ReadLine
				Print txt
				If InStr(txt, sVerificationString) > 0 Then
					Call WriteToReport (micPass, sVerificationString & "Was found in file","", False)
					Exit do
				Else
					Call WriteToReport (micFail, sVerificationString & "Was NOT found in file", "", True)
				End If
			Loop
	End Select

	otempFile.Close
	objFso.DeleteFile tempFilePath, True
	Set objFso = Nothing
End Function

'**************************************************************************************************************
''' <summary> 
''' CustomerInfoInvociceForm Function is to verify the AR07_16, AR07_19 Customer Information-[Invoice Form][Preferred Comm Method]
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'01/30/2018         Eric Trout  Updated Credit Line to accept blank value as $0.00
'**************************************************************************************************************
Public Function CustomerInfoInvociceForm()
	Dim i, bSetSecure, custInfoArr, tcObjective, sCreditLimit
	Dim statusActiveInactive, statusContactPage

    bSetSecure = False	
	tcObjective ="Starting Customer Information-[Invoice Form][Preferred Comm Method] "   
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		custInfoArr = dbFetchCustomerDetails(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(custInfoArr) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business Unit With no Data", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
		End If

		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
			Call WriteToReport(micPass, "General Information Page", "General Information Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Information Page", "Failed to load General Information Page", True)
		End If    

		Call click_Lookup_Img_And_Select_Item("Look up SetID.*","SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"),"SetID")    
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","CUST_ALL_VW_CUST_ID",  custInfoArr(0),"CustomerID")
		setValue_WebEdit getObjectInfoFromXML("Name_1", objectsFile, "Value"),custInfoArr(1),bSetSecure, getObjectInfoFromXML("Name_1", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")		
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_SETID").Exist(30) Then
			Call WriteToReport(micPass, "General Info Page", "General Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Info Page", "Failed to load General Info Page", True)
		End If

		verifyValue getObjectInfoFromXML("GeneralInfo_SetID", objectsFile, "Value"), GlobalDictionary("SetID"),"innerhtml","SetID"
		verifyValue getObjectInfoFromXML("GeneralInfo_CustomerID", objectsFile, "Value"), custInfoArr(0),"innerhtml","Customer ID"    	            
		element_dblClick getObjectInfoFromXML("BilltoOptions_WebElement", objectsFile, "Value"), getObjectInfoFromXML("BilltoOptions_WebElement", objectsFile, "Description")		
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Bill To Options", "index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Bill To Options Page", "Bill To Options Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Bill To Options Page", "Failed to load Bill To Options Page", True)
		End If
	End If

	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_SETID").Exist(30) Then
		Call WriteToReport(micPass, "General Info Page", "General Info Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "General Info Page", "Failed to load General Info Page", True)
	End If

	verifyValue getObjectInfoFromXML("GeneralInfo_SetID", objectsFile, "Value"), GlobalDictionary("SetID"),"innerhtml","SetID"
	verifyValue getObjectInfoFromXML("GeneralInfo_CustomerID", objectsFile, "Value"), custInfoArr(0),"innerhtml","Customer ID"    	            
	element_dblClick  getObjectInfoFromXML("BilltoOptions_WebElement", objectsFile, "Value"), getObjectInfoFromXML("BilltoOptions_WebElement", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Bill To Options", "index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Bill To Options Page", "Bill To Options Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Bill To Options Page", "Failed to load Bill To Options Page", True)
	End If

	Call InvoiceLookupvalues()
	btn_click getObjectInfoFromXML("Cancel_Button", objectsFile, "Value"), getObjectInfoFromXML("Cancel_Button", objectsFile, "Description")
	element_dblClick getObjectInfoFromXML("GeneralInfo_WebElement", objectsFile, "Value"), getObjectInfoFromXML("GeneralInfo_WebElement", objectsFile, "Description")
	Browser("creationtime:=0").Sync
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_SETID").Exist(30) Then
		Call WriteToReport(micPass, "General Info Page", "General Info Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "General Info Page", "Failed to load General Info Page", True)
	End If

	If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CUST_PB_WRK_CUST_NAV","index:=0").exist(30) Then	
		WebList_select getObjectInfoFromXML("GeneralInfoLinks_CorrespondenceOptions", objectsFile, "Value"),"0040 - Correspondence Options", getObjectInfoFromXML("GeneralInfoLinks_CorrespondenceOptions", objectsFile, "Description")
	Else
		Call WriteToReport(micFail, "Correspondence Options Page", "GeneralInfoLinks_CorrespondenceOptions Weblist is not found.", True)
	End If
	
	If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CUST_CRSPD_EFF_STATUS\$0").Exist(30) Then
		Call WriteToReport(micPass, "Correspondence Options Page", "Correspondence Options Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Correspondence Options Page", "Failed to load Correspondence Options Page", True)
	End If

	statusActiveInactive = dbFetchCorrespondenceOptionsPage(custInfoArr(0))
	If NOT UBound(statusActiveInactive) = 0 Then
		If statusActiveInactive(3) = "A"  Then
			verifyValue getObjectInfoFromXML("Status_ActiveInactive", objectsFile, "Value"),"Active","selection","Status in Correspondence Options Page"
		Else
		    verifyValue getObjectInfoFromXML("Status_ActiveInactive", objectsFile, "Value"),"InActive","selection","Status in Correspondence Options Page"
		End If
	End If

	element_dblClick getObjectInfoFromXML("GeneralInfo_WebElement", objectsFile, "Value"), getObjectInfoFromXML("GeneralInfo_WebElement", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_SETID").Exist(30) Then
		Call WriteToReport(micPass, "General Info Page", "General Info Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "General Info Page", "Failed to load General Info Page", True)
	End If

	WebList_select getObjectInfoFromXML("GeneralInfoLinks_CreditProfile", objectsFile, "Value"),"0030 - Credit Profile", getObjectInfoFromXML("GeneralInfoLinks_CreditProfile", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CREDIT_CR_LIMIT\$0","index:=0").Exist(60) Then
		Call WriteToReport(micPass, "Credit Profile Page", "Credit Profile Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Credit Profile Page", "Failed to load Credit Profile Page", True)
	End If

	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CREDIT_CR_LIMIT\$0","index:=0").Exist(10) Then
		sCreditLimit = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CREDIT_CR_LIMIT\$0","index:=0").GetROPROPERTY("default value")
		If Trim(sCreditLimit) = "" Then
			sCreditLimit = "$0.00"
		End If
	Else
		Call WriteToReport(micFail, "Credit Limit", "Not displayed on Credit Profile Page", True)
		Exit Function
	End If

    If strcomp(FormatCurrency(custInfoArr(19)),sCreditLimit) = 0 Then
		Call WriteToReport(micPass, "Credit Limit", "The expected value "& FormatCurrency(custInfoArr(19)) &" matches with actual value  " & sCreditLimit, False)
	Else    
		Call WriteToReport(micFail, "Credit Limit", "The expected value "&strExpectedValue&" does not match with actual value  " & sCreditLimit, True) 	             
    End If

	If SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CNTCT_CST_SR_VW_CONTACT_ID", "index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Contact Info Page", "Contact Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Contact Info Page", "Failed to load Contact Info Page", True)
		End If

		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Customer SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("CustomerSetID"), "Customer SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "CUST_CNTCT_VW_CUST_ID_CNTCT", custInfoArr(0), "CustomerID")
		btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
		Wait 2
		click_Link getObjectInfoFromXML("FirstContact_Link", objectsFile, "Value"), getObjectInfoFromXML("FirstContact_Link", objectsFile, "Description")	
	End If	
	  
	If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CONTACT_COMM_METHOD\$0").Exist(30) Then
		Call WriteToReport(micPass, "Customer Contact Page", "Customer Contact Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Customer Contact Page", "Failed to load Customer Contact Page", True)
	End If
	
    statusContactPage = dbFetchContactPage(custInfoArr(0))         
	If Not UBound(statusActiveInactive) = 0 Then
		If statusContactPage(10) = "C"  Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"),"Call","selection","Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "P"  Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"),"Email & Print","selection","Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "E" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"),"Email only","selection","Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "F" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"),"Fax","selection","Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "M" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"),"Standard Mail","selection","Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "R" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"),"XML & Print","selection","Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "I" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"),"XML only","selection","Preferred Communication Method in Customer Contact Page"
		Else
			Call WriteToReport(micFail, "Communication method ", "Preferred Communication method is not Call", True)
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' CustomerInfoARSpecilastContact Function is to verify the AR07_17 Customer Information-AR Specialist and Contact
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function CustomerInfoARSpecilastContact()
 	Dim i, bSetSecure, tcObjective, custInfoArr, Arspecialist

    bSetSecure = False
	tcObjective ="Starting Customer Information-AR Specialist and Contact "   
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		custInfoArr = dbFetchCustomerDetails(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(custInfoArr) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business Unit With no Data", "DB query returned zero records ", True)
			Exit Function
		Else
		    GlobalDictionary("dataAvailable") = True              
		End If

		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
			Call WriteToReport(micPass, "General Information Page", "General Information Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Information Page", "Failed to load General Information Page", True)
		End If

	    Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")    
	    Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "CUST_ALL_VW_CUST_ID", custInfoArr(0), "CustomerID")
	    setValue_WebEdit getObjectInfoFromXML("Name_1", objectsFile, "Value"),custInfoArr(1),bSetSecure, getObjectInfoFromXML("Name_1", objectsFile, "Description")
	    btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_SETID").Exist(60) Then
			Call WriteToReport(micPass, "General Info Page", "General Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Info Page", "Failed to load General Info Page", True)
		End If

		verifyValue getObjectInfoFromXML("GeneralInfo_SetID", objectsFile, "Value"), GlobalDictionary("SetID"), "innerhtml", "SetID"
		verifyValue getObjectInfoFromXML("GeneralInfo_CustomerID", objectsFile, "Value"), custInfoArr(0), "innerhtml", "Customer ID"    	            
		element_dblClick  getObjectInfoFromXML("BilltoOptions_WebElement", objectsFile, "Value"), getObjectInfoFromXML("BilltoOptions_WebElement", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Bill To Options","index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Bill To Options Page", "Bill To Options Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Bill To Options Page", "Failed to load Bill To Options Page", True)
		End If   

		Arspecialist = dbFetchARspecialist(custInfoArr(0))	
		If Not UBound(Arspecialist) = 0 Then
			verifyValue getObjectInfoFromXML("AR_Specialist", objectsFile, "Value"), Arspecialist(1), "default value", "AR Specialist"
			verifyValue getObjectInfoFromXML("Collector_Field", objectsFile, "Value"), Arspecialist(2), "value", "Collector Field"
		End If
	End If

	If SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CNTCT_CST_SR_VW_CONTACT_ID", "index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Contact Info Page", "Contact Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Contact Info Page", "Failed to load Contact Info Page", True)
		End If

		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Customer SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("CustomerSetID"), "Customer SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "CUST_CNTCT_VW_CUST_ID_CNTCT", custInfoArr(0), "CustomerID")
		btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
     	click_Link getObjectInfoFromXML("FirstContact_Link", objectsFile, "Value"), getObjectInfoFromXML("FirstContact_Link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Next in List").Exist(30) Then
			Call WriteToReport(micPass, "Main Contacts Page", "Main Contacts Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Main Contacts Page", "Failed to load Main Contacts Page", True)
		End If

		Call maincontactpage()
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' CustomertInfoContactInfoandProfile Function is to verify the AR07_18 Customer Information-Contact Info and Profile
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function CustomertInfoContactInfoandProfile()
	Dim i, bSetSecure, tcObjective, custInfoArr
    Dim statusContactPage
    Dim str, arr, firstname, lastname, name, nameUI

    bSetSecure = False
	On Error Resume Next
	tcObjective = "Starting Customer Information-Contact Info and Profile "
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
			Call WriteToReport(micPass, "Contact Info Page", "Contact Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Contact Info Page", "Failed to load Contact Info Page", True)
		End If

		custInfoArr = dbFetchCustomerDetails(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(custInfoArr) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business Unit With no Data", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
		End If

		Call click_Lookup_Img_And_Select_Item("Look up SetID.*","SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"),"SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Customer SetID.*","SP_SETID_CLSVW_SETID", GlobalDictionary("CustomerSetID"),"Customer SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","CUST_CNTCT_VW_CUST_ID_CNTCT", custInfoArr(0),"CustomerID")
		btn_click  getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
		Wait 2
		click_Link getObjectInfoFromXML("FirstContact_Link", objectsFile, "Value"), getObjectInfoFromXML("FirstContact_Link", objectsFile, "Description")	
	End If

	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CONTACT_CONTACT_ID").Exist(30) Then
		Call WriteToReport(micPass, "Main Contacts Page", "Main Contacts Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Main Contacts Page", "Failed to load Main Contacts Page", True)
	End If

	statusContactPage = dbFetchContactPage(custInfoArr(0))         
	If Not UBound(statusContactPage) = 0 Then
		str= statusContactPage(5)
		arr=split(str,",")
		firstname=arr(1)
		lastname=arr(0)
		name = Trim(firstname+""+lastname) 
		Set nameUI = eval(getObjectInfoFromXML("CntctPage_Name", objectsFile, "Value"))
		If(InStr(1, nameUI.getRoProperty("default value"), firstname, 1) <> 0 And InStr(1, nameUI.getRoProperty("default value"), lastname, 1) <> 0) Then
			Call WriteToReport(micPass, "Name", "name " & name & " is displayed successfully", False)
		Else
			Call WriteToReport(micPass, "Name", "name " & nameUI.getRoProperty("default value") & " is not displayed successfully the expected name is " & statusContactPage(5), True)
		End If

		verifyValue getObjectInfoFromXML("CntctPage_Title", objectsFile, "Value"), Trim(statusContactPage(6)), "default value", "Title"
		verifyValue getObjectInfoFromXML("CntctPage_Email", objectsFile, "Value"), Trim(statusContactPage(9)), "default value", "Email"	
		verifyValue getObjectInfoFromXML("CntctPage_SalutationCode", objectsFile, "Value"), "", "default value", "Salutation Code Field is Blank"	
		verifyValue getObjectInfoFromXML("CntctPage_Salutation", objectsFile, "Value"), "", "default value","Salutation Field is Blank"

		If statusContactPage(10) = "C"  Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"), "Call", "selection", "Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "P"  Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"), "Email & Print", "selection", "Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "E" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"), "Email only", "selection", "Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "F" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"), "Fax", "selection", "Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "M" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"), "Standard Mail", "selection", "Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "R" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"), "XML & Print", "selection", "Preferred Communication Method in Customer Contact Page"
		ElseIf statusContactPage(10) = "I" Then
			verifyValue getObjectInfoFromXML("Communication_Method", objectsFile, "Value"), "XML only", "selection", "Preferred Communication Method in Customer Contact Page"
		Else
			Call WriteToReport(micFail, "Communication method ", "Preferred Communication method is not Call", True)
		End If

     	verifyValue getObjectInfoFromXML("CntctPage_LangCode", objectsFile, "Value"), "English", "default value", "Language Code"
	End If

	click_Link getObjectInfoFromXML("UserProfile_Link", objectsFile, "Value"), getObjectInfoFromXML("UserProfile_Link", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=User Profile", "index:=0").Exist Then
		Call WriteToReport(micPass, "User Profile Page", "User Profile Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "User Profile Page", "Failed to load User Profile Page", True)
	End If

	On Error Goto 0
End Function

'**************************************************************************************************************
''' <summary> 
''' CustomerInfoTaxExemption Function is to verify the AR07_20 Customer Information-Tax Exemption
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function CustomerInfoTaxExemption()
 	Dim i, bSetSecure, tcObjective, custInfoArr, taxexempt

    bSetSecure = False
	tcObjective = "Starting Customer Information-Tax Exemption "   
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(60) Then
			Call WriteToReport(micPass, "General Information Page", "General Information Page loaded Successfully", False)
		Else
		    Call WriteToReport(micFail, "General Information Page", "Failed to load General Information Page", True)
		End If

		custInfoArr = dbFetchCustomerDetails(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(custInfoArr) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business Unit With no Data", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True              
		End If

		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "CUST_ALL_VW_CUST_ID", custInfoArr(0), "CustomerID")
		setValue_WebEdit getObjectInfoFromXML("Name_1", objectsFile, "Value"), custInfoArr(1), bSetSecure, getObjectInfoFromXML("Name_1", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
		Wait 2
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_SETID").Exist(30) Then
			Call WriteToReport(micPass, "General Info Page", "General Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Info Page", "Failed to load General Info Page", True)
		End If

		verifyValue getObjectInfoFromXML("GeneralInfo_SetID", objectsFile, "Value"), GlobalDictionary("SetID"),"innerhtml","SetID"
		verifyValue getObjectInfoFromXML("GeneralInfo_CustomerID", objectsFile, "Value"),custInfoArr(0),"innerhtml","Customer ID"
		WebList_select getObjectInfoFromXML("GeneralInfoLinks_TaxExemption", objectsFile, "Value"), "0080 - Tax Exempt Certificates", getObjectInfoFromXML("GeneralInfoLinks_TaxExemption", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_EXEMPT_TAX_EXEMPT_CERT\$0","index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Tax Exempt Certificate Info Page", "Tax Exempt Certificate Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Tax Exempt Certificate Info Page", "Failed to load Tax Exempt Certificate Info Page", True)
		End If

		taxexempt = dbFetchTaxExemption(custInfoArr(0))
		If IsArrayEmpty(taxexempt) Then
		   GlobalDictionary("dataAvailable") = False
		   Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", False)
		   Exit Function
		Else
	       GlobalDictionary("dataAvailable") = True
		End If

		If Not UBound(taxexempt) = 0 Then
			 verifyValue getObjectInfoFromXML("ExemptionCrediticate_WebEdit", objectsFile, "Value"),taxexempt(5),"default value","Exemption Certificate"
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' RefundCreditBalanceCreditMemo Function is to verify the AR14_03 Refund Credit Balance - Credit Memo
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function RefundCreditBalanceCreditMemo()
	Dim i, bSetSecure, tcObjective, custInfoArr
	Dim strCaptureItemValue
	Dim intRc, j, intVal, intChecked,intItemRc, strVal
	Dim WorkSheetID, strFlag

    bSetSecure = False
	tcObjective = "Refund Credit Balance - Credit Memo "   
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False

	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
	    Browser("creationtime:=0").Page("index:=1").Link("name:=Add a New Value","index:=0").Click
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Add a New Value","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Create Worksheet Page", "Successfully Navigated to Create Worksheet Page", False)
		Else
            Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
            Exit Function
        End If


		'Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
		'btn_click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"), getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Description")
		'Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events

		''update lookup image properties
		Call click_Lookup_Img_And_Select_Item("Look up Worksheet Business Unit", "SP_BUARWS_CLSVW_WS_BU", GlobalDictionary("BusinessUnit"), "Business Unit")
		
		Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch","name:=Add").Click
		
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=WS_WRK_WS_BUILD","index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Create Worksheet Page", "Create Worksheet Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
		End If

		custInfoArr = dbFetchCustomerIdItemInfo(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(custInfoArr) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", False)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			Call click_Lookup_Img_And_Select_Item("Look up Cust ID.*", "SP_IDCUST_CLSVW_CUST_ID", custInfoArr(1), "Customer")
		End If

		WebList_select getObjectInfoFromXML("Reference_Criteria", objectsFile, "Value"),"Specific Value", getObjectInfoFromXML("Reference_Criteria", objectsFile, "Description")
	 	Call click_Lookup_Img_And_Select_Item("Look up Qual Code.*", "AR_FLD_REF_VW_REF_QUALIFIER_CODE", GlobalDictionary("QualCode"), "Qual Code")
	  	SetItemValue()
		strCaptureItemValue = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=WS_ID_ITEM_REF_VALUE\$0", "index:=0").GetROProperty("default value")
	  	btn_click getObjectInfoFromXML("Build_Button", objectsFile, "Value"), getObjectInfoFromXML("Build_Button", objectsFile, "Description")
	  	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist(30) Then
            Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
        Else
            Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
        End If

		If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Description")) = True Then
          click_Link  getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Description")
       	End If

		If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").Exist(30) Then
			intRc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").RowCount
		Else
			Call WriteToReport(micFail, "Items grid", "Items grid is not displayed", True)
			Exit Function
		End If

		For j = 0 To intRc - 1
			intVal = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebEdit("html id:=WS_ITEM_BAL_AMT\$" & j).GetROProperty("value")
			strVal = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebElement("html id:=WS_ITEM_ITEM\$" & j).GetROProperty("innerhtml")
			If intVal < 0 And StrComp(strVal,strCaptureItemValue,1) = 0 Then
				intChecked = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebCheckBox("html id:=WS_ITEM_ITEM_SELECTED\$" & j).GetROProperty("checked")
			    If intChecked = 0 Then
			    	Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebCheckBox("html id:=WS_ITEM_ITEM_SELECTED\$" & j).Set "ON"
			    End If

		    	Call WriteToReport(micPass, "Negative Amount is Checked", "Negative Amount is checked Successfully", False)
				Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrWS_ITEM\$0").Image("name:=WS_ITEM_ENTRY_TYPE\$prompt\$img\$" & j).Click
				Call ItemListSelection("AUTO_ENT_MT_VW_ENTRY_TYPE", "WOC","Type")
				Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrWS_ITEM\$0").Image("name:=WS_ITEM_ENTRY_REASON\$prompt\$img\$" & j).Click
				Call ItemListSelection("AUTO_RSN_MT_VW_ENTRY_REASON", "REFND","Reason")
				Exit For
			End If
		Next

		WorkSheetID = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").GetROProperty("innertext")
	  	btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
		click_Link getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=REALTIME_WRK_RTM_RUN").Exist(45) Then
			Call WriteToReport(micPass, "Worksheet Action Page", "Worksheet Action Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Worksheet Action Page", "Failed to load Worksheet Action Page", True)
		End If

		WebList_select getObjectInfoFromXML("PostingAction_Weblist", objectsFile, "Value"), "Submit to Workflow", getObjectInfoFromXML("PostingAction_Weblist", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
		Wait 10
		btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
		click_Link getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist Then
			Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
		End If

		strFlag="True"
		Do
			If Browser("creationtime:=0").Page("index:=1").Link("innerhtml:=Pending Write-Off Approval","index:=0").Exist(2) Then
				Dim strCaptureUser, userIDInfoArr, userBox
				Dim intRCount, strCellData, arrCellData, arrWSData, sLinkText

				click_Link getObjectInfoFromXML("PendingWriiteOffApproval_Link", objectsFile, "Value"), getObjectInfoFromXML("PendingWriiteOffApproval_Link", objectsFile, "Description")
				Wait 10
				strCaptureUser = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=Pending").Link("title:=View approver/reviewer information").GetROProperty("innertext")
				userIDInfoArr = dbFetchUserId(strCaptureUser)
				If Not UBound(userIDInfoArr) = 0 Then
					login(userIDInfoArr(1))
				End If

				WriteToReport micPass, "Successfully Logged In", "Successfully Logged In by " & strCaptureUser & " to Approve Writeoffs", False
				Browser("creationtime:=0").Page("index:=1").Image("alt:=Home").Click
				Wait 3

				'''''''''''''''''''''''''''''''''''''''''''
				'Browser("creationtime:=0").Page("index:=1").Link("innertext:=Worklist","index:=1").Click
				SelectMainMenu1(GlobalDictionary("MainMenuSelection6"))

				'''''''''''''''''''''''''''''''''''''''''
				'element_Click getObjectInfoFromXML("WorkList_WebElement", objectsFile, "Value"), getObjectInfoFromXML("WorkList_WebElement", objectsFile, "Description")
				If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=ARMaintWriteOff.*", "index:=1").Exist(40) Then
					Call WriteToReport(micPass, "Worklist Page", "Worklist Page loaded Successfully", False)
				Else
					Call WriteToReport(micFail, "Worklist Page", "Failed to load Worklist Page", True)
				End If

				Wait 15
				intRCount = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").RowCount
				For j = 2 To intRCount
					strCellData = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").GetCellData(j,6)
					arrCellData = Split(strCellData,"WS_ID:")
					arrWSData = Split(arrCellData(1),",")
					If arrWSData(0)= WorkSheetID Then
						sLinkText =	Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").Link("name:=" & strCellData).GetRoProperty("innertext")
						Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").Link("name:=" & strCellData).Click
						Exit For
					End If
				Next

				Call WriteToReport (micPass, "[" & sLinkText & "] Link Found", "The [" & sLinkText & "] Link was found and clicked successfully.", False)
				If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist(45) Then
					Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
				Else
					Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
				End If

				btn_click getObjectInfoFromXML("Approve_Button", objectsFile, "Value"), getObjectInfoFromXML("Approve_Button", objectsFile, "Description")
				Wait 10
				btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
				Wait 10
			Else
				strFlag = "False"
			End If 
		Loop Until strFlag = "False"

		If Browser("creationtime:=0").Page("index:=1").Link("innerhtml:=Approved Write-Off", "index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Approved Write-Off", "All Approved Write-Off done successfully", False)
		Else
			Call WriteToReport(micFail, "Approved Write-Off", "Failed to Approve Write-Off", True)
		End If

		Call login(GlobalDictionary("SignInUser"))
		If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
			If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
				Call WriteToReport(micPass, "Create Worksheet Page", "Successfully Navigated to Create Worksheet Page", False)
			Else
				Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
			End If 

			Call click_Lookup_Img_And_Select_Item("Look up Worksheet Business Unit.*", "SP_BUARWS_CLSVW_WS_BU", GlobalDictionary("BusinessUnit"), "Business Unit")
			setValue_WebEdit getObjectInfoFromXML("Worksheet_WebEdit", objectsFile, "Value"), WorkSheetID, bSetSecure, getObjectInfoFromXML("Worksheet_WebEdit", objectsFile, "Description")
			btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
			If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=WS_WRK_WS_BUILD","index:=0").Exist(30) Then
				Call WriteToReport(micPass, "Create Worksheet Page", "Create Worksheet Page loaded Successfully", False)
			Else
				Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
			End If

			click_Link getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Description")
			If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist(30) Then
				Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
			Else
				Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
			End If

			click_Link getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Description")
			If Browser("creationtime:=0").Page("index:=1").WebList("html id:=REALTIME_WRK_RTM_PROCESS_LIST", "index:=0").Exist(30) Then
				Call WriteToReport(micPass, "Worksheet Action Page", "Worksheet Action Page loaded Successfully", False)
			Else
				Call WriteToReport(micFail, "Worksheet Action Page", "Failed to load Worksheet Action Page", True)
			End If

			WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"), "Batch Standard", getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Description")
			Setting.WebPackage("ReplayType") = 2
			btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
			Setting.WebPackage("ReplayType") = 1
			btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
			If SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True Then
				Dim CurrentDate, processInstance

				If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(45) Then
					Call WriteToReport(micPass, "Request Receivables Update Page", "Successfully Navigated to Request Receivables Update Page", False)
				Else
					Call WriteToReport(micFail, "Request Receivables Update Page", "Failed to load Request Receivables Update Page", True)
				End If

				btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
				click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
				If Browser("creationtime:=0").Page("index:=1").WebList("html id:=POSTING_REQUEST_PROCESS_FREQUENCY\$0","index:=0").Exist(30) Then
					Call WriteToReport(micPass, "Receivable Update Request Page", "Receivable Update Request Page loaded Successfully", False)
				Else
					Call WriteToReport(micFail, "Receivable Update Request Page", "Failed to load Receivable Update Request Page", True)
				End If 
		
				Call click_Lookup_Img_And_Select_Item("Look up Group Unit.*", "SP_BUARGR_CLSVW_GROUP_BU", GlobalDictionary("BusinessUnit"),"Group Unit")
				WebList_select getObjectInfoFromXML("Process_Frequency", objectsFile, "Value"),"Always", getObjectInfoFromXML("Process_Frequency", objectsFile, "Description")
				CurrentDate = Date
				setValue_WebEdit getObjectInfoFromXML("AccountingDate_From", objectsFile, "Value"), CurrentDate,bSetSecure, getObjectInfoFromXML("AccountingDate_From", objectsFile, "Description")
				setValue_WebEdit getObjectInfoFromXML("AccountingDate_To", objectsFile, "Value"), CurrentDate,bSetSecure, getObjectInfoFromXML("AccountingDate_To", objectsFile, "Description")
				btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
				If IsObjectExist (getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Description")) = True Then
					check_CheckBox getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Description")
				End If
	
				btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
				If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").Exist(45) Then
					processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
					btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")	
				Else
					Call WriteToReport(micFail, "Process instance number", "Failed to load Process instance number", True)         
				End If

				If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
					Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
				Else
					Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
				End If

				Wait 3
				getStatusupdateProcessTime "ARUPDATE", split(processInstance,":")(1)
				Call login(GlobalDictionary("SignInUser1"))
				If SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True Then
					If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(45) Then
						Call WriteToReport(micPass, "Request Refund Item Page", "Successfully Navigated to Request Refund Item Page", False)
					Else
						Call WriteToReport(micFail, "Request Refund Item Page", "Failed to load Request Refund Item Page", True)
					End If

					btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
					Wait 3
					click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
					If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(45) Then
						Call WriteToReport(micPass, "Refunds Page", "Refunds Page loaded Successfully", False)
					Else
						Call WriteToReport(micFail, "Refunds Page", "Failed to load Refunds Page", True)
					End If

					Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BUARED_CLSVW_BUSINESS_UNIT", GlobalDictionary("BusinessUnit"), "Business Unit")
					btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
					If IsObjectExist (getObjectInfoFromXML("ARREFUND_Process", objectsFile, "Value"), getObjectInfoFromXML("ARREFUND_Process", objectsFile, "Description")) = True Then
						check_CheckBox getObjectInfoFromXML("ARREFUND_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("ARREFUND_CheckBox", objectsFile, "Description")
					End If

					btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
					If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").Exist(45) Then
						processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
						btn_click  getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
					Else
						Call WriteToReport(micFail, "Process instance number", "Failed to load Process instance number", True)
					End If

					If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
						Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
					Else
						Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
					End If

					getStatusupdateProcessTime "ARREFUND", Split(processInstance,":")(1)
					Call login(GlobalDictionary("SignInUser2"))
					If SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True Then
						If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
							Call WriteToReport(micPass, "Voucher Build Request Page", "Successfully Navigated to Voucher Build Request Page", False)
						Else
							Call WriteToReport(micFail, "Voucher Build Request Page", "Failed to load Voucher Build Request Page", True)
						End If

						btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
						click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
						If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=VCHR_BATCH_RUN_REQUEST_ID","indx:=0").Exist(30) Then
							Call WriteToReport(micPass, "Voucher Build Page", "Voucher Build Page loaded Successfully", False)
						Else
							Call WriteToReport(micFail, "Voucher Build Page", "Failed to load Voucher Build Page", True)
						End If

						setValue_WebEdit getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Value"), GlobalDictionary("RequestId"), bSetSecure, getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Description")
						setValue_WebEdit getObjectInfoFromXML("Description_WebEdit", objectsFile, "Value"), GlobalDictionary("Description"), bSetSecure, getObjectInfoFromXML("Description_WebEdit", objectsFile, "Description")
						setValue_WebEdit getObjectInfoFromXML("FromDate_WebEdit", objectsFile, "Value"), CurrentDate, bSetSecure, getObjectInfoFromXML("FromDate_WebEdit", objectsFile, "Description")
						setValue_WebEdit getObjectInfoFromXML("ToDate_WebEdit", objectsFile, "Value"), CurrentDate, bSetSecure, getObjectInfoFromXML("ToDate_WebEdit", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("ProcessOptions_WebList", objectsFile, "Value"), "Process All Units", getObjectInfoFromXML("ProcessOptions_WebList", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("VoucherSources_WebList", objectsFile, "Value"), "New Voucher Data", getObjectInfoFromXML("VoucherSources_WebList", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("VouchersBuildInterfaces_WebList", objectsFile, "Value"), "All Interfaces", getObjectInfoFromXML("VouchersBuildInterfaces_WebList", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("ContractVoucherAction_WebList", objectsFile, "Value"), "Build Voucher", getObjectInfoFromXML("ContractVoucherAction_WebList", objectsFile, "Description")
						btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
						If IsObjectExist (getObjectInfoFromXML("APVCHRBLD_Process", objectsFile, "Value"), getObjectInfoFromXML("APVCHRBLD_Process", objectsFile, "Description")) = True Then
							check_CheckBox getObjectInfoFromXML("APVCHRBLD_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("APVCHRBLD_CheckBox", objectsFile, "Description")
						End If

						btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
						If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").Exist(45) Then
							processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
							btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")	
						Else
							Call WriteToReport(micFail, "Process instance number", "Failed to load Process instance number", True)         
						End If

						If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
							Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
						Else
							Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
						End If

						Wait 3
						getStatusupdateProcessTime "ARVCHRBLD", Split(processInstance,":")(1)
						If SelectMainMenu1(GlobalDictionary("MainMenuSelection4")) = True Then
							If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(60) Then
								Call WriteToReport(micPass, "Voucher Posting Request Page", "Successfully Navigated to Voucher Posting Request Page", False)
							Else
								Call WriteToReport(micFail, "Voucher Posting Request Page", "Failed to load Voucher Posting Request Page", True)
							End If

							btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
							click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
							If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(30) Then
								Call WriteToReport(micPass, "Voucher Posting Request Page", "Successfully Navigated to Voucher Posting Request Page", False)
							Else
								Call WriteToReport(micFail, "Voucher Posting Request Page", "Failed to load Voucher Posting Request Page", True)
							End If

							setValue_WebEdit getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Value"), GlobalDictionary("RequestId"), bSetSecure, getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Description")
							setValue_WebEdit getObjectInfoFromXML("Description_WebEdit", objectsFile, "Value"), GlobalDictionary("Description"), bSetSecure, getObjectInfoFromXML("Description_WebEdit", objectsFile, "Description")
							WebList_select getObjectInfoFromXML("ProcessFrequency_WebList", objectsFile, "Value"), "Always Process", getObjectInfoFromXML("ProcessFrequency_WebList", objectsFile, "Description")
							btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
							Wait 5
							If IsObjectExist (getObjectInfoFromXML("APPSTVCHR_Process", objectsFile, "Value"), getObjectInfoFromXML("APPSTVCHR_Process", objectsFile, "Description")) = True Then
								check_CheckBox getObjectInfoFromXML("APPSTVCHR_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("APPSTVCHR_CheckBox", objectsFile, "Description")
							End If

							btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
							If  Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").Exist(45) Then
								processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
								btn_click  getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
							Else
								Call WriteToReport(micFail, "Process instance number", "Failed to load Process instance number", True)
								Exit Function
							End If

							If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
								Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
							Else
								Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
							End If

							Wait 3
							getStatusupdateProcessTime "ARPSTVCHR", Split(processInstance,":")(1)	
							Call login(GlobalDictionary("SignInUser"))
							If SelectMainMenu1(GlobalDictionary("MainMenuSelection5")) = True Then
								If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
									Call WriteToReport(micPass, "View/Update Item Details Page", "Successfully Navigated to View/Update Item Details Page", False)
								Else
									Call WriteToReport(micFail, "View/Update Item Details Page", "Failed to load View/Update Item Details Page", True)
								End If
						
								Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BUARDS_CLSVW_BUSINESS_UNIT", GlobalDictionary("BusinessUnit"),"Business Unit")
								setValue_WebEdit getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Value"),strCaptureItemValue,bSetSecure, getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Description")
								btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
								If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_BAL_AMT").Exist(30) Then
									Call WriteToReport(micPass, "Detail 1 Page", "Detail 1 Page loaded Successfully", False)
								Else
									Call WriteToReport(micFail, "Detail 1 Page", "Failed to load Detail 1 Page", True)
								End If

								verifyValue getObjectInfoFromXML("Verify_Balance", objectsFile, "Value"), "0.00", "innerhtml", "Item Balance"
							End If
						End If
					End If
				End If
			End If
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' RefundCreditBalanceACHPaymentMethod Function is to verify the AR14_04 Refund Credit Balance - ACH Payment Method
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function RefundCreditBalanceACHPaymentMethod()
	Dim i, bSetSecure, tcObjective, custInfoArr
	Dim strCaptureItemValue, WorkSheetID
	Dim intRc, j, intVal, intChecked,intItemRc, strVal
	Dim strFlag, strCaptureUser, userIDInfoArr, userBox
	Dim CurrentDate, intRCount, strCellData, arrCellData, arrWSData, sLinkText
	Dim processInstance

	bSetSecure = False
	tcObjective ="Refund Credit Balance - ACH Payment Method "
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Add a New Value", "index:=0").Exist(45) Then
			Call WriteToReport(micPass, "Create Worksheet Page", "Successfully Navigated to Create Worksheet Page", False)
		Else
			Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
		End If

		Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
		btn_click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"), getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Description")
		Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
		Call click_Lookup_Img_And_Select_Item("Look up Worksheet Business Unit.*", "SP_BUARWS_CLSVW_WS_BU", GlobalDictionary("BusinessUnit"), "Business Unit")
		Browser("title:=Standard Billing").page("title:=Standard Billing").PSFrame("name:=Target Content").WebButton("html id:=#ICSearch").Click
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=WS_WRK_WS_BUILD", "index:=0").Exist(45) Then
			Call WriteToReport(micPass, "Create Worksheet Page", "Create Worksheet Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
		End If

		custInfoArr = dbFetchCustomerIdItemInfoACHPaymentMetod(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(custInfoArr) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", False)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True  
			Call click_Lookup_Img_And_Select_Item("Look up Cust ID.*", "SP_IDCUST_CLSVW_CUST_ID", custInfoArr(1), "Customer")    
		End If

		WebList_select getObjectInfoFromXML("Reference_Criteria", objectsFile, "Value"), "Specific Value", getObjectInfoFromXML("Reference_Criteria", objectsFile, "Description")
		Call click_Lookup_Img_And_Select_Item("Look up Qual Code.*", "AR_FLD_REF_VW_REF_QUALIFIER_CODE", GlobalDictionary("QualCode"), "Qual Code")
		SetItemValueACHPaymentMethod()
		strCaptureItemValue = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=WS_ID_ITEM_REF_VALUE\$0", "index:=0").GetROProperty("default value")
		btn_click getObjectInfoFromXML("Build_Button", objectsFile, "Value"), getObjectInfoFromXML("Build_Button", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist(40) Then
			Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
		End If

		If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Description")) = True Then
			click_Link  getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link1", objectsFile, "Description")
		End If

		Wait 5
		If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").Exist(40) Then
			intRc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").RowCount
		Else
			Call WriteToReport(micFail, "Items table", "Items table is not displayed", False) 
			Exit Function
		End If

		For j = 0 To intRc-1
			intVal = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebEdit("html id:=WS_ITEM_BAL_AMT\$"&j).GetROProperty("value")
			strVal = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebElement("html id:=WS_ITEM_ITEM\$"&j).GetROProperty("innerhtml")
			If intVal < 0 AND  strcomp(strVal,strCaptureItemValue,1)=0 Then
				intChecked = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebCheckBox("html id:=WS_ITEM_ITEM_SELECTED\$"&j).GetROProperty("checked")
				If intChecked = 0 Then
					Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblWS_ITEM\$0").WebCheckBox("html id:=WS_ITEM_ITEM_SELECTED\$"&j).Set "ON"
				End If

				Call WriteToReport(micPass, "Negative Amount is Checked", "Negative Amount is checked Successfully", False)
				Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrWS_ITEM\$0").Image("name:=WS_ITEM_ENTRY_TYPE\$prompt\$img\$"&j).Click
				Call ItemListSelection("AUTO_ENT_MT_VW_ENTRY_TYPE", "WOC","Type")
				Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrWS_ITEM\$0").Image("name:=WS_ITEM_ENTRY_REASON\$prompt\$img\$"&j).Click
				Call ItemListSelection("AUTO_RSN_MT_VW_ENTRY_REASON", "REFND","Reason")
				Exit For
			End If
		Next

		WorkSheetID = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").GetROProperty("innertext")
		btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
		click_Link getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=REALTIME_WRK_RTM_RUN").Exist(30) Then
			Call WriteToReport(micPass, "Worksheet Action Page", "Worksheet Action Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Worksheet Action Page", "Failed to load Worksheet Action Page", True)
		End If

		WebList_select getObjectInfoFromXML("PostingAction_Weblist", objectsFile, "Value"),"Submit to Workflow", getObjectInfoFromXML("PostingAction_Weblist", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
		Wait 4
		btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
		click_Link getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist(45) Then
			Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
		End If             
           
		strFlag="True"
		Do
			If Browser("creationtime:=0").Page("index:=1").Link("innerhtml:=Pending Write-Off Approval", "index:=0").Exist(4) Then
				click_Link getObjectInfoFromXML("PendingWriiteOffApproval_Link", objectsFile, "Value"), getObjectInfoFromXML("PendingWriiteOffApproval_Link", objectsFile, "Description")
				Wait 5
				strCaptureUser = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=Pending").Link("title:=View approver/reviewer information").GetROProperty("innertext")
				userIDInfoArr = dbFetchUserId(strCaptureUser)
				If Not UBound(userIDInfoArr) = 0 Then
					login(userIDInfoArr(1))
				End If

				WriteToReport micPass, "Successfully Logged In", "Successfully Logged In by " & strCaptureUser & " to Approve Writeoffs", False
				element_Click getObjectInfoFromXML("WorkList_WebElement", objectsFile, "Value"), getObjectInfoFromXML("WorkList_WebElement", objectsFile, "Description")
				If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=ARMaintWriteOff.*", "index:=1").Exist(45) Then
					Call WriteToReport(micPass, "Worklist Page", "Worklist Page loaded Successfully", False)
				Else
					Call WriteToReport(micFail, "Worklist Page", "Failed to load Worklist Page", True)
				End If

				Wait 15
				If Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").Exist(45) Then
					intRCount = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").RowCount
				Else
				    Call WriteToReport(micFail, "Result table", "Failed to load Result table", True)
				    Exit Function
				End If

				For j = 2 To intRCount
					strCellData = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").GetCellData(j,6)
					arrCellData = split(strCellData,"WS_ID:")
					arrWSData = split(arrCellData(1)," ")
					If arrWSData(0)= WorkSheetID Then
						sLinkText =	Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").Link("name:=" & strCellData).GetRoProperty("innertext")
						Browser("creationtime:=0").Page("index:=1").WebTable("column names:=From;Date From;Work Item;Worked By Activity;Priority;Link;;").Link("name:=" & strCellData).Click
						Exit For
					End If
				Next

				Call WriteToReport (micPass, "["&sLinkText&"] Link Found","The ["&sLinkText&"] Link was found and clicked successfully.", False)
				If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist(45) Then
					Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
				Else
					Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
				End If

				btn_click getObjectInfoFromXML("Approve_Button", objectsFile, "Value"), getObjectInfoFromXML("Approve_Button", objectsFile, "Description")
				btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
			Else
				strFlag = "False"
			End If 
		Loop Until strFlag = "False"

		If Browser("creationtime:=0").Page("index:=1").Link("innerhtml:=Approved Write-Off","index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Approved Write-Off", "All Approved Write-Off done successfully", False)
		Else
			Call WriteToReport(micFail, "Approved Write-Off", "Failed to Approve Write-Off", True)
		End If

		Call login(GlobalDictionary("SignInUser"))
		If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
			If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
				Call WriteToReport(micPass, "Create Worksheet Page", "Successfully Navigated to Create Worksheet Page", False)
			Else
				Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
			End If

			Call click_Lookup_Img_And_Select_Item("Look up Worksheet Business Unit.*","SP_BUARWS_CLSVW_WS_BU", GlobalDictionary("BusinessUnit"),"Business Unit")
			setValue_WebEdit getObjectInfoFromXML("Worksheet_WebEdit", objectsFile, "Value"),WorkSheetID,bSetSecure, getObjectInfoFromXML("Worksheet_WebEdit", objectsFile, "Description")
			btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
			Wait 5
			If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=WS_WRK_WS_BUILD","index:=0").Exist(30) Then
				Call WriteToReport(micPass, "Create Worksheet Page", "Create Worksheet Page loaded Successfully", False)
			Else
				Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
			End If

			click_Link getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetApplication_Link", objectsFile, "Description")
			Wait 4
			If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=WS_CONTROL_WS_ID").Exist(30) Then
				Call WriteToReport(micPass, "Worksheet Application Page", "Worksheet Application Page loaded Successfully", False)
			Else
				Call WriteToReport(micFail, "Worksheet Application Page", "Failed to load Worksheet Application Page", True)
			End If

			click_Link getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Description")
			Wait 5
			If Browser("creationtime:=0").Page("index:=1").WebList("html id:=REALTIME_WRK_RTM_PROCESS_LIST","index:=0").Exist(30) Then
				Call WriteToReport(micPass, "Worksheet Action Page", "Worksheet Action Page loaded Successfully", False)
			Else
				Call WriteToReport(micFail, "Worksheet Action Page", "Failed to load Worksheet Action Page", True)
			End If

			WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"),"Batch Standard", getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Description")
			Setting.WebPackage("ReplayType") = 2 
			btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
			Setting.WebPackage("ReplayType") = 1 
			Wait 10
			btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
			If SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True Then
				If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(45) Then
					Call WriteToReport(micPass, "Request Receivables Update Page", "Successfully Navigated to Request Receivables Update Page", False)
				Else
					Call WriteToReport(micFail, "Request Receivables Update Page", "Failed to load Request Receivables Update Page", True)
				End If

				btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
				Wait 3
				click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
				Wait 3
				If Browser("creationtime:=0").Page("index:=1").WebList("html id:=POSTING_REQUEST_PROCESS_FREQUENCY\$0", "index:=0").Exist Then
					Call WriteToReport(micPass, "Receivable Update Request Page", "Receivable Update Request Page loaded Successfully", False)
				else
					Call WriteToReport(micFail, "Receivable Update Request Page", "Failed to load Receivable Update Request Page", True)
				End If

				Call click_Lookup_Img_And_Select_Item("Look up Group Unit.*", "SP_BUARGR_CLSVW_GROUP_BU", GlobalDictionary("BusinessUnit"),"Group Unit")
				WebList_select getObjectInfoFromXML("Process_Frequency", objectsFile, "Value"), "Always", getObjectInfoFromXML("Process_Frequency", objectsFile, "Description")
				CurrentDate = Date
				setValue_WebEdit getObjectInfoFromXML("AccountingDate_From", objectsFile, "Value"), CurrentDate, bSetSecure, getObjectInfoFromXML("AccountingDate_From", objectsFile, "Description")
				setValue_WebEdit getObjectInfoFromXML("AccountingDate_To", objectsFile, "Value"), CurrentDate, bSetSecure, getObjectInfoFromXML("AccountingDate_To", objectsFile, "Description")
				btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
				If IsObjectExist (getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Description")) = True Then
					check_CheckBox getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Description")
				End If
        
				btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
				btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
				If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").Exist(45) Then
					 processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
				Else
				    Call WriteToReport(micFail, "Process instance number", "Process instance number is not caprtured", True) 
				    Exit Function 
				End If

				If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
					Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
				Else
					Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
				End If		

				Wait 3
				getStatusupdateProcessTime "ARUPDATE",split(processInstance,":")(1)
				Call login(GlobalDictionary("SignInUser1"))
				If SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True Then
					If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(60) Then
						Call WriteToReport(micPass, "Request Refund Item Page", "Successfully Navigated to Request Refund Item Page", False)
					Else
						Call WriteToReport(micFail, "Request Refund Item Page", "Failed to load Request Refund Item Page", True)
					End If

					btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
					Wait 3
					click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
					If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(30) Then
						Call WriteToReport(micPass, "Refunds Page", "Refunds Page loaded Successfully", False)
					Else
						Call WriteToReport(micFail, "Refunds Page", "Failed to load Refunds Page", True)
					End If

					Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BUARED_CLSVW_BUSINESS_UNIT", GlobalDictionary("BusinessUnit"),"Business Unit")
					btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
					Wait 10
					If IsObjectExist (getObjectInfoFromXML("ARREFUND_Process", objectsFile, "Value"), getObjectInfoFromXML("ARREFUND_Process", objectsFile, "Description")) = True Then
						check_CheckBox getObjectInfoFromXML("ARREFUND_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("ARREFUND_CheckBox", objectsFile, "Description") 
					End If

					btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
					If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").Exist(45) Then
						processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
						btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
					Else
						Call WriteToReport(micFail, "Process instance number", "Process instance number is not caprtured", True) 
						Exit Function
					End If

					If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(40) Then
						Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
					Else
						Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
					End If

					Wait 3
					getStatusupdateProcessTime "ARREFUND",split(processInstance,":")(1)
					Call login(GlobalDictionary("SignInUser2"))
					If SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True then
						If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(60) Then
							Call WriteToReport(micPass, "Voucher Build Request Page", "Successfully Navigated to Voucher Build Request Page", False)
						Else
							Call WriteToReport(micFail, "Voucher Build Request Page", "Failed to load Voucher Build Request Page", True)
						End If

						btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
						Wait 3
						click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
						If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=VCHR_BATCH_RUN_REQUEST_ID","indx:=0").Exist(40) Then
							Call WriteToReport(micPass, "Voucher Build Page", "Voucher Build Page loaded Successfully", False)
						Else
							Call WriteToReport(micFail, "Voucher Build Page", "Failed to load Voucher Build Page", True)
						End If

						setValue_WebEdit getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Value"), GlobalDictionary("RequestId"), bSetSecure, getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Description")
						setValue_WebEdit getObjectInfoFromXML("Description_WebEdit", objectsFile, "Value"), GlobalDictionary("Description"), bSetSecure, getObjectInfoFromXML("Description_WebEdit", objectsFile, "Description")
						setValue_WebEdit getObjectInfoFromXML("FromDate_WebEdit", objectsFile, "Value"), CurrentDate, bSetSecure, getObjectInfoFromXML("FromDate_WebEdit", objectsFile, "Description")
						setValue_WebEdit getObjectInfoFromXML("ToDate_WebEdit", objectsFile, "Value"), CurrentDate, bSetSecure, getObjectInfoFromXML("ToDate_WebEdit", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("ProcessOptions_WebList", objectsFile, "Value"), "Process All Units", getObjectInfoFromXML("ProcessOptions_WebList", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("VoucherSources_WebList", objectsFile, "Value"), "New Voucher Data", getObjectInfoFromXML("VoucherSources_WebList", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("VouchersBuildInterfaces_WebList", objectsFile, "Value"),"All Interfaces", getObjectInfoFromXML("VouchersBuildInterfaces_WebList", objectsFile, "Description")
						WebList_select getObjectInfoFromXML("ContractVoucherAction_WebList", objectsFile, "Value"),"Build Voucher", getObjectInfoFromXML("ContractVoucherAction_WebList", objectsFile, "Description")
						btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
						If IsObjectExist (getObjectInfoFromXML("APVCHRBLD_Process", objectsFile, "Value"), getObjectInfoFromXML("APVCHRBLD_Process", objectsFile, "Description")) = True Then
							check_CheckBox getObjectInfoFromXML("APVCHRBLD_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("APVCHRBLD_CheckBox", objectsFile, "Description") 
						End If

						btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
						Wait 15
						processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
						btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
						If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
							Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
						Else
							Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
						End If

						Wait 3
						getStatusupdateProcessTime "APVCHRBLD",split(processInstance,":")(1)
						If SelectMainMenu1(GlobalDictionary("MainMenuSelection4")) = True Then
							If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(40) Then
								Call WriteToReport(micPass, "Voucher Posting Request Page", "Successfully Navigated to Voucher Posting Request Page", False)
							Else
								Call WriteToReport(micFail, "Voucher Posting Request Page", "Failed to load Voucher Posting Request Page", True)
							End If

							btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
							click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
							If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(35) Then
								Call WriteToReport(micPass, "Voucher Posting Request Page", "Successfully Navigated to Voucher Posting Request Page", False)
							Else
								Call WriteToReport(micFail, "Voucher Posting Request Page", "Failed to load Voucher Posting Request Page", True)
							End If

							setValue_WebEdit getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Value"), GlobalDictionary("RequestId"), bSetSecure, getObjectInfoFromXML("RequestId_WebEdit", objectsFile, "Description")
							setValue_WebEdit getObjectInfoFromXML("Description_WebEdit", objectsFile, "Value"), GlobalDictionary("Description"), bSetSecure, getObjectInfoFromXML("Description_WebEdit", objectsFile, "Description")
							WebList_select getObjectInfoFromXML("ProcessFrequency_WebList", objectsFile, "Value"), "Always Process", getObjectInfoFromXML("ProcessFrequency_WebList", objectsFile, "Description")
							btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
							Wait 5
							If IsObjectExist (getObjectInfoFromXML("APPSTVCHR_Process", objectsFile, "Value"), getObjectInfoFromXML("APPSTVCHR_Process", objectsFile, "Description")) = True Then
								check_CheckBox getObjectInfoFromXML("APPSTVCHR_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("APPSTVCHR_CheckBox", objectsFile, "Description") 
							End If

							btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
							Wait 10
							processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=1").GetROProperty("innertext")
							btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
							If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(45) Then
								Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
							Else
								Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
							End If

							Wait 3
							getStatusupdateProcessTime "APPSTVCHR", Split(processInstance,":")(1)
							Call login(GlobalDictionary("SignInUser"))
							If SelectMainMenu1(GlobalDictionary("MainMenuSelection5")) = True Then
								If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(60) Then
									Call WriteToReport(micPass, "View/Update Item Details Page", "Successfully Navigated to View/Update Item Details Page", False)
								Else
									Call WriteToReport(micFail, "View/Update Item Details Page", "Failed to load View/Update Item Details Page", True)
								End If

								Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BUARDS_CLSVW_BUSINESS_UNIT", GlobalDictionary("BusinessUnit"),"Business Unit")
								setValue_WebEdit getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Value"),strCaptureItemValue,bSetSecure, getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Description")
								btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
								Wait 5
								If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_BAL_AMT").Exist(50) Then
									Call WriteToReport(micPass, "Detail 1 Page", "Detail 1 Page loaded Successfully", False)
								Else
									Call WriteToReport(micFail, "Detail 1 Page", "Failed to load Detail 1 Page", True)
								End If

								verifyValue getObjectInfoFromXML("Verify_Balance", objectsFile, "Value"),"0.00","innerhtml","Item Balance"
                    		End If
             			End If
               		End If
             	End If
          	End If
	  	End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Customer Information - SIC Code
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function Siccode()
	Dim tcObjective, recordCount, custID, custteamSupport, locationVal, countryCode, address1Val, address2Val, address3Val
	Dim cityVal, countyVal, stateVal, postalCode, geocodeVal, sictype, scode, sqlsictype, scus
	Dim bunit

	tcObjective="Customer Information - SIC Code"
	WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebEdit("name:=CUST_AL_SRCH_SETID").Exist(60) Then
		    WriteToReport micPass, " General Information  page loaded successfully", "General Information Page loaded successfully", false
		Else
			WriteToReport micFail, "General Information Page not loaded", "General Information Page loading failed, so failing the test case", true
			Exit Function
		End If
		
		Wait 5
		setValue_WebEdit getObjectInfoFromXML("SetIDGI", objectsFile, "Value"),(GlobalDictionary("setid")),false, getObjectInfoFromXML("SetIDGI", objectsFile, "Description")

		''''''''''''''''''''''''''QUERY FOR NON LINKED ACCOUNTS''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		recordCount = dbFetch1to3Properties((GlobalDictionary("businessunit")))
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			custID = (recordCount(1))
			setValue_WebEdit getObjectInfoFromXML("Customer1", objectsFile, "Value"),custID,false, getObjectInfoFromXML("Customer1", objectsFile, "Description")
		End If

		Wait 3
		btn_click getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
		Wait 15
'		custteamSupport=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("default value")
'		locationVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("default value")
'		address1Val=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("default value")
'		address2Val=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("default value")
'		address3Val=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("default value")
'		cityVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_CITY\$0").GetROProperty("default value")
'		countyVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("default value")
'		stateVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_STATE\$0").GetROProperty("default value")
'		postalCode=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("default value")
		custteamSupport=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("default value")
		locationVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("default value")
		address1Val=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("default value")
		address2Val=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("default value")
		address3Val=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("default value")
		cityVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_CITY\$0").GetROProperty("default value")
		countyVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("default value")
		stateVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_STATE\$0").GetROProperty("default value")
		postalCode=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("default value")
		
		geocodeVal=Browser("creationtime:=0").Page("index:=1").Link("class:=PSHYPERLINK", "html id:=TAX_WRK_GEOCODE_LOOKUP_PB\$0").GetROProperty("innertext")
     	recordCount = dbFetchNewCustProperties11(custID,locationVal)
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			If Trim(recordCount(23)) = Trim(Custteamsupport) Then
				WriteToReport micPass, "Team Support Value  is "&Custteamsupport&"", "Team Support Value is Validated successfully", False
			Else
				WriteToReport micFail, "Team Support Value is not Validated", "Team Support Value is Validation failed", False
			End If

			If CInt(recordCount(7)) = cint(locationVal) Then
				WriteToReport micPass, "Location Value  is " & locationVal & "", "Location Value is Validated successfully", False
			Else
				WriteToReport micFail, "Location Value ", "Location Value is Validation failed", False
			End If

	        If (Trim(recordCount(8))) = (Trim(address1Val)) Then
	        	WriteToReport micPass, "Address1 Value is " & address1Val & "", "Address1 Value is Validated successfully", False
	        Else
              	WriteToReport micFail, "Address1 Value ", "Address1 Value is Validation failed", False
	        End If

			If (Trim(recordCount(9))) = (Trim(address2Val)) Then
				WriteToReport micPass, "Address2 Value is " & address2Val & "", "Address2 Value is Validated successfully", False
			Else
				WriteToReport micFail, "Address2 Value ", "Address2 Value is Validation failed", False       
			End If

			If (Trim(recordCount(10))) = (Trim(address3Val)) Then
				WriteToReport micPass, "Address3 Value is " & chr(34) & " " & address3Val & " " & chr(34) & " ", "Address3 Value is Validated successfully", False
			Else
				WriteToReport micFail, "Address3 Value ", "Address3 Value is Validation failed", False       
			End If

			If (Trim(recordCount(11))) = (Trim(cityVal)) Then
				WriteToReport micPass, "City Value is " & cityVal & "", "City Value is Validated successfully", False
			Else
				WriteToReport micFail, "City Value ", "City Value is Validation failed", False       
			End If

	        If (Trim(recordCount(12))) = (Trim(countyVal)) Then
	        	WriteToReport micPass, "County Value is "&countyVal&"", "County Value is Validated successfully", False
	        Else
	              WriteToReport micFail, "County Value ", "County Value is Validation failed", False       
	        End If

			If (Trim(recordCount(13))) = (Trim(stateVal)) Then
				WriteToReport micPass, "State Value is "&stateVal&"", "State Value is Validated successfully", False
			Else
				WriteToReport micFail, "State Value ", "State Value is Validation failed", False       
			End If

	     	If Replace(Trim(recordCount(14))," ","") = Replace(Trim(postalCode)," ","") Then
	        	WriteToReport micPass, "Postal Code Value is "&postalCode&"", "Postal Code Value is Validated successfully", False
	        Else
	              WriteToReport micFail, "Postal Code Value ", "Postal Code Value is Validation failed", False       
	        End If

	        If Trim(recordCount(15)) = Trim(geocodeVal) Then
	        	WriteToReport micPass, "GeoCode Value is "&geocodeVal&"", "GeoCode Value is Validated successfully", False
	        Else
              	WriteToReport micFail, "GeoCode Value ", "GeoCode Value is Validation failed", False       
	        End If
        End If

		webList_select getObjectInfoFromXML("Additional_General_Inf", objectsFile, "Value"),"0020 - Additional General Info",("Additional General Info is selected from General Info Links weblist")
		Wait 5
		sictype=Browser("creationtime:=0").Page("index:=1").WebList("class:=PSDROPDOWNLIST","html id:=CUST_SIC_CODES_SIC_CD_QUAL\$0","html tag:=SELECT").GetROProperty("default value")
		'scode=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX","html id:=CUST_SIC_CODES_SIC_CODE\$0","html tag:=INPUT").GetROProperty("default value")
		scode=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_SIC_CODES_SIC_CODE\$0","html tag:=INPUT").GetROProperty("default value")
    	Wait 2
		recordCount = us27code(custID)
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			If Trim((recordCount(3))) = Trim(scode) Then
				WriteToReport micPass, "SIC Code Value is " & scode & "", "SIC Code Value is Validated successfully", False
			Else
				WriteToReport micFail, "SIC Code Value ", "SIC Code Value is Validation failed", TRUE       
			End If

            sqlsictype = recordCount(2)
			If (recordCount(2)) = "SIC" Then
				WriteToReport micPass, "SIC Type Value is " & sictype & " and SIC Type retrieved for business unit " & GlobalDictionary("businessunit") & " from the sql query is " & sqlsictype & " ", "SIC Code Value is Validated successfully", False
			ElseIf (recordCount(2)) = "CAN" Then
				WriteToReport micPass, "SIC Type Value is " & sictype & " and SIC Type retrieved for business unit " & GlobalDictionary("businessunit") & " from the sql query is " & sqlsictype & " ", "SIC Code Value is Validated successfully", False 
			Else
				WriteToReport micFail, "SIC Code Value ", "SIC Code Value is Validation failed", TRUE       
			End If
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Customer Information - New customer
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function CustomerinformationNewcustomer()
	Dim tcObjective, custIDGI, nameGI, setID, custID
	Dim custteamSupport, locationVal, countryCode, address1Val, address2Val, address3Val
	Dim cityVal, countyVal, stateVal, postalCode, geocodeVal, recordCount
	Dim billtoOptiontabBeforeclick, billtoOptiontabAftereclick, arSpecialistGI, collectorGI, paymentMethodOptions
	Dim miscellaneousGeneralInfoTabbeforeclick, miscellaneousGeneralInfoTabafterclick
	Dim creditprofiletabAfterclick, currencyCodeGI,creditLimitGI
	Dim userdefinedtabafterclick, custChar1A, custChar1B, custChar1C, custChar6
	Dim correspondenceOptionsTabAFterclick, arrRecordValues, bankID, accountID
	Dim remitType, taxStatusGI, Y, taxExemptCertificatesTabAfterclick

	tcObjective="Customer Information - New customer" &_
				"Customer Acct Information - Verbal PO ( CustChar1A)" &_
				"Customer Information - Primary Account Manager" &_
				"Customer Information - Location and Address " &_
				"Customer Information - Home Business Unit"
	WriteToReport micDone, "04_AR07 _Interface_1PS", "Customer Information - New customer Customer Acct Information - Verbal PO ( CustChar1A)Customer Information - Primary Account ManagerCustomer Information - Location and Address Customer Information - Home Business Unit", False
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").WebEdit("name:=CUST_AL_SRCH_SETID").Exist(60) Then
		WriteToReport micPass, " General Information  page loaded successfully", "General Information Page loaded successfully", False
	Else
		WriteToReport micFail, "General Information Page not loaded", "General Information Page loading failed, so failing the test case", true
		Exit Function
	End If

	Wait 5
	setValue_WebEdit getObjectInfoFromXML("SetIDGI", objectsFile, "Value"),GlobalDictionary("setID"), False, getObjectInfoFromXML("SetIDGI", objectsFile, "Description")
	recordCount = dbFetch1to3PropertiesNonGeo(GlobalDictionary("businessunit"))
	If IsArrayEmpty(recordCount) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True
		custID = (recordCount(1))
		setValue_WebEdit getObjectInfoFromXML("CustomerIDGI", objectsFile, "Value"),custID,false, getObjectInfoFromXML("CustomerIDGI", objectsFile, "Description")
	End If

	btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
	Wait 5
	
	''''''''validate general info page using SQL QUERY''''''''
	Wait 5
'	custteamSupport=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("default value")
'	locationVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("default value")
'	address1Val=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("default value")
'	address2Val=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("default value")
'	address3Val=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("default value")
'	cityVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_CITY\$0").GetROProperty("default value")
'	countyVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("default value")
'	stateVal=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_STATE\$0").GetROProperty("default value")
'	postalCode=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("default value")
'	geocodeVal=Browser("creationtime:=0").Page("index:=1").Link("class:=PSHYPERLINK", "html id:=TAX_WRK_GEOCODE_LOOKUP_PB\$0").GetROProperty("innertext")

	Browser("creationtime:=0").Sync
	custteamSupport=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("default value")
	locationVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("default value")
	address1Val=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("default value")
	address2Val=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("default value")
	address3Val=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("default value")
	cityVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_CITY\$0").GetROProperty("default value")
	countyVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("default value")
	stateVal=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_STATE\$0").GetROProperty("default value")
	postalCode=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("default value")
	geocodeVal=Browser("creationtime:=0").Page("index:=1").Link("html id:=TAX_WRK_GEOCODE_LOOKUP_PB\$0").GetROProperty("innertext")
	recordCount = dbFetchNewCustProperties11(custID,locationVal)
	If IsArrayEmpty(recordCount) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True
		If Trim(recordCount(23)) = Trim(Custteamsupport) Then
			WriteToReport micPass, "Team Support Value  is " & Custteamsupport & "", "Team Support Value is Validated successfully", False
		Else
			WriteToReport micFail, "Team Support Value is not Validated", "Team Support Value is Validation failed", False
		End If

		If CInt(recordCount(7)) = CInt(locationVal) Then
			WriteToReport micPass, "Location Value  is " & locationVal & "", "Location Value is Validated successfully", False
		Else
			WriteToReport micFail, "Location Value ", "Location Value is Validation failed", False
		End If

		If (Trim(recordCount(8))) = (Trim(address1Val)) Then
			WriteToReport micPass, "Address1 Value is "&address1Val&"", "Address1 Value is Validated successfully", False
		Else
			WriteToReport micFail, "Address1 Value ", "Address1 Value is Validation failed", False       
		End If

		If (Trim(recordCount(9))) = (Trim(address2Val)) Then
			WriteToReport micPass, "Address2 Value is "&address2Val&"", "Address2 Value is Validated successfully", False
		Else
			WriteToReport micFail, "Address2 Value ", "Address2 Value is Validation failed", False       
		End If

		If (Trim(recordCount(10))) = (Trim(address3Val)) Then
			WriteToReport micPass, "Address3 Value is "&chr(34)&" "&address3Val&" "&chr(34)&" ", "Address3 Value is Validated successfully", False
		Else
			WriteToReport micFail, "Address3 Value ", "Address3 Value is Validation failed", False       
		End If

		If (Trim(recordCount(11))) = (Trim(cityVal)) Then
			WriteToReport micPass, "City Value is "&cityVal&"", "City Value is Validated successfully", False
		Else
			WriteToReport micFail, "City Value ", "City Value is Validation failed", False       
		End If

		If (Trim(recordCount(12))) = (Trim(countyVal)) Then
			WriteToReport micPass, "County Value is "&countyVal&"", "County Value is Validated successfully", False
		Else
			WriteToReport micFail, "County Value ", "County Value is Validation failed", False       
		End If

        If (Trim(recordCount(13))) = (Trim(stateVal)) Then
        	WriteToReport micPass, "State Value is "&stateVal&"", "State Value is Validated successfully", False
        Else
          	WriteToReport micFail, "State Value ", "State Value is Validation failed", False       
        End If

        If replace(Trim(recordCount(14))," ","") =replace(Trim(postalCode)," ","")Then
        	WriteToReport micPass, "Postal Code Value is "&postalCode&"", "Postal Code Value is Validated successfully", False
        Else
            WriteToReport micFail, "Postal Code Value ", "Postal Code Value is Validation failed", False       
        End If

        If Trim(recordCount(15)) = Trim(geocodeVal) Then
        	WriteToReport micPass, "GeoCode Value is "&geocodeVal&"", "GeoCode Value is Validated successfully", False
        Else
			WriteToReport micFail, "GeoCode Value ", "GeoCode Value is Validation failed", False       
        End If
    End If

	Wait 5

	'''''Bill to Option page''''''
	billtoOptiontabBeforeclick=Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN", "innertext:=Bill To Options", "outerhtml:=<span><abbr class=""PTUNDERLINE"">B</abbr>ill To Options</span>").GetROProperty("outerhtml")
	element_Click getObjectInfoFromXML("Bill_to_options_GI", objectsFile, "Value"), getObjectInfoFromXML("Bill_to_options_GI", objectsFile, "Description")
    If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innertext:=Bill To Options","outerhtml:=<span id=""app_label"">Bill To Options</span>").Exist(5) Then
        billtoOptiontabAftereclick=Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN", "innertext:=Bill To Options", "outerhtml:=<span id=""app_label"">Bill To Options</span>").GetROProperty("outerhtml")
    End If

	If billtoOptiontabBeforeclick <> billtoOptiontabAftereclick Then
		WriteToReport micPass, "Bill to option tab loaded successfully " , "Bill to option tab clicked successfully", False
    Else
       WriteToReport micFail, "Bill to option tab  not clicked" , "Bill to option tab not clicked successfully", False       
    End If

	Wait 5

	'''''Bill to Option page  values validation using SQL QUERY''''''		
	Verify_ClickCheckBox getObjectInfoFromXML("Direct_Invoicing_GI", objectsFile, "Value"), getObjectInfoFromXML("Direct_Invoicing_GI", objectsFile, "Description")
	'paymentMethodOptions=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_OPTION_PAYMENT_METHOD\$0").GetROProperty("default value")
	paymentMethodOptions=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_OPTION_PAYMENT_METHOD\$0").GetROProperty("default value")
	'If IsObjectExist(getObjectInfoFromXML("payment_method_option_GI", objectsFile, "Value"), getObjectInfoFromXML("payment_method_option_GI", objectsFile, "Description")) = True Then
	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_OPTION_PAYMENT_METHOD\$0").Exist(10) Then
		Call WriteToReport (micPass,"Payment Method Options value is "&paymentMethodOptions&"","", True)
	Else
		Call WriteToReport (micFail, "Payment Method Options value  is not Captured", "", True)
	End If

'	arSpecialistGI=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_OPTION_AR_SPECIALIST\$0").GetROProperty("default value")
'	collectorGI=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUST_OPTION_COLLECTOR\$0").GetROProperty("default value")
	arSpecialistGI=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_OPTION_AR_SPECIALIST\$0").GetROProperty("default value")
	collectorGI=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_OPTION_COLLECTOR\$0").GetROProperty("default value")
	recordCount = dbFetchNewCustProperties11(custID,locationVal)
	If IsArrayEmpty(recordCount) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True
		If Trim(recordCount(21)) = Trim(arSpecialistGI) Then
			WriteToReport micPass, "AR Specialist Value  is " & arSpecialistGI & "", "AR Specialist Value is Validated successfully", False
		Else
			WriteToReport micFail, "AR Specialist  Value is not Validated", "AR Specialist  Value is Validation failed", False
		End If

		If Trim(recordCount(22)) = Trim(collectorGI) Then
			WriteToReport micPass, "Collector Value  is "&collectorGI&"", "collector Value is Validated successfully", False
		Else
			WriteToReport micFail, "collector  Value is not Validated", "collector  Value is Validation failed", False
		End If
	End If

	wait 5
	miscellaneousGeneralInfoTabbeforeclick=Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN", "innertext:=Miscellaneous General Info", "outerhtml:=<span><abbr class=""PTUNDERLINE"">M</abbr>iscellaneous General Info</span>").GetROProperty("outerhtml")

	''''''''''Miscellaneous General Info Tab''''''''''''
	element_Click getObjectInfoFromXML("Miscellaneous_General_Info_GI", objectsFile, "Value"), ("Miscellaneous General Info is selected from the weblist")
	miscellaneousGeneralInfoTabafterclick=Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN", "innertext:=Miscellaneous General Info", "outerhtml:=<span id=""app_label"">Miscellaneous General Info</span>").GetROProperty("outerhtml")
    If miscellaneousGeneralInfoTabBeforeclick <> miscellaneousGeneralInfoTabAfterclick Then
		WriteToReport micPass, "Miscellaneous General Info tab loaded successfully" , "Miscellaneous General Info tab clicked successfully", False
    Else
        WriteToReport micFail, "Miscellaneous General Info tab not clicked" , "Miscellaneous General Info tab not clicked successfully", False       
    End If
 
	'check_WebEditBox_Value getObjectInfoFromXML("Supplier_SetID_GI", objectsFile, "Value"), "", ("Supplier Set ID values is """" ")
	'check_WebEditBox_Value getObjectInfoFromXML("Supplier_ID_GI", objectsFile, "Value"), "", ("Supplier ID values is """" ")
	check_WebEditBox_Value Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUSTOMER_VENDOR_SETID"), "", ("Supplier Set ID values is """" ")
	check_WebEditBox_Value Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUSTOMER_VENDOR_ID"), "", ("Supplier ID values is """" ")
	Wait 5
				
	''''''''''Credit Profile Page''''''''''''
	webList_select getObjectInfoFromXML("credit_profile", objectsFile, "Value"), "0030 - Credit Profile", ("Credit Profile is selected from the weblist")
	Wait 8
'	currencyCodeGI=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX","html id:=CUST_CREDIT_CURRENCY_CD\$0").GetROProperty("default value")
'	creditLimitGI=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX","html id:=CUST_CREDIT_CR_LIMIT\$0").GetROProperty("default value")
	currencyCodeGI=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CREDIT_CURRENCY_CD\$0").GetROProperty("default value")
	creditLimitGI=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CREDIT_CR_LIMIT\$0").GetROProperty("default value")
	recordCount = dbFetchNewCustProperties11(custID,locationVal)
	If IsArrayEmpty(recordCount) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True
		If Ubound(recordCount) > 0 Then
			If Trim(recordCount(2)) = Trim(currencyCodeGI) Then
				WriteToReport micPass, " Currency Code Value  is "&currencyCodeGI&"", "Currency Code Value  is Validated successfully", False
			Else
				WriteToReport micFail, "Currency Code Value  is not Validated", "Currency Code Value  is Validation failed", False
			End If

			If FormatCurrency(recordCount(17),2) = Trim(creditLimitGI) Then
				WriteToReport micPass, "Credit Limit Value  is " & creditLimitGI & "", "Credit Limit Value is Validated successfully", False
			Else
				WriteToReport micFail, "Credit Limit  Value is not Validated", "Credit Limit Value Validation Failed", False
			End If
		End If

		Wait 5
		
		''''''''''User Defined Page''''''''''''
        webList_select getObjectInfoFromXML("credit_profile", objectsFile, "Value"),"0130 - User Defined",("User Defined is selected from the weblist")
        userdefinedtabafterclick=Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innertext:=User Defined Fields","outerhtml:=<span id=""app_label"">User Defined Fields</span>").GetROProperty("outerhtml")
		If userdefinedtabafterclick="<span id=""app_label"">User Defined Fields</span>" Then
			WriteToReport micPass, "User Defined   page loaded successfully", "User Defined Page loaded successfully", False
		Else
			WriteToReport micFail, "User Defined Page not loaded", "User Defined Page loading failed", True
			Exit Function
		End If

'       	custChar1A=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUSTOMER_CUST_FIELD_C1_A").GetROProperty("default value")
'		custChar1B=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUSTOMER_CUST_FIELD_C1_B").GetROProperty("default value")
'		custChar1C=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUSTOMER_CUST_FIELD_C1_C").GetROProperty("default value")
'		custChar6=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX", "html id:=CUSTOMER_CUST_FIELD_C6").GetROProperty("default value")
		custChar1A=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUSTOMER_CUST_FIELD_C1_A").GetROProperty("default value")
		custChar1B=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUSTOMER_CUST_FIELD_C1_B").GetROProperty("default value")
		custChar1C=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUSTOMER_CUST_FIELD_C1_C").GetROProperty("default value")
		custChar6=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUSTOMER_CUST_FIELD_C6").GetROProperty("default value")
		recordCount = dbFetchNewCustProperties11(custID,locationVal)
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			If Trim(recordCount(3)) = Trim(custChar1A) Then
				WriteToReport micPass, " Cust Char1 A Value is " & custChar1A & "", "Cust Char1 A Value  is Validated successfully", False
			Else
				WriteToReport micFail, "Cust Char1 A Value is not Validated", "Cust Char1 A Value  is Validation failed", False
			End If

			If Trim(recordCount(4)) = Trim(custChar1B) Then
				WriteToReport micPass, "Cust Char1 B Value  is " & custChar1B & "", "Cust Char1 B Value is Validated successfully", False
			Else
				WriteToReport micFail, "Cust Char1 B  Value is not Validated", "Cust Char1 B  Value is Validation failed", False
			End If

			if Trim(recordCount(5)) = Trim(custChar1C) Then
				WriteToReport micPass, "Cust Char1 C Value  is "&custChar1C&"", "Cust Char1 C Value is Validated successfully", False
			Else
				WriteToReport micFail, "Cust Char1 C  Value is not Validated", "Cust Char1 C  Value is Validation failed", False
			End If
			
			if Trim(recordCount(6)) = Trim(custChar6) Then
				WriteToReport micPass, "Cust Char6 Value  is "&custChar6&"", "Cust Char 6 Value is Validated successfully", False
			Else
				WriteToReport micFail, "Cust Char6  Value is not Validated", "Cust Char 6  Value is Validation failed", False
			End If
		End If

		Wait 5

		'''''''''' Correspondence Options Page''''''''''''
		webList_select getObjectInfoFromXML("Correspondence_Options_GI", objectsFile, "Value"),"0040 - Correspondence Options",("Correspondence Options is selected from the weblist")
		correspondenceOptionsTabAFterclick=Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innertext:=Correspondence Options","outerhtml:=<span id=""app_label"">Correspondence Options</span>").GetROProperty("outerhtml")
		recordCount = dbFetchbankID(custID)
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
'			bankID=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX","html id:=CUST_CRSPD_REM_BANK_CD\$0","html tag:=INPUT").GetROProperty("default value")
'			accountID=Browser("creationtime:=0").Page("index:=1").WebEdit("class:=PSEDITBOX","html id:=CUST_CRSPD_REM_BANK_ACCT_KEY\$0","html tag:=INPUT").GetROProperty("default value")
			bankID=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CRSPD_REM_BANK_CD\$0","html tag:=INPUT").GetROProperty("default value")
			accountID=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CRSPD_REM_BANK_ACCT_KEY\$0","html tag:=INPUT").GetROProperty("default value")
			If Trim(recordCount(1)) = Trim(bankID) Then
				WriteToReport micPass, " Bank ID Value  is " & bankID & "", "Bank ID Value  is Validated successfully", False
			Else
				WriteToReport micFail, "Bank ID Value  is not Validated", "Bank ID  Value  is Validation failed", False
			End If

			If Trim(recordCount(2)) = Trim(accountID) Then
				WriteToReport micPass, " Account ID Value  is " & bankID & "", "Account ID Value  is Validated successfully", False
			Else
				WriteToReport micFail, "Account ID Value  is not Validated", "Account ID  Value  is Validation failed", False
			End If
		End If

		remitType=Browser("creationtime:=0").Page("title:=General Information").WebElement("class:=PSEDITBOX_DISPONLY","html tag:=SPAN","html id:=BANK_AR_BR_VW_DESCR\$0").GetROProperty("innertext")
		If IsObjectExist(getObjectInfoFromXML("Remit_to_type_GI", objectsFile, "Value"), getObjectInfoFromXML("Remit_to_type_GI", objectsFile, "Description")) = True Then
			Call WriteToReport (micPass,"Remit to type value is "&remitType&" ","", True)
		Else
			Call WriteToReport (micFail, "Remit to type value  is not Captured", "", True)
		End If
			
		Wait 5
		
		''''''' Tax Exempt Certificates Page''''''''''''
		webList_select getObjectInfoFromXML("credit_profile", objectsFile, "Value"), "0080 - Tax Exempt Certificates", ("Tax Exempt Certificates seleted from weblist")
		taxExemptCertificatesTabAfterclick=Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innertext:=Tax Exempt Certificate Info", "outerhtml:=<span id=""app_label"">Tax Exempt Certificate Info</span>").GetROProperty("outerhtml")
		If taxExemptCertificatesTabAfterclick="<span id=""app_label"">Tax Exempt Certificate Info</span>" = True Then
			WriteToReport micPass, "Tax Exempt Certificates   page loaded successfully", "Tax Exempt Certificates Page loaded successfully", False
		Else
			WriteToReport micFail, "Tax Exempt Certificates Page not loaded", "Tax Exempt Certificates Page loading failed", True
			Exit Function
		End If

		taxStatusGI=Browser("creationtime:=0").Page("index:=1").WebList("class:=PSDROPDOWNLIST", "html id:=CUST_EXEMPT_DTL_EFF_STATUS\$0", "index:=0").GetROProperty("default value")
		recordCount = dbFetchNewCustProperties11(custID,locationVal)
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			WriteToReport micPass, "Tax status  is " & recordCount(18) & " and Tax status in the application is " & taxStatusGI & " ", "Tax status  Value is Validated successfully", False
		End If
 	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Refund Credit Balance - Customer's Credit Card
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function CreditCardrefund()
	Dim tcObjective, recordCount, cusid, itemid
	Dim addanewvaluetabBeforeclick, addanewvaluetabAfterclick, setid
	Dim ref, itemIDDefaultVal, isExpectedItemIDExist, itemRow
	Dim pendingbal, selectedbal, rNum

	tcObjective = "Refund Credit Balance - Customer's Credit Card"
	WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
	Else
		Exit Function
	End If

	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(50) Then
		WriteToReport micPass, "Create Worksheet page loaded successfully", "Create Worksheet Page loaded successfully", False
	Else
		WriteToReport micFail, "Create Worksheet Page not loaded", "Create Worksheet Page loading failed, so failing the test case", True
		Exit Function
	End If

	Wait 5
	Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN", "innerhtml:=<abbr class=""PTUNDERLINE"">A</abbr>dd a New Value").Click
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	Wait 5
	setValue_WebEdit getObjectInfoFromXML("Deposit_ID_CCC", objectsFile, "Value"), GlobalDictionary("buin"), False, getObjectInfoFromXML("Deposit_ID_CCC", objectsFile, "Description")
	recordCount = negbal((GlobalDictionary("buin")))
	If IsArrayEmpty(recordCount) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True
		cusid = (recordCount(1))
		itemid=(recordCount(2))
		setValue_WebEdit getObjectInfoFromXML("Cust_ID_CCC", objectsFile, "Value"), cusid, False, getObjectInfoFromXML("Cust_ID_CCC", objectsFile, "Description")
		'btn_click getObjectInfoFromXML("Add_CCC", objectsFile, "Value"), getObjectInfoFromXML("Add_CCC", objectsFile, "Description")
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#icsearch").Click
		Wait 8
		'Call click_Lookup_Img_And_Select_Item ("Look up Customer ID.*", "SP_IDCUST_CLSVW_CUST_ID", cusid, "Value Entered in the Customer ID Field is " & cusid & "")
		Call click_Lookup_Img_And_Select_Item ("Look up Customer ID.*", "SP_IDCUST_NONVW_CUST_ID", cusid, "Value Entered in the Customer ID Field is " & cusid & "")
		'setValue_WebEdit getObjectInfoFromXML("Qual_code_CCC", objectsFile, "Value"),GlobalDictionary("QualCode"), False, getObjectInfoFromXML("Qual_code_CCC", objectsFile, "Description")
		Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ID_ITEM_REF_QUALIFIER_CODE\$0").Set GlobalDictionary("QualCode")
		call click_Lookup_Img_And_Select_Item ("Look up Reference.*", "ITEM_ITM2_CLSVW_ITEM", itemid, "Value Entered in the Reference Field is to get the Reference ID is  " & cusid & "")
		ref = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ID_ITEM_REF_VALUE\$0", "html tag:=INPUT").GetROProperty("default value")
		WriteToReport micDone, "Reference value " & ref & " successfully set to Reference field", "Reference is  successfully set", False
		btn_click getObjectInfoFromXML("Build_CCC", objectsFile, "Value"), getObjectInfoFromXML("Build_CCC", objectsFile, "Description")
		Wait 10
		Browser("creationtime:=0").Sync

		'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		If NOT (verifyItemIDVal(itemid)) then
			itemRow = getRowNumberForNewItem()
			If Not IsEmpty(itemRow) Then
				'Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
				Browser("creationtime:=0").Page("index:=1").Image("name:=ITEM\$prompt\$img\$"&itemRow).click
				Browser("creationtime:=0").Sync
				Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(itemid)
				Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
				If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(itemid)).exist(5) Then
					Browser("creationtime:=0").Page("index:=1").Link("name:=" & Trim(itemid)).click
				Else
					Call WriteToReport(micFail, "Item ID is not displayed", "c item ID " & itemid & " is not selected", True)
				End If

				'Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$"&itemRow).Set RfndCC(2) PAYMENT_ITEM_ITEM$prompt$img$1 ITEM_ITEM2_VW_ITEM
				If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$" & itemRow).GetROProperty("checked") = 1 Then
					Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID " & itemid & " is selected", False)
				Else
					Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
				End If
			Else
				Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_ITEM\$newm\$0\$\$0").Click 
				Wait 3
				Browser("creationtime:=0").Dialog("text:=cdw.com needs some information").WinButton("regexpwndtitle:=OK").Click
				Wait 3
				itemRow = getRowNumberForNewItem()
				Browser("creationtime:=0").Page("index:=1").Image("name:=ITEM\$prompt\$img\$"&itemRow).click
				Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(itemid)
				Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
				If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(itemid)).exist(5) Then
					Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(itemid)).click
				Else
					Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&itemid&" is not selected",True)     
				End If

				If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$" & itemRow).GetROProperty("checked") = 1 Then
					Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID " & itemid & " is selected", False)
				Else
					Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$" & itemRow).Click 
				End If
			End If
		Else
			If  Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&Trim(itemid)).exist(30) Then
				rNum = Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&Trim(itemid)).getroproperty("html id")
				If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).GetROProperty("checked") = 1 Then
					Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&itemid&" is selected", False)
				Else
					Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).Click 
				End If
			Else
				itemRow = getRowNumberForNewItem()
				'call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM", RfndCC(2),"Item ID in Detail 1 Tab")
				Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$" & itemRow).click
				Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(RfndCC(2))
				Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
				If Browser("creationtime:=0").Page("index:=1").Link("name:=" & Trim(itemid)).exist(5) Then
					Browser("creationtime:=0").Page("index:=1").Link("name:=" & Trim(itemid)).click
				Else
					Call WriteToReport(micFail, "Item ID is not displayed", "c item ID " & itemid & " is not selected", True)
				End If

				If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
					Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&itemid&" is selected", False)
				Else
					Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
				End If                     
			End If
		End If

		''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		pendingbal=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY","html id:=PAYMENT_WRK_PENDING_AMT","html tag:=SPAN").GetROProperty("innerhtml")
		selectedbal=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY","html id:=PAYMENT_AMT_SEL","html tag:=SPAN").GetROProperty("innerhtml")
		If pendingbal= selectedbal Then
			WriteToReport micPass, "Pending Balance is equal to Selected  Balance " , "Pending Balance is equal to Selected Balance successfully", False
		Else
			WriteToReport micFail, "Pending Balance is not equal to Selected Balance " , "Pending Balance is equal to Selected Balance not uccessfully", False       
		End If

		Wait 8
		'btn_click  getObjectInfoFromXML("save_cccc", objectsFile, "Value"), getObjectInfoFromXML("save_cccc", objectsFile, "Description")
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Click
		Wait 3
		click_Link getObjectInfoFromXML("credit_card_link_ccc", objectsFile, "Value"), getObjectInfoFromXML("credit_card_link_ccc", objectsFile, "Description")
		Wait 5
		WebList_select getObjectInfoFromXML("credit_card_type_ccc", objectsFile, "Value"), "MASTERCARD", ("MASTERCARD is selected from the weblist")
		setValue_WebEdit getObjectInfoFromXML("credit_card_number_ccc", objectsFile, "Value"), "540501RXOYUC0016", False, getObjectInfoFromXML("credit_card_number_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("credit_card_month_ccc", objectsFile, "Value"), GlobalDictionary("Month"), False, getObjectInfoFromXML("credit_card_month_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("credit_card_year_ccc", objectsFile, "Value"), GlobalDictionary("Year"), False, getObjectInfoFromXML("credit_card_year_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("first_name_ccc", objectsFile, "Value"), GlobalDictionary("Fiest Name"), False, getObjectInfoFromXML("first_name_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("last_name_ccc", objectsFile, "Value"), GlobalDictionary("Last Name"), False, getObjectInfoFromXML("last_name_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("email_address_ccc", objectsFile, "Value"), GlobalDictionary("Email"), False, getObjectInfoFromXML("email_address_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("phone_number_ccc", objectsFile, "Value"), GlobalDictionary("Phone Number"), False, getObjectInfoFromXML("phone_number_ccc", objectsFile, "Description")
		img_click getObjectInfoFromXML("creditcard_action_img_ccc", objectsFile, "Value"), getObjectInfoFromXML("creditcard_action_img_ccc", objectsFile, "Description")
		WebList_select getObjectInfoFromXML("cca_cccc", objectsFile, "Value"), "Authorize and Settle Later", getObjectInfoFromXML("cca_cccc", objectsFile, "Description")
		btn_click getObjectInfoFromXML("save_worksheet_bnt_ccc", objectsFile, "Value"), getObjectInfoFromXML("save_worksheet_bnt_ccc", objectsFile, "Description")
		click_Link getObjectInfoFromXML("return_worksheet_ccc", objectsFile, "Value"), getObjectInfoFromXML("return_worksheet_ccc", objectsFile, "Description")
		Wait 5
		click_Link getObjectInfoFromXML("worksheet_action_delete_ccc", objectsFile, "Value"), getObjectInfoFromXML("worksheet_action_delete_ccc", objectsFile, "Description")
		Wait 2
		btn_click getObjectInfoFromXML("delete_worksheet_bnt_ccc", objectsFile, "Value"), getObjectInfoFromXML("delete_worksheet_bnt_ccc", objectsFile, "Description")
		Wait 3
		btn_click getObjectInfoFromXML("ok_worksheet_bnt_ccc", objectsFile, "Value"), getObjectInfoFromXML("ok_worksheet_bnt_ccc", objectsFile, "Description")
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' RMS Suppression or Inclusion checks if the Customer is RMS Suppressed or Not 
''' </summary>
''' <author> Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function rmsSupressionorInclusion()
	Dim objCustId, creditAnalyst, strSQL, sConnectionString, sheetName, cust_id, name1, customerinfo, rows
	Dim srtBusinessValue, arrRecordValues

	Call WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(40) Then
			Call WriteToReport(micPass, "General Information Page", "General Information Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Information Page", "Failed to load General Information Page", True)
		End If

		srtBusinessValue = GlobalDictionary("BusinessUnit")
		customerinfo=dbgetrmssupressinclusion(srtBusinessValue)
		If dtSheetExist(GlobalDictionary("DBsheetname")) Then
			rows = datatable.GetSheet(GlobalDictionary("DBsheetname")).GetRowCount
			If rows > 0 Then
				GlobalDictionary("dataAvailable") = True
			Else
				GlobalDictionary("dataAvailable") = false
				Exit Function
			End If
		End If

		cust_id = DataTable.Value("CUST_ID", "Customer Information_" & srtBusinessValue)
		name1= DataTable.Value("NAME1", "Customer Information_" & srtBusinessValue)
		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")    
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "CUST_ALL_VW_CUST_ID", cust_id, "CustomerID")
		setValue_WebEdit getObjectInfoFromXML("Name_1", objectsFile, "Value"), name1, False, getObjectInfoFromXML("Name_1", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 2
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_SETID").Exist(30) Then
			Call WriteToReport(micPass, "General Info Page", "General Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Info Page", "Failed to load General Info Page", True)
		End If

		btn_click getObjectInfoFromXML("BilltoOptions_btn", objectsFile, "Value"), getObjectInfoFromXML("BilltoOptions_btn", objectsFile, "Description")
		Set objCustId = eval(getObjectInfoFromXML("CreditAnalyst_Webedit", objectsFile, "Value"))
		creditAnalyst = objCusTId.getROProperty("value")
		Call WriteToReport (micPass,"The Credit Analyst Field is populated with "&creditAnalyst&"","", True)
		If Trim(creditAnalyst) = "00000001" Then
			Call WriteToReport(micPass, "The Customer is Not RMS Suppressed", "General Info Page loaded Successfully", False)
		Else
			Call WriteToReport(micPass, "The Customer is RMS Suppressed, This means that a credit analyst will be handling this customer", "General Info Page loaded Successfully", False)
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Customer Information Conversation is to validate the Conversations of the Customer
''' </summary>
''' <author> Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function customerInformationConversation()
	Dim strSQL,strSQL1,cust_id,sConnectionString,sheetName,rows,customerConvo,arrRecordValues,getObjectFromXML,conversatin_Subject,conversation_Subtopic,promise_Payment,review_Date,supervisor_Review,followup_Action,followup_UserID,followup_Letter,referencetotals_Amount,referencetotals_Currency,keyword1,keyword2,keyword3,last_Modified_On,contact_id,description_Conversation,referencetotals_Date,review_Date1,last_Modified_On1,dateArr,timeArr,last_Modified_On2
	Dim srtBusinessValue, descripton , convDate
	Dim itemID, objReviewDate, uiReviewDate
	Dim objSubject, uiSubject, objSubtopic, uiSubtopic
	Dim objFollowupAction, uiFollowupAction, objFollowupUserID, uiFollowupUserID
	Dim objFollowupLetter, uiFollowupLetter, objAmount, uiAmount
	Dim objCurrency, uiCurrency, objPromiseDate, uiPromiseDate
	Dim objkeyword1, uikeyword1, objkeyword2, uikeyword2
	Dim objkeyword3, uikeyword3, objContactID, uiContactID
	Dim objDescription, uiDescription, uiDescriptionbus2, objDescription2
	Dim desArr, word, w, values, i, dictObj, re, trimWord, ch, ch1, r, uiArr
	Dim objLastModifiedOn, uiLastModifiedOn, uiDateArr, uiDate
	Dim date1, datetoValidate, uiDateModify

	Call WriteToReport (micPass, "###### " & GlobalDictionary("TestName") & " ######", "" & GlobalDictionary("TestObjective") & "", False)
	srtBusinessValue = GlobalDictionary("BusinessUnit")
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		Wait 5
		customerConvo=dbgetcustomerConvo(srtBusinessValue)
		If dtSheetExist(GlobalDictionary("DBsheetname")) Then
			rows = datatable.GetSheet(GlobalDictionary("DBsheetname")).GetRowCount
			If rows > 0 Then
				GlobalDictionary("dataAvailable") = True
			Else
				GlobalDictionary("dataAvailable") = false
				Exit Function
			End If
		End If

		cust_id = DataTable.Value("CUST_ID", "Customer Conversation Information_"& srtBusinessValue)
		Call click_Lookup_Img_And_Select_Item("Look up SetID.*","SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"),"SetID")    
	    setValue_WebEdit getObjectInfoFromXML("BusinessUnit_Customerconvo_webedit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("BusinessUnit_Customerconvo_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CustomerID_Customerconvo_webedit", objectsFile, "Value"),""&cust_id&"", False, getObjectInfoFromXML("CustomerID_Customerconvo_webedit", objectsFile, "Description")
		conversatin_Subject = DataTable.Value("CONVER_SUBJECT", "Customer Conversation Information_"& srtBusinessValue) ' as per Rini 06/08
		setValue_WebEdit getObjectInfoFromXML("Search_By_Subject_TXT", objectsFile, "Value"),""&conversatin_Subject&"", False, getObjectInfoFromXML("Search_By_Subject_TXT", objectsFile, "Description")
		itemID = DataTable.Value("ITEM_ID", "Customer Conversation Information_"& srtBusinessValue) ' as per Rini 06/08
		setValue_WebEdit getObjectInfoFromXML("Item_ID_TXT", objectsFile, "Value"),""&itemID&"", False, getObjectInfoFromXML("Item_ID_TXT", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		convDate = FormatDateTime(split(DataTable.Value("CONVER_DTTM", "Customer Conversation Information_"& srtBusinessValue)," ")(0),2)
	    descripton = TRIM(DataTable.Value("DESCRLONG", "Customer Conversation Information_"& srtBusinessValue))
		conversation_Subtopic=DataTable.Value("CONVER_SUB_TOPIC", "Customer Conversation Information_"& srtBusinessValue)
		promise_Payment=DataTable.Value("PROMISE_TO_PAY", "Customer Conversation Information_"& srtBusinessValue)
		review_Date=DataTable.Value("NEXT_REVIEW_DATE", "Customer Conversation Information_"& srtBusinessValue)
		review_Date1=dbDateConversion(""&review_Date&"")
		supervisor_Review=DataTable.Value("SUP_REVIEW", "Customer Conversation Information_"& srtBusinessValue)
		followup_Action=DataTable.Value("FOLLOW_UP_ACTION", "Customer Conversation Information_"& srtBusinessValue)
		followup_UserID=DataTable.Value("FOLLOW_UP_OPRID", "Customer Conversation Information_"& srtBusinessValue)
		followup_Letter=DataTable.Value("LETTER_CD", "Customer Conversation Information_"& srtBusinessValue)
		referencetotals_Amount=Clng(DataTable.Value(("REFERENCE_AMOUNT"), "Customer Conversation Information_"& srtBusinessValue))
		referencetotals_Currency=DataTable.Value("CURRENCY_CD", "Customer Conversation Information_"& srtBusinessValue)
		referencetotals_Date=DataTable.Value("PROMISE_DATE", "Customer Conversation Information_"& srtBusinessValue)
		keyword1=DataTable.Value("KEYWORD1", "Customer Conversation Information_"& srtBusinessValue)
		keyword2=DataTable.Value("KEYWORD2", "Customer Conversation Information_"& srtBusinessValue)
		keyword3=DataTable.Value("KEYWORD3", "Customer Conversation Information_"& srtBusinessValue)
		last_Modified_On=DataTable.Value("LAST_UPDATE_DTTM", "Customer Conversation Information_"& srtBusinessValue)
		description_Conversation=DataTable.Value("DESCRLONG", "Customer Conversation Information_"& srtBusinessValue)
		dateArr = Split(last_Modified_On," ")
		last_Modified_On1=dbDateConversion(Left(dateArr(0),10))

		'' if it has multiple recodrs with same filter values applied in above steps , then search results will display multiple records in grid
		If isObjExistNOReport(getObjectInfoFromXML("CustomerID_Customerconvo_Link", objectsFile, "Value"), getObjectInfoFromXML("CustomerID_Customerconvo_Link", objectsFile, "Description")) Then
			btn_click  getObjectInfoFromXML("CustomerID_Customerconvo_Link", objectsFile, "Value"), getObjectInfoFromXML("CustomerID_Customerconvo_Link", objectsFile, "Description")
		End If

		Wait 3
		Set objSubject = Eval(getObjectInfoFromXML("Subject_Conversation_Webelement", objectsFile, "Value"))
		uiSubject = objSubject.getROProperty("innertext")
		If Trim(conversatin_Subject) = Trim(uiSubject) Then
			Call WriteToReport (micPass, "Subject  is " & chr(34) & " " & uiSubject & " " & chr(34) & "", "Subject is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "Subjected is not Validated", " Validation of  Subject is failed", True)
		End If

		Wait 2
		Set objSubtopic = Eval(getObjectInfoFromXML("Subtopic_Conversation_Webelement", objectsFile, "Value"))
		uiSubtopic = objSubtopic.getROProperty("innertext")
		If Trim(conversation_Subtopic) = Trim(uiSubtopic) Then
			Call WriteToReport (micPass, "Subtopic  is " & chr(34) & " " & uiSubtopic & " " & chr(34) & "", "Subtopic is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "Subtopic is not Validated", " Validation of  Subtopic is failed", True)
		End If

		Wait 2
		If Trim(promise_Payment) = "N" Then
			verifyValue getObjectInfoFromXML("Promisetopay_chkbox", objectsFile, "Value"),"0","checked","Promise to pay is Validated"
		Else
			verifyValue getObjectInfoFromXML("Promisetopay_chkbox", objectsFile, "Value"),"1","checked","Promise to pay is Validated"
		End If

		Wait 2
		Set objReviewDate = eval(getObjectInfoFromXML("ReviewDate_Conversation_Webedit", objectsFile, "Value"))
		uiReviewDate = objReviewDate.getROProperty("value")
		If Trim(review_Date) = Trim(uiReviewDate) Then
			Call WriteToReport (micPass, "Review Date  is " & chr(34) & " " & uiReviewDate & " " & chr(34) & "", "Review Date is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "Review Date is not Validated", " Validation of Review Date is failed", True)
		End If

		Wait 2
		If Trim(supervisor_Review) = "N" Then
			verifyValue getObjectInfoFromXML("SupervisorReview_Chkbox", objectsFile, "Value"),"0","checked","Promise to pay is Validated"
		Else
		   verifyValue getObjectInfoFromXML("SupervisorReview_Chkbox", objectsFile, "Value"),"1","checked","Promise to pay is Validated"
		End If

		Wait 2
		Set objFollowupAction = Eval(getObjectInfoFromXML("FollowupAction_Webedit", objectsFile, "Value"))
		uiFollowupAction = objFollowupAction.getROProperty("value")
		If Trim(followup_Action) = Trim(uiFollowupAction) Then
			Call WriteToReport (micPass, "Follow up Action  is "&chr(34)&" "&uiFollowupAction&" "&chr(34)&"", "Follow up Action is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "Follow up Action is not Validated", " Validation of  Follow up Action is failed", True)
		End If
		
		Wait 2
		Set objFollowupUserID = eval(getObjectInfoFromXML("FollowupuserID_Webedit", objectsFile, "Value"))
		uiFollowupUserID = objFollowupUserID.getROProperty("value")
		If Trim(followup_UserID) = Trim(uiFollowupUserID) Then
			Call WriteToReport (micPass, "Follow up User ID  is "&chr(34)&" "&uiFollowupUserID&" "&chr(34)&"", "Follow up User ID is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "Follow up User ID is not Validated", " Validation of  Follow up User ID is failed", True)
		End If

		Wait 2
		Set objFollowupLetter = eval(getObjectInfoFromXML("FollowupLetter_Webedit", objectsFile, "Value"))
		uiFollowupLetter = objFollowupLetter.getROProperty("value")
		If Trim(followup_Letter) = Trim(uiFollowupLetter) Then
			Call WriteToReport (micPass, "Follow up Letter  is "&chr(34)&" "&uiFollowupLetter&" "&chr(34)&"", "Follow up Letter is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "Follow up Letter is not Validated", " Validation of  Follow up Letter is failed", True)
		End If

		Wait 2
		Set objAmount = eval(getObjectInfoFromXML("ReferencetotalsAmt_Webedit", objectsFile, "Value"))
		uiAmount = objAmount.getROProperty("Value")
		If len(Trim(uiAmount)) > 0 Then
			uiAmount = Clng(objAmount.getROProperty("value"))
		Else
			uiAmount = Clng(objAmount.getROProperty("innertext"))
		End If
		
		If Trim(referencetotals_Amount) = Trim(uiAmount) Then
			Call WriteToReport (micPass, "Amount  is "&chr(34)&" "&uiAmount&" "&chr(34)&"", "Amount is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "Amount is not Validated", " Validation of  Amount is failed", True)
		End If

		Wait 2
		Set objCurrency = eval(getObjectInfoFromXML("ReferencetotalsCurrency_Webedit", objectsFile, "Value"))
		uiCurrency = objCurrency.getROProperty("value")
		If Trim(referencetotals_Currency) = Trim(uiCurrency) Then
			Call WriteToReport (micPass, "Currency  is "&chr(34)&" "&uiCurrency&" "&chr(34)&"", "Currency is Validated successfully", False)
        Else
			Call WriteToReport (micFail, "Currency is not Validated", " Validation of  Currency is failed", True)
		End If

		Wait 2
		Set objPromiseDate = eval(getObjectInfoFromXML("ReferencetotalsDate_Webedit", objectsFile, "Value"))
		uiPromiseDate = objPromiseDate.getROProperty("defaultvalue")
		If Trim(referencetotals_Date) = Trim(uiPromiseDate) Then
		Call WriteToReport (micPass, "Promise Date  is "&chr(34)&" "&uiPromiseDate&" "&chr(34)&"", "Promise Date is Validated successfully", False)
		Else
		Call WriteToReport (micFail, "Promise Date is not Validated", " Validation of  Promise Date is failed", True)
		End If

		Wait 2
		Set objkeyword1 = eval(getObjectInfoFromXML("Keyword1_Webedit", objectsFile, "Value"))
		uikeyword1 = objkeyword1.getROProperty("value")
		If Trim(keyword1) = Trim(uikeyword1) Then
			Call WriteToReport (micPass, "keyword1  is "&chr(34)&" "&uikeyword1&" "&chr(34)&"", "keyword1 is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "keyword1 is not Validated", " Validation of  keyword1 is failed", True)
		End If
		
		Wait 2
		Set objkeyword2 = eval(getObjectInfoFromXML("Keyword2_Webedit", objectsFile, "Value"))
		uikeyword1 = objkeyword2.getROProperty("value")
		If Trim(keyword2) = Trim(uikeyword2) Then
			Call WriteToReport (micPass, "keyword2  is "&chr(34)&" "&uikeyword2&" "&chr(34)&"", "keyword2 is Validated successfully", False)
        Else
			Call WriteToReport (micFail, "keyword2 is not Validated", " Validation of keyword2 is failed", True)
		End If

		Wait 2
		Set objkeyword3 = eval(getObjectInfoFromXML("Keyword3_Webedit", objectsFile, "Value"))
		uikeyword1 = objkeyword3.getROProperty("value")
		If Trim(keyword3) = Trim(uikeyword3) Then
			Call WriteToReport (micPass, "keyword3  is "&chr(34)&" "&uikeyword3&" "&chr(34)&"", "keyword3 is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "keyword3 is not Validated", " Validation of  keyword3 is failed", True)
		End If
		
		Wait 2
		Set objContactID = eval(getObjectInfoFromXML("ContactID_Conver_WebElement", objectsFile, "Value"))
		uiContactID = objContactID.getROProperty("value")
		If Trim(contact_id) = Trim(uiContactID) Then
			Call WriteToReport (micPass, "ContactID  is "&chr(34)&" "&uiContactID&" "&chr(34)&"", "ContactID is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "ContactID is not Validated", " Validation of  ContactID is failed", True)
		End If

		Wait 2
		Set objDescription = eval(getObjectInfoFromXML("Description_Conver_Webedit", objectsFile, "Value"))
		uiDescription = objDescription.getROProperty("value")
		If StrComp(Trim(description_Conversation) , Trim(uiDescription)) = 0 Then
			Call WriteToReport (micPass, "Description  is "&chr(34)&" "&uiDescription&" "&chr(34)&"", "Description is Validated successfully", False)
		ElseIf StrComp(Trim(description_Conversation) , Trim(uiDescription)) <> 0  Then
			Browser("CreationTime:=0").Page("index:=1").WebButton("html id:=CDW_CONVR_WRK_SORTBY_PB").Click
			Set objDescription2 = eval(getObjectInfoFromXML("Description_Conver_Webedit", objectsFile, "Value"))
			uiDescriptionbus2 = objDescription2.getROProperty("value")
			If StrComp(Trim(description_Conversation) , Trim(uiDescriptionbus2)) = 0 Then
				Call WriteToReport (micpass, "Description  is "&chr(34)&" "&uiDescriptionbus2&" "&chr(34)&"", "Description is Validated successfully with "&description_Conversation, False)
			Else

				' to remove non-removable white space
				If strcomp(replace(replace(uiDescriptionbus2,chr(160),"")," ",""),replace(description_Conversation," ","")) = 0 Then
					Call WriteToReport (micpass, "Description  is "&chr(34)&" "&uiDescriptionbus2&" "&chr(34)&"", "Description is Validated successfully with "&description_Conversation, False)
				Else
					Call WriteToReport (micfail, "Description  is "&chr(34)&" "&uiDescriptionbus2&" "&chr(34)&"", "Description is not Validated successfully "&description_Conversation, True)     
				End If
			End If
		End If
	End If

	Wait 2
	last_Modified_On = DataTable.Value("LAST_UPDATE_DTTM", "Customer Conversation Information_" & srtBusinessValue)
	dateArr = Split(last_Modified_On, " ")
	last_Modified_On1=dbDateConversion(Left(dateArr(0),10))
	Set objLastModifiedOn = eval(getObjectInfoFromXML("LastModifiedON_Conver_WebElement", objectsFile, "Value"))
	uiLastModifiedOn = objLastModifiedOn.getROProperty("innertext")
	uiDateArr = Split(uiLastModifiedOn," ")
	uiDate = Replace(uiDateArr(0), Right(uiDateArr(0),2), Year(uiDateArr(0)))
	date1 = Split(dateArr(0),"/")
	If Len(date1(1)) < 2 Or Len(date1(0)) < 2 Then
		datetoValidate = "0"&date1(0)&"/0"&date1(1)&"/"&date1(2)
	Else
		If Len(date1(0)) < 2 Then
			datetoValidate = "0" & date1(0) & "/" & date1(1) & "/" & date1(2)
		ElseIf Len(date1(1)) < 2 Then
			datetoValidate = date1(0)&"/0"&date1(1)&"/"&date1(2)
		Else
			datetoValidate = dateArr(0)
		End If
	End If

	uiDateModify = split(uiDate,"/")
	If len(uiDateModify(2)) < 3 Then
		uiDate = uiDateModify(0)&"/"&uiDateModify(0)&"/"&"20"&"uiDateModify(2)"
	End If

	If datetoValidate=uiDate  Then
	
		'replace(uiDateArr(0),Right(uiDateArr(0),2),year(uiDateArr(0))) 
		Call WriteToReport (micPass, "Last Modified On  is "&chr(34)&" "&uiLastModifiedOn&" "&chr(34)&"", "Last Modified On is Validated successfully", False)
	Else
		Call WriteToReport (micFail, "Last Modified On is not Validated", " Validation of  Last Modified On is failed expected date is "&datetoValidate&" and displayed date is "&uiDate, True)
	End If

	Wait 2
	btn_click getObjectInfoFromXML("References_Conver_btn", objectsFile, "Value"), getObjectInfoFromXML("References_Conver_btn", objectsFile, "Description")
	if Browser("CreationTime:=0").Page("title:=View/Update Conversations").PSFrame("html id:=ptifrmtgtframe").WebElement("innertext:=Related Transactions").Exist(30) Then
		Call WriteToReport (micPass,"Related Transactions Header","Related Transactions Header is Displayed Successfully", True)
	Else
		Call WriteToReport (micFail, "Related Transactions ", "Related Transactions is not Displayed Successfully", True)
	End If
	
	If Browser("CreationTime:=0").Page("title:=View/Update Conversations").Link("innertext:=Reference ID").Exist(30) Then
		Call WriteToReport (micPass,"Reference ID  Header ","Reference ID  Header is Displayed Successfully", True)
	Else
		Call WriteToReport (micFail, "Reference ID  is not Displayed Successfully", "Reference ID  is not Displayed Successfully", True)
	End If

	If Browser("CreationTime:=0").Page("title:=View/Update Conversations").Link("innertext:=Reference Business Unit").Exist(30) Then
		Call WriteToReport (micPass,"Reference Business Unit  Header ","Reference Business Unit  Header is Displayed Successfully", True)
	Else
		Call WriteToReport (micFail, "Reference Business Unit  is not Displayed Successfully", "Reference Business Unit  is not Displayed Successfully", True)
	End If

	If Browser("CreationTime:=0").Page("title:=View/Update Conversations").Link("innertext:=Reference Business Unit").Exist(30) Then
		Call WriteToReport (micPass,"Reference Business Unit  Header","Reference Business Unit  Header is Displayed Successfully", True)
	Else
		Call WriteToReport (micFail, "Reference Business Unit  is not Displayed Successfully", "Reference Business Unit  is not Displayed Successfully", True)
	End If

	If Browser("CreationTime:=0").Page("title:=View/Update Conversations").Link("innertext:=Reference Business Unit").Exist(30) Then
		Call WriteToReport (micPass,"Reference Business Unit  Header ","Reference Business Unit  Header is Displayed Successfully", True)
	Else
		Call WriteToReport (micFail, "Reference Business Unit  is not Displayed Successfully", "Reference Business Unit  is not Displayed Successfully", True)
	End If

	btn_click  getObjectInfoFromXML("Attachments_Conver_btn", objectsFile, "Value"), getObjectInfoFromXML("Attachments_Conver_btn", objectsFile, "Description")
	If Browser("CreationTime:=0").Page("title:=View/Update Conversations").PSFrame("html id:=ptifrmtgtframe").WebElement("innertext:=Attached File","html tag:=SPAN").Exist(30) Then
		Call WriteToReport (micPass,"Attached Files Header","Attached Files Header is Displayed Successfully", True)
	Else
		Call WriteToReport (micFail, "Attached Files is not Displayed Successfully", "Attached Files is not Displayed Successfully", True)
	End If
	
	If Browser("CreationTime:=0").Page("title:=View/Update Conversations").PSFrame("html id:=ptifrmtgtframe").WebElement("innertext:=Attached File","html tag:=SPAN").Exist(40) Then
		Call WriteToReport (micPass,"Attached Files Header","Attached Files Header is Displayed Successfully", True)
	Else
		Call WriteToReport (micFail, "Attached Files is not Displayed Successfully", "Attached Files is not Displayed Successfully", True)
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Create Supplier is to tie a Supplier to a Customer
''' </summary>
''' <author> Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function createSupplier()
	Dim srtBusinessValue, strSQL1, sConnectionString, sheetName, cust_id1, arrRecordValues, recordCount, supplier_id, customerDetails, supplierDetails, rows
	Dim country, uicountry, address1, uiaddress1, address2, uiaddress2, city, uicity, postal, uipostal
	Dim emailID, uiemailID, contactName, uicontactName, contactTitle, uicontactTitle, paymentMethod, uipaymentMethod
	Dim loginPage, userBox, sUserName, tiedSupplierID

	Call WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		srtBusinessValue = GlobalDictionary("BusinessUnit")
		setValue_WebEdit getObjectInfoFromXML("SetID_Suppliersinfo_Webedit", objectsFile, "Value"),"SHARE",false, getObjectInfoFromXML("SetID_Suppliersinfo_Webedit", objectsFile, "Description")
		supplierDetails= dbSupplier(srtBusinessValue)
		If dtSheetExist(GlobalDictionary("DBsheetname")) Then
	        rows = datatable.GetSheet(GlobalDictionary("DBsheetname")).GetRowCount
	        If rows > 0 Then
        		GlobalDictionary("dataAvailable") = True
       		Else
       			GlobalDictionary("dataAvailable") = False
        		Exit Function
        	End If
        End If

		supplier_id = DataTable.Value("VENDOR_ID", "Supplier Details"& srtBusinessValue)
		setValue_WebEdit getObjectInfoFromXML("SupplierID_Suppliersinfo_Webedit", objectsFile, "Value"), supplier_id, False, getObjectInfoFromXML("SupplierID_Suppliersinfo_Webedit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 5  
		btn_click getObjectInfoFromXML("IdentifyingInformation_tab", objectsFile, "Value"), getObjectInfoFromXML("IdentifyingInformation_tab", objectsFile, "Description")
		If Browser("CreationTime:=0").Page("title:=Supplier").WebElement("innertext:=Supplier ID","html tag:=SPAN").Exist(40) Then
			Call WriteToReport(micPass, "Supplier Information Page", "Supplier Information Page is loaded Successfully", False)
        Else
            Call WriteToReport(micFail, "Supplier Information Page", "Failed to load Supplier Information Page", True)
        End If

		Wait 3
		btn_click getObjectInfoFromXML("AdditionalIDNumbers_tab", objectsFile, "Value"), getObjectInfoFromXML("AdditionalIDNumbers_tab", objectsFile, "Description")
		Wait 5
		customerDetails=dbgetcustomerSuplier(srtBusinessValue)
		cust_id1 = DataTable.Value("CUST_ID", "Customer ID"& srtBusinessValue)
		setValue_WebEdit getObjectInfoFromXML("SetID_Suppliers_Webedit", objectsFile, "Value"), "SHARE", False, getObjectInfoFromXML("SetID_Suppliers_Webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CustomerID_Suppliers_Webedit", objectsFile, "Value"), "" & cust_id1 & "", False, getObjectInfoFromXML("CustomerID_Suppliers_Webedit", objectsFile, "Description")
		Wait 2
		btn_click getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK","html tag:=INPUT").Exist Then
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK","html tag:=INPUT").Click
		End If

		Wait 5
		btn_click getObjectInfoFromXML("Address_Supplier_tab", objectsFile, "Value"), getObjectInfoFromXML("Address_Supplier_tab", objectsFile, "Description")
		country = DataTable.Value("COUNTRY", "Supplier Details" & srtBusinessValue)
		Wait 8
		uicountry = Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_ADDR_COUNTRY\$0", "html tag:=INPUT").GetROProperty("value")
		If Trim(country) = Trim(uicountry) Then
			Call WriteToReport (micPass, "country  is "&chr(34)&" "&uicountry&" "&chr(34)&"", "country is Validated successfully", False)
        Else
			Call WriteToReport (micFail, "country is not Validated", " Validation of  country is failed", False)
		End If

		address1= DataTable.Value("ADDRESS1", "Supplier Details"& srtBusinessValue)
		uiaddress1=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_ADDR_ADDRESS1\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(address1) = Trim(uiaddress1) Then
			Call WriteToReport (micPass, "address1  is "&chr(34)&" "&uiaddress1&" "&chr(34)&"", "address1 is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "address1 Letter is not Validated", " Validation of  address1 is failed", False)
		End If

		address2= DataTable.Value("ADDRESS2", "Supplier Details"& srtBusinessValue)
		uiaddress2=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_ADDR_ADDRESS2\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(address2) = Trim(uiaddress2) Then
			Call WriteToReport (micPass, "address2  is "&chr(34)&" "&uiaddress2&" "&chr(34)&"", "address1 is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "address2 Letter is not Validated", " Validation of  address2 is failed", False)
		End If

		city= DataTable.Value("CITY", "Supplier Details"& srtBusinessValue)
		uicity=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_ADDR_CITY\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(city) = Trim(uicity) Then
			Call WriteToReport (micPass, "city  is "&chr(34)&" "&uicity&" "&chr(34)&"", "city is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "city Letter is not Validated", " Validation of  city is failed", False)
		End If
		
		postal= DataTable.Value("POSTAL", "Supplier Details"& srtBusinessValue)
		uipostal=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_ADDR_POSTAL\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(postal) = Trim(uipostal) Then
			Call WriteToReport (micPass, "postal  is "&chr(34)&" "&uipostal&" "&chr(34)&"", "postal is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "postal Letter is not Validated", " Validation of  postal is failed", False)
		End If

		emailID= DataTable.Value("EMAILID", "Supplier Details"& srtBusinessValue)
		uiemailID=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_ADDR_EMAILID\$0", "html tag:=INPUT").GetROProperty("value")
		If Trim(emailID) = Trim(uiemailID) Then
			Call WriteToReport (micPass, "EmailID  is "&chr(34)&" "&uiemailID&" "&chr(34)&"", "EmailID is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "emailID Letter is not Validated", " Validation of  emailID is failed", False)
		End If

		btn_click getObjectInfoFromXML("Contacts_Supplier_tab", objectsFile, "Value"), getObjectInfoFromXML("Contacts_Supplier_tab", objectsFile, "Description")
		contactName= DataTable.Value("CONTACT_NAME", "Supplier Details"& srtBusinessValue)
		uicontactName=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_CNTCT_CONTACT_NAME\$0", "html tag:=INPUT").GetROProperty("value")
		If Trim(contactName) = Trim(uicontactName) Then
			Call WriteToReport (micPass, "Contact Name  is "&chr(34)&" "&uicontactName&" "&chr(34)&"", "Contact Name is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "contactName Letter is not Validated", " Validation of  contactName is failed", False)
		End If

		contactTitle= DataTable.Value("CONTACT_TITLE", "Supplier Details"& srtBusinessValue)
		uicontactTitle=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_CNTCT_CONTACT_TITLE\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(contactTitle) = Trim(uicontactTitle) Then
			Call WriteToReport (micPass, "Contact Title  is "&chr(34)&" "&uicontactTitle&" "&chr(34)&"", "Contact Title is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "contactTitle  is not Validated", " Validation of  contactTitle is failed", False)
		End If

		btn_click getObjectInfoFromXML("Location_Supplier_tab", objectsFile, "Value"), getObjectInfoFromXML("Location_Supplier_tab", objectsFile, "Description")
		If Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VNDR_LOC_SCROL_DESCR_LBL\$0").Exist Then
			Call WriteToReport(micPass, "Location Page", "Location Page is loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Location Page", "Failed to load Location Page", True)
		End If

		btn_click getObjectInfoFromXML("CorrectHistory_btn", objectsFile, "Value"), getObjectInfoFromXML("CorrectHistory_btn", objectsFile, "Description")          
		Wait 2          
		btn_click getObjectInfoFromXML("Payables_Supplier_Link", objectsFile, "Value"), getObjectInfoFromXML("Payables_Supplier_Link", objectsFile, "Description")
		If Browser("CreationTime:=0").Page("title:=Supplier").WebElement("innertext:=Payables Options","html tag:=SPAN").Exist Then
			Call WriteToReport(micPass, "Payables Options Page", "Payables Options Page is loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Payables Options Page", "Failed to load Payables Options Page", True)
		End If

		Wait 3
		btn_click getObjectInfoFromXML("AdditionalPayables_Supplier_tab", objectsFile, "Value"), getObjectInfoFromXML("AdditionalPayables_Supplier_tab", objectsFile, "Description")
		paymentMethod= DataTable.Value("PYMNT_METHOD", "Supplier Details"& srtBusinessValue)
		uipaymentMethod=Browser("CreationTime:=0").Page("title:=Supplier").WebElement("html id:=VENDOR_PAY_PYMNT_METHOD_ALT\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(paymentMethod) = Trim(uipaymentMethod) Then
			Call WriteToReport (micPass, "Payment Method  is "&chr(34)&" "&uipaymentMethod&" "&chr(34)&"", "Payment Method is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "paymentMethod Letter is not Validated", " Validation of  paymentMethod is failed", False)
		End If

		WebList_select getObjectInfoFromXML("PayMethodoptions_Supplier_weblist", objectsFile, "Value"),"Specify", getObjectInfoFromXML("PayMethodoptions_Supplier_weblist", objectsFile, "Description")
		WebList_select getObjectInfoFromXML("PaymentMethod_Supplier_weblist", objectsFile, "Value"),"System Check", getObjectInfoFromXML("PaymentMethod_Supplier_weblist", objectsFile, "Description")
		Wait 3
		btn_click  getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
		Wait 3
		btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK","html tag:=INPUT").Exist Then
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK","html tag:=INPUT").Click
		End If

		Wait 5
	End If

	login(GlobalDictionary("SignInUser1"))
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist Then
			Call WriteToReport(micPass, "General Information Page", "General Information Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "General Information Page", "Failed to load General Information Page", True)
		End If
	
	    Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")    
	    Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "CUST_ALL_VW_CUST_ID", "" & cust_id1 & "", "CustomerID")
	    Browser("creationtime:=0").Sync
	    'btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
	    Browser("title:=General Information").Page("title:=General Information").PSFrame("name:=TargetContent").WebButton("html id:=#ICSearch", "name:=Search").Click
	    Wait 2
	    btn_click getObjectInfoFromXML("Miscellaneousgeneralinfo_tab", objectsFile, "Value"), getObjectInfoFromXML("Miscellaneousgeneralinfo_tab", objectsFile, "Description")
	    Wait 2
	    btn_click  getObjectInfoFromXML("tiedSupplier_link", objectsFile, "Value"), getObjectInfoFromXML("tiedSupplier_link", objectsFile, "Description")
		tiedSupplierID=Browser("CreationTime:=0").Page("title:=General Information").WebElement("html id:=VENDOR_AR_VENDOR_ID\$0","html tag:=SPAN").GetROProperty("innertext")    
		If Trim(supplier_id) = Trim(tiedSupplierID) Then
			Call WriteToReport (micPass, " Tied Supplier ID is " & chr(34) & " " & tiedSupplierID & " " & chr(34) & "", "Tied Supplier ID  is Validated successfully", False)
		Else
			Call WriteToReport (micFail, "contactType Letter is not Validated", " Validation of  contactType is failed", False)
		End If
	
		'Deleting Tied Supplier in order to avoid Data Issues
		login(GlobalDictionary("SignInUser2"))
	   	If SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True Then
			If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist Then
	        	Call WriteToReport(micPass, "General Information Page", "General Information Page loaded Successfully", False)
	        Else
	            Call WriteToReport(micFail, "General Information Page", "Failed to load General Information Page", True)
	      	End If  
	
		    Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")    
		    Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "CUST_ALL_VW_CUST_ID", "" & cust_id1 & "", "CustomerID")
		    'btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		    Browser("title:=General Information").Page("title:=General Information").PSFrame("name:=TargetContent").WebButton("html id:=#ICSearch", "name:=Search").Click
		    Wait 2
		    btn_click getObjectInfoFromXML("Miscellaneousgeneralinfo_tab", objectsFile, "Value"), getObjectInfoFromXML("Miscellaneousgeneralinfo_tab", objectsFile, "Description")
		    Wait 2
		    setValue_WebEdit getObjectInfoFromXML("SetID_WebEdit_GeneralInfo", objectsFile, "Value"), "", False, getObjectInfoFromXML("SetID_WebEdit_GeneralInfo", objectsFile, "Description")
		    Wait 2
		    setValue_WebEdit getObjectInfoFromXML("SupplierID_WebEdit_GeneralInfo", objectsFile, "Value"), "", False, getObjectInfoFromXML("SupplierID_WebEdit_GeneralInfo", objectsFile, "Description")
		    Wait 2
		    btn_click getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
		End If
 	End If
 End Function
 
'**************************************************************************************************************
''' <summary> 
''' Customer Information - 01 to 03 Link
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function Customerinformation01to03link()

Dim tcObjective
tcObjective="Customer Information - 01 to 03 Link"
 WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then


if Browser("creationtime:=0").Page("index:=1").WebEdit("name:=CUST_AL_SRCH_SETID").Exist(30) Then
	        WriteToReport micPass, " General Information  page loaded successfully", "General Information Page loaded successfully", false
		Else
			WriteToReport micFail, "General Information Page not loaded", "General Information Page loading failed, so failing the test case", true
			Exit Function
		End If

		setValue_WebEdit getObjectInfoFromXML("SetIDGI", objectsFile, "Value"),(GlobalDictionary("setid")),false, getObjectInfoFromXML("SetIDGI", objectsFile, "Description")
	
		
		''''''''''''''''''''''''''QUERY FOR NON LINKED ACCOUNTS''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


		recordCount = dblinkedaacoutfinal((GlobalDictionary("businessunit")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
	
	custID = (recordCount(1))
		
		setValue_WebEdit getObjectInfoFromXML("Customer1", objectsFile, "Value"),custID,false, getObjectInfoFromXML("Customer1", objectsFile, "Description")
		
		End If 
		
		
		
		btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
		
		wait 15
		
		Dim custteamSupport,locationVal,countryCode,address1Val,address2Val,address3Val,cityVal,countyVal,stateVal,postalCode,geocodeVal,recordCount,custID

		custteamSupport=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("innertext")
		locationVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("innertext")
		address1Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("innertext")
		address2Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("innertext")
		address3Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("innertext")
		cityVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_CITY\$0").GetROProperty("innertext")
		countyVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("innertext")
		stateVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_STATE\$0").GetROProperty("innertext")
		postalCode=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("innertext")
		geocodeVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=TAX_WRK_GEOCODE_LOOKUP_PB\$span\$0").GetROProperty("innertext")
	
recordCount = dbFetchNewCustProperties11(custID, locationVal)
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

	
		if Trim(recordCount(23)) = Trim(Custteamsupport) then
			WriteToReport micPass, "Team Support Value  is "&Custteamsupport&"", "Team Support Value is Validated successfully", false
		Else
			WriteToReport micFail, "Team Support Value is not Validated", "Team Support Value is Validation failed", false
		End If
		
		If cint(recordCount(7)) = cint(locationVal) Then
             WriteToReport micPass, "Location Value  is "&locationVal&"", "Location Value is Validated successfully", false
        Else
             WriteToReport micFail, "Location Value ", "Location Value is Validation failed", false
         End If
         

 If (Trim(recordCount(8))) = (Trim(address1Val)) Then
        	WriteToReport micPass, "Address1 Value is "&address1Val&"", "Address1 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address1 Value ", "Address1 Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(9))) = (Trim(address2Val)) Then
        	WriteToReport micPass, "Address2 Value is "&address2Val&"", "Address2 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address2 Value ", "Address2 Value is Validation failed", false       
        End If

 If (Trim(recordCount(10))) = (Trim(address3Val)) Then
        	WriteToReport micPass, "Address3 Value is "&chr(34)&" "&address3Val&" "&chr(34)&" ", "Address3 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address3 Value ", "Address3 Value is Validation failed", false       
        End If
        
 If (Trim(recordCount(11))) = (Trim(cityVal)) Then
        	WriteToReport micPass, "City Value is "&cityVal&"", "City Value is Validated successfully", false
        Else
              WriteToReport micFail, "City Value ", "City Value is Validation failed", false       
        End If


 If (Trim(recordCount(12))) = (Trim(countyVal)) Then
        	WriteToReport micPass, "County Value is "&countyVal&"", "County Value is Validated successfully", false
        Else
              WriteToReport micFail, "County Value ", "County Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(13))) = (Trim(stateVal)) Then
        	WriteToReport micPass, "State Value is "&stateVal&"", "State Value is Validated successfully", false
        Else
              WriteToReport micFail, "State Value ", "State Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(14)) = Trim(postalCode) Then
        	WriteToReport micPass, "Postal Code Value is "&postalCode&"", "Postal Code Value is Validated successfully", false
        Else
              WriteToReport micFail, "Postal Code Value ", "Postal Code Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(15)) = Trim(geocodeVal) Then
        	WriteToReport micPass, "GeoCode Value is "&geocodeVal&"", "GeoCode Value is Validated successfully", false
        Else
              WriteToReport micFail, "GeoCode Value ", "GeoCode Value is Validation failed", false       
        End If
        End If
		
		
	wait 5
	
			
	verifyValue getObjectInfoFromXML("Corporate_Customer _GI", objectsFile, "Value"),"1","checked","The check box is checked as the expected value is 1 and property value is checked"
	
	wait 2
	recordCount = dbFetch1to3Properties((GlobalDictionary("businessunit")))

isArray(recordCount)
		
		If Ubound(recordCount) >= 0 Then
If (recordCount(1)) = (recordCount(2)) Then

WriteToReport micPass, " Corporate Customer check box IS checked for unlinked account "&recordCount(1)&". Verified Acoount Number is equal to Corp Cust ID which is "&recordCount(2)&"", "Corporate customer is checked and No linked account", false
	End If		
		
		
		wait 5
		
		GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CustinfoGenInfo") 
		SelectMainMenu1(GlobalDictionary("MainMenuSelection"))  

		''''''''''''''''''''''''''QUERY FOR LINKED ACCOUNTS''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
			

setValue_WebEdit getObjectInfoFromXML("SetIDGI", objectsFile, "Value"),"SHARE",false, getObjectInfoFromXML("SetIDGI", objectsFile, "Description")
Dim custID1
			
			recordCount = dbFetch1to3Propertiesnotlinked((GlobalDictionary("businessunit")))

		If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
		
		custID1 = (recordCount(1))
		
		setValue_WebEdit getObjectInfoFromXML("Customer1", objectsFile, "Value"),custID1,false, getObjectInfoFromXML("Customer1", objectsFile, "Description")

		End If 
		
		
		
		btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
		Wait 2
         if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").EXist(60) then
			custteamSupport=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("innertext")
		else
			WriteToReport micFail, "Team Support Value  field not found", "Uanble to validate Team Support Value", true
		End If
		locationVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("innertext")
		address1Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("innertext")
		address2Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("innertext")
		address3Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("innertext")
		cityVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_CITY\$0").GetROProperty("innertext")
		countyVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("innertext")
		stateVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_STATE\$0").GetROProperty("innertext")
		postalCode=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("innertext")
		geocodeVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=TAX_WRK_GEOCODE_LOOKUP_PB\$span\$0").GetROProperty("innertext")
	
recordCount = dbFetchNewCustProperties11(custID1,locationVal)
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

		if Trim(recordCount(23)) = Trim(Custteamsupport) then
			WriteToReport micPass, "Team Support Value  is "&Custteamsupport&"", "Team Support Value is Validated successfully", false
		Else
			WriteToReport micFail, "Team Support Value is not Validated", "Team Support Value is Validation failed", false
		End If
		
		If cint(recordCount(7)) = cint(locationVal) Then
             WriteToReport micPass, "Location Value  is "&locationVal&"", "Location Value is Validated successfully", false
        Else
             WriteToReport micFail, "Location Value ", "Location Value is Validation failed", false
         End If
         

 If (Trim(recordCount(8))) = (Trim(address1Val)) Then
        	WriteToReport micPass, "Address1 Value is "&address1Val&"", "Address1 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address1 Value ", "Address1 Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(9))) = (Trim(address2Val)) Then
        	WriteToReport micPass, "Address2 Value is "&address2Val&"", "Address2 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address2 Value ", "Address2 Value is Validation failed", false       
        End If

 If (Trim(recordCount(10))) = (Trim(address3Val)) Then
        	WriteToReport micPass, "Address3 Value is "&chr(34)&" "&address3Val&" "&chr(34)&" ", "Address3 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address3 Value ", "Address3 Value is Validation failed", false       
        End If
        
 If (Trim(recordCount(11))) = (Trim(cityVal)) Then
        	WriteToReport micPass, "City Value is "&cityVal&"", "City Value is Validated successfully", false
        Else
              WriteToReport micFail, "City Value ", "City Value is Validation failed", false       
        End If


 If (Trim(recordCount(12))) = (Trim(countyVal)) Then
        	WriteToReport micPass, "County Value is "&countyVal&"", "County Value is Validated successfully", false
        Else
              WriteToReport micFail, "County Value ", "County Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(13))) = (Trim(stateVal)) Then
        	WriteToReport micPass, "State Value is "&stateVal&"", "State Value is Validated successfully", false
        Else
              WriteToReport micFail, "State Value ", "State Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(14)) = Trim(postalCode) Then
        	WriteToReport micPass, "Postal Code Value is "&postalCode&"", "Postal Code Value is Validated successfully", false
        Else
              WriteToReport micFail, "Postal Code Value ", "Postal Code Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(15)) = Trim(geocodeVal) Then
        	WriteToReport micPass, "GeoCode Value is "&geocodeVal&"", "GeoCode Value is Validated successfully", false
        Else
              WriteToReport micFail, "GeoCode Value ", "GeoCode Value is Validation failed", false       
        End If
        End If
		
		
	wait 5

		
	verifyValue getObjectInfoFromXML("Corporate_Customer _GI", objectsFile, "Value"),"0","checked","The check box is not checked as the expected value is 0 and property value is checked"

wait 2
	recordCount = dbFetch1to3Propertiesnotlinked((GlobalDictionary("businessunit")))

isArray(recordCount)
		
		If Ubound(recordCount) >= 0 Then


		If (recordCount(1)) <> (recordCount(2)) Then

Dim corpcustcustid

corpcustcustid=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_CORPORATE_CUST_ID").GetROProperty("innertext")

If (recordCount(2)) = corpcustcustid Then
	
	WriteToReport micPass, "Corporate Customer check box NOT checked and the account "&corpcustcustid&" is linked to "&recordCount(1)&"", "Corporate customer is not checked and the account linked is "&corpcustcustid&" ", false

End If
	
	End If

End If
End If	
End If
		
End Function 



'**************************************************************************************************************
''' <summary> 
''' Customer Acct Information - Verbal PO
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function VerbalPO()
	Dim tcObjective,recordCount,custID2
tcObjective="Customer Acct Information - Verbal PO"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

	
	if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
	

	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist Then
	        WriteToReport micPass, " Collections Workbench  page loaded successfully", "Collections Workbench Page loaded successfully", false
		Else
			WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
			Exit Function
		End If
	
	   check_WebEditBox_Value getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"), getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
	   check_WebEditBox_Value getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
	   
	   recordCount = dbFetch1to3Properties(GlobalDictionary("BusinessUnit"))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

	
	custID2 = (recordCount(1))
		
		setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custID2,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
		
		
		WriteToReport micPass, "Customer ID  is "&custID2&" ", "Customer ID Value is enterd successfully", false
		
		
		End If 

	   btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
	

Dim valueofVerbalPO

valueofVerbalPO=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSHYPERLINKDISABLED","html id:=AR_CWB_CDFLD_WS_LINK1\$span\$5","html tag:=SPAN").GetROProperty("innerhtml")

recordCount = verbalpovalue(custID2)


If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
Dim sqlvalue
sqlvalue = recordCount(0)
	
if Trim(recordCount(0)) = Trim(valueofVerbalPO) then
			WriteToReport micPass, "Verbal PO Value  in the application is "&valueofVerbalPO&", Value retrieved from sql query is "&sqlvalue&" ", "Verbal PO Value is Validated successfully", false
		Else
			WriteToReport micFail, "Verbal PO Value is not Validated", "Verbal PO Value is Validation failed", false
		End If
		
		End If 


	End If		
End Function


'**************************************************************************************************************
''' <summary> 
'''Customer Acct Information - RMS Suppression/Inclusion
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function Rmssuppression()
	Dim tcObjective,recordCount,custID2
tcObjective="Customer Acct Information - RMS Suppression/Inclusion"
 WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false



	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_ARCollectionsWorkbench")
	
	if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist Then
	        WriteToReport micPass, " Collections Workbench  page loaded successfully", "Collections Workbench Page loaded successfully", false
		Else
			WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
			Exit Function
		End If
	
	   check_WebEditBox_Value getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"), getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
	   check_WebEditBox_Value getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
	   
	   recordCount = dbFetch1to3Properties((GlobalDictionary("BusinessUnit")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
	
	custID2 = (recordCount(1))
		
		setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custID2,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
	
		WriteToReport micPass, "Customer ID  is "&custID2&" ", "Customer ID Value is enterd successfully", false
		
		
		End If 
		
	   Dim arspec,arspec1
	   
	   
	   btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
	
	arspec=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSHYPERLINKDISABLED","html id:=AR_CWB_CDFLD_WS_LINK1\$span\$2","html tag:=SPAN").GetROProperty("innerhtml")


If arspec <> RMSSuppression Then
	
	WriteToReport micPass, "Customer "&custID2&" IS RMS Suppressed as the Value of AR Specialist is "&arspec&" and not RMS Suppressed", "AR Specialist Value is Validated successfully", false
		Else
			WriteToReport micFail, "AR Specialist Value is not Validated", "AR Specialist Value is Validation failed", false
		End If

'''''''''''''''''''''''''''''''''''''''''
	GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_ARCollectionsWorkbench")
	
	if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist Then
	        WriteToReport micPass, " Collections Workbench  page loaded successfully", "Collections Workbench Page loaded successfully", false
		Else
			WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
			Exit Function
		End If
	
	   check_WebEditBox_Value getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"), getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
	   check_WebEditBox_Value getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
	   	
recordCount = rmsnotsuppressed

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

	
	custID2 = (recordCount(0))
		
		setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custID2,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
		
		
		WriteToReport micPass, "Customer ID  is "&custID2&" ", "Customer ID Value is enterd successfully", false
	
		End If 
	
	   btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
	
		arspec1=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSHYPERLINKDISABLED","html id:=AR_CWB_CDFLD_WS_LINK1\$span\$2","html tag:=SPAN","innerhtml:=RMS").GetROProperty("innerhtml")

	
	WriteToReport micPass, "Customer "&custID2&" is NOT RMS Suppressed as the Value of AR Specialist is "&arspec1&" ", "AR Specialist Value is Validated successfully", false

	
	
	End If	
	
	End If		
End Function


'**************************************************************************************************************
''' <summary> 
''' Customer Information - 02 to 03 Link
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function Customerinformation02to03link()

Dim tcObjective
tcObjective="Customer Information - 02 to 03 Link"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then


if Browser("creationtime:=0").Page("index:=1").WebEdit("name:=CUST_AL_SRCH_SETID").Exist(30) Then
	        WriteToReport micPass, " General Information  page loaded successfully", "General Information Page loaded successfully", false
		Else
			WriteToReport micFail, "General Information Page not loaded", "General Information Page loading failed, so failing the test case", true
			Exit Function
		End If

	wait 5
		setValue_WebEdit getObjectInfoFromXML("SetIDGI", objectsFile, "Value"),"SHARE",false, getObjectInfoFromXML("SetIDGI", objectsFile, "Description")
	
		''''''''''''''''''''''''''QUERY FOR NON LINKED ACCOUNTS''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

		recordCount = dblinkedaacoutfinal((GlobalDictionary("businessunit")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
	
	         custID = (recordCount(1))
		
		setValue_WebEdit getObjectInfoFromXML("Customer1", objectsFile, "Value"),custID,false, getObjectInfoFromXML("Customer1", objectsFile, "Description")
		
		End If 
	
		wait 3
		
		btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
		
		wait 5
		
		Dim custteamSupport,locationVal,countryCode,address1Val,address2Val,address3Val,cityVal,countyVal,stateVal,postalCode,geocodeVal,recordCount,custID
		
		custteamSupport=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("innertext")
		locationVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("innertext")
		address1Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("innertext")
		address2Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("innertext")
		address3Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("innertext")
		cityVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_CITY\$0").GetROProperty("innertext")
		countyVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("innertext")
		stateVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_STATE\$0").GetROProperty("innertext")
		postalCode=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("innertext")
		geocodeVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=TAX_WRK_GEOCODE_LOOKUP_PB\$span\$0").GetROProperty("innertext")
		
	
recordCount = dbFetchNewCustProperties11(custID,locationVal)
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

		if Trim(recordCount(23)) = Trim(Custteamsupport) then
			WriteToReport micPass, "Team Support Value  is "&Custteamsupport&"", "Team Support Value is Validated successfully", false
		Else
			WriteToReport micFail, "Team Support Value is not Validated", "Team Support Value is Validation failed", false
		End If
		
		If cint(recordCount(7)) = cint(locationVal) Then
             WriteToReport micPass, "Location Value  is "&locationVal&"", "Location Value is Validated successfully", false
        Else
             WriteToReport micFail, "Location Value ", "Location Value is Validation failed", false
         End If
         

 If (Trim(recordCount(8))) = (Trim(address1Val)) Then
        	WriteToReport micPass, "Address1 Value is "&address1Val&"", "Address1 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address1 Value ", "Address1 Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(9))) = (Trim(address2Val)) Then
        	WriteToReport micPass, "Address2 Value is "&address2Val&"", "Address2 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address2 Value ", "Address2 Value is Validation failed", false       
        End If

 If (Trim(recordCount(10))) = (Trim(address3Val)) Then
        	WriteToReport micPass, "Address3 Value is "&chr(34)&" "&address3Val&" "&chr(34)&" ", "Address3 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address3 Value ", "Address3 Value is Validation failed", false       
        End If
        
 If (Trim(recordCount(11))) = (Trim(cityVal)) Then
        	WriteToReport micPass, "City Value is "&cityVal&"", "City Value is Validated successfully", false
        Else
              WriteToReport micFail, "City Value ", "City Value is Validation failed", false       
        End If


 If (Trim(recordCount(12))) = (Trim(countyVal)) Then
        	WriteToReport micPass, "County Value is "&countyVal&"", "County Value is Validated successfully", false
        Else
              WriteToReport micFail, "County Value ", "County Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(13))) = (Trim(stateVal)) Then
        	WriteToReport micPass, "State Value is "&stateVal&"", "State Value is Validated successfully", false
        Else
              WriteToReport micFail, "State Value ", "State Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(14)) = Trim(postalCode) Then
        	WriteToReport micPass, "Postal Code Value is "&postalCode&"", "Postal Code Value is Validated successfully", false
        Else
              WriteToReport micFail, "Postal Code Value ", "Postal Code Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(15)) = Trim(geocodeVal) Then
        	WriteToReport micPass, "GeoCode Value is "&geocodeVal&"", "GeoCode Value is Validated successfully", false
        Else
              WriteToReport micFail, "GeoCode Value ", "GeoCode Value is Validation failed", false       
        End If
        End If
		
		
	wait 5
		
	verifyValue getObjectInfoFromXML("Corporate_Customer _GI", objectsFile, "Value"),"1","checked","The check box is checked as the expected value is 1 and property value is checked"
	
	wait 2
	recordCount = dbFetch1to3Properties((GlobalDictionary("businessunit")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

WriteToReport micPass, " Corporate Customer check box IS checked for unlinked account "&recordCount(1)&". Verified Acoount Number is equal to Corp Cust ID which is "&recordCount(2)&"", "Corporate customer is checked and No linked account", false
	End If		
		
		
		wait 5
	
					 GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CustinfoGenInfo")
                     SelectMainMenu1(GlobalDictionary("MainMenuSelection"))  
	
		
		''''''''''''''''''''''''''QUERY FOR LINKED ACCOUNTS''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	
setValue_WebEdit getObjectInfoFromXML("SetIDGI", objectsFile, "Value"),(GlobalDictionary("setid")),false, getObjectInfoFromXML("SetIDGI", objectsFile, "Description")
Dim custID1
			
			recordCount = dbFetch1to3Propertiesnotlinked((GlobalDictionary("businessunit")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
		
		custID1 = (recordCount(1))
		
		setValue_WebEdit getObjectInfoFromXML("Customer1", objectsFile, "Value"),custID1,false, getObjectInfoFromXML("Customer1", objectsFile, "Description")

		End If 
		
		wait 5
		
		btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
		
		
		custteamSupport=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_TEAM_SUPPORT_TEAM_CD\$0").GetROProperty("innertext")
		locationVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDR_SEQ_ADDRESS_SEQ_NUM\$0").GetROProperty("innertext")
		address1Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS1\$0").GetROProperty("innertext")
		address2Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS2\$0").GetROProperty("innertext")
		address3Val=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_ADDRESS3\$0").GetROProperty("innertext")
		cityVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_CITY\$0").GetROProperty("innertext")
		countyVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_COUNTY\$0").GetROProperty("innertext")
		stateVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_STATE\$0").GetROProperty("innertext")
		postalCode=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_ADDRESS_POSTAL\$0").GetROProperty("innertext")
		geocodeVal=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=TAX_WRK_GEOCODE_LOOKUP_PB\$span\$0").GetROProperty("innertext")

recordCount = dbFetchNewCustProperties11(custID1,locationVal)
	
	If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
	

	if Trim(recordCount(23)) = Trim(Custteamsupport) then
			WriteToReport micPass, "Team Support Value  is "&Custteamsupport&"", "Team Support Value is Validated successfully", false
		Else
			WriteToReport micFail, "Team Support Value is not Validated", "Team Support Value is Validation failed", false
		End If
		
		If cint(recordCount(7)) = cint(locationVal) Then
             WriteToReport micPass, "Location Value  is "&locationVal&"", "Location Value is Validated successfully", false
        Else
             WriteToReport micFail, "Location Value ", "Location Value is Validation failed", false
         End If
         

 If (Trim(recordCount(8))) = (Trim(address1Val)) Then
        	WriteToReport micPass, "Address1 Value is "&address1Val&"", "Address1 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address1 Value ", "Address1 Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(9))) = (Trim(address2Val)) Then
        	WriteToReport micPass, "Address2 Value is """"", "Address2 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address2 Value ", "Address2 Value is Validation failed", false       
        End If

 If (Trim(recordCount(10))) = (Trim(address3Val)) Then
        	WriteToReport micPass, "Address3 Value is "&address3Val&"", "Address3 Value is Validated successfully", false
        Else
              WriteToReport micFail, "Address3 Value ", "Address3 Value is Validation failed", false       
        End If
        
 If (Trim(recordCount(11))) = (Trim(cityVal)) Then
        	WriteToReport micPass, "City Value is "&cityVal&"", "City Value is Validated successfully", false
        Else
              WriteToReport micFail, "City Value ", "City Value is Validation failed", false       
        End If


 If (Trim(recordCount(12))) = (Trim(countyVal)) Then
        	WriteToReport micPass, "County Value is "&countyVal&"", "County Value is Validated successfully", false
        Else
              WriteToReport micFail, "County Value ", "County Value is Validation failed", false       
        End If
        
        
         If (Trim(recordCount(13))) = (Trim(stateVal)) Then
        	WriteToReport micPass, "State Value is "&stateVal&"", "State Value is Validated successfully", false
        Else
              WriteToReport micFail, "State Value ", "State Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(14)) = Trim(postalCode) Then
        	WriteToReport micPass, "Postal Code Value is "&postalCode&"", "Postal Code Value is Validated successfully", false
        Else
              WriteToReport micFail, "Postal Code Value ", "Postal Code Value is Validation failed", false       
        End If
        
        
         If Trim(recordCount(15)) = Trim(geocodeVal) Then
        	WriteToReport micPass, "GeoCode Value is "&geocodeVal&"", "GeoCode Value is Validated successfully", false
        Else
              WriteToReport micFail, "GeoCode Value ", "GeoCode Value is Validation failed", false       
        End If
        End If
		
		
	wait 5

			
	verifyValue getObjectInfoFromXML("Corporate_Customer _GI", objectsFile, "Value"),"0","checked","The check box is not checked as the expected value is 0 and property value is checked"

	wait 2
	recordCount = dbFetch1to3Propertiesnotlinked((GlobalDictionary("businessunit")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True


		If (recordCount(1)) <> (recordCount(2)) Then

Dim corpcustcustid


corpcustcustid=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUSTOMER_CORPORATE_CUST_ID").GetROProperty("innertext")
If (recordCount(2)) = corpcustcustid Then
	
	WriteToReport micPass, "Corporate Customer check box NOT checked and the account "&corpcustcustid&" is linked to "&recordCount(1)&"", "Corporate customer is not checked and the account linked is "&corpcustcustid&" ", false

End If


		End If
	
End If
End If	

		
End Function

'**************************************************************************************************************
''' <summary> 
''' "Validate VAT Config & Inv Flag
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function VATConfig()
    
Dim tcObjective
tcObjective="Validate VAT Config & Inv Flag"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then


       if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Billing VAT TAX Configuration").Exist Then
            WriteToReport micPass, " Bill VAT TAX Configuration   page loaded successfully", "Bill VAT TAX Configuration  Page loaded successfully", false
         Else
            WriteToReport micFail, "Bill VAT TAX Configuration  Page not loaded", "Bill VAT TAX Configuration  Page loading failed, so failing the test case", true
            Exit Function
        End If

wait 3
btn_click  getObjectInfoFromXML("viewall_vat", objectsFile, "Value"), getObjectInfoFromXML("viewall_vat", objectsFile, "Description")

'''''''''''''Validating Values on Bill VAT TAX Configuration page''''''''''''''''''''''''''''
Dim businessunit1,businessunit2,businessunit3,businessunit4,businessunit5,businessunit6,businessunit7,businessunit8,businessunit9,businessunit10,businessunit11
Dim bnvms1,bnvms2,bnvms3,bnvms4,bnvms5,bnvms6,bnvms7,bnvms8,bnvms9,bnvms10,bnvms11
Set bnvms1 = eval(getObjectInfoFromXML("businessunit1_vat", objectsFile, "Value"))
businessunit1 =bnvms1.getROProperty("default value")

Set bnvms2 = eval(getObjectInfoFromXML("businessunit2_vat", objectsFile, "Value"))
businessunit2 =bnvms2.getROProperty("default value")

Set bnvms3= eval(getObjectInfoFromXML("businessunit3_vat", objectsFile, "Value"))
businessunit3 =bnvms3.getROProperty("default value")

Set bnvms4= eval(getObjectInfoFromXML("businessunit4_vat", objectsFile, "Value"))
businessunit4 =bnvms4.getROProperty("default value")

Set bnvms5= eval(getObjectInfoFromXML("businessunit5_vat", objectsFile, "Value"))
businessunit5 =bnvms5.getROProperty("default value")


Set bnvms6= eval(getObjectInfoFromXML("businessunit6_vat", objectsFile, "Value"))
businessunit6 =bnvms6.getROProperty("default value")

Set bnvms7= eval(getObjectInfoFromXML("businessunit7_vat", objectsFile, "Value"))
businessunit7 =bnvms7.getROProperty("default value")

Set bnvms8= eval(getObjectInfoFromXML("businessunit8_vat", objectsFile, "Value"))
businessunit8 =bnvms8.getROProperty("default value")

Set bnvms9= eval(getObjectInfoFromXML("businessunit9_vat", objectsFile, "Value"))
businessunit9 =bnvms9.getROProperty("default value")

Set bnvms10= eval(getObjectInfoFromXML("businessunit10_vat", objectsFile, "Value"))
businessunit10 =bnvms10.getROProperty("default value")

Set bnvms11= eval(getObjectInfoFromXML("businessunit11_vat", objectsFile, "Value"))
businessunit11 =bnvms11.getROProperty("default value")


Dim province1,province2,province3,province4,province5,province6,province7,province8,province9,province10,province11
Dim prv1,prv2,prv3,prv4,prv5,prv6,prv7,prv8,prv9,prv10,prv11
Set prv1 = eval(getObjectInfoFromXML("province1_vat", objectsFile, "Value"))
province1 =prv1.getROProperty("default value")

Set prv2 = eval(getObjectInfoFromXML("province2_vat", objectsFile, "Value"))
province2 =prv2.getROProperty("default value")

Set prv3= eval(getObjectInfoFromXML("province3_vat", objectsFile, "Value"))
province3 =prv3.getROProperty("default value")

Set prv4= eval(getObjectInfoFromXML("province4_vat", objectsFile, "Value"))
province4 =prv4.getROProperty("default value")

Set prv5= eval(getObjectInfoFromXML("province5_vat", objectsFile, "Value"))
province5 =prv5.getROProperty("default value")


Set prv6= eval(getObjectInfoFromXML("province6_vat", objectsFile, "Value"))
province6 =prv6.getROProperty("default value")

Set prv7= eval(getObjectInfoFromXML("province7_vat", objectsFile, "Value"))
province7 =prv7.getROProperty("default value")

Set prv8= eval(getObjectInfoFromXML("province8_vat", objectsFile, "Value"))
province8 =prv8.getROProperty("default value")

Set prv9= eval(getObjectInfoFromXML("province9_vat", objectsFile, "Value"))
province9 =prv9.getROProperty("default value")

Set prv10= eval(getObjectInfoFromXML("province10_vat", objectsFile, "Value"))
province10 =prv10.getROProperty("default value")

Set prv11= eval(getObjectInfoFromXML("province11_vat", objectsFile, "Value"))
province11 =prv11.getROProperty("default value")


Dim sourcetax1,sourcetax2,sourcetax3,sourcetax4,sourcetax5,sourcetax6,sourcetax7,sourcetax8,sourcetax9,sourcetax10,sourcetax11
Dim srt1,srt2,srt3,srt4,srt5,srt6,srt7,srt8,srt9,srt10,srt11

Set srt1 = eval(getObjectInfoFromXML("sourcetax1_vat", objectsFile, "Value"))
sourcetax1 =srt1.getROProperty("default value")

Set srt2 = eval(getObjectInfoFromXML("sourcetax2_vat", objectsFile, "Value"))
sourcetax2 =srt2.getROProperty("default value")

Set srt3= eval(getObjectInfoFromXML("sourcetax3_vat", objectsFile, "Value"))
sourcetax3 =srt3.getROProperty("default value")

Set srt4= eval(getObjectInfoFromXML("sourcetax4_vat", objectsFile, "Value"))
sourcetax4 =srt4.getROProperty("default value")

Set srt5=eval(getObjectInfoFromXML("sourcetax5_vat", objectsFile, "Value"))
sourcetax5 =srt5.getROProperty("default value")


Set srt6= eval(getObjectInfoFromXML("sourcetax6_vat", objectsFile, "Value"))
sourcetax6 =srt6.getROProperty("default value")

Set srt7= eval(getObjectInfoFromXML("sourcetax7_vat", objectsFile, "Value"))
sourcetax7 =srt7.getROProperty("default value")

Set srt8= eval(getObjectInfoFromXML("sourcetax8_vat", objectsFile, "Value"))
sourcetax8 =srt8.getROProperty("default value")

Set srt9=eval(getObjectInfoFromXML("sourcetax9_vat", objectsFile, "Value"))
sourcetax9 =srt9.getROProperty("default value")

Set srt10= eval(getObjectInfoFromXML("sourcetax10_vat", objectsFile, "Value"))
sourcetax10 =srt10.getROProperty("default value")

Set srt11= eval(getObjectInfoFromXML("sourcetax11_vat", objectsFile, "Value"))
sourcetax11 =srt11.getROProperty("default value")

Dim sourceacct1,sourceacct2,sourceacct3,sourceacct4,sourceacct5,sourceacct6,sourceacct7,sourceacct8,sourceacct9,sourceacct10,sourceacct11
Dim scv1,scv2,scv3,scv4,scv5,scv6,scv7,scv8,scv9,scv10,scv11
Set scv1 = eval(getObjectInfoFromXML("sourceacct1_vat", objectsFile, "Value"))
sourceacct1 =scv1.getROProperty("default value")

Set scv2 = eval(getObjectInfoFromXML("sourceacct2_vat", objectsFile, "Value"))
sourceacct2 =scv2.getROProperty("default value")

Set scv3= eval(getObjectInfoFromXML("sourceacct3_vat", objectsFile, "Value"))
sourceacct3 =scv3.getROProperty("default value")

Set scv4= eval(getObjectInfoFromXML("sourceacct4_vat", objectsFile, "Value"))
sourceacct4 =scv4.getROProperty("default value")

Set scv5= eval(getObjectInfoFromXML("sourceacct5_vat", objectsFile, "Value"))
sourceacct5 =scv5.getROProperty("default value")


Set scv6= eval(getObjectInfoFromXML("sourceacct6_vat", objectsFile, "Value"))
sourceacct6 =scv6.getROProperty("default value")

Set scv7= eval(getObjectInfoFromXML("sourceacct7_vat", objectsFile, "Value"))
sourceacct7 =scv7.getROProperty("default value")

Set scv8=eval(getObjectInfoFromXML("sourceacct8_vat", objectsFile, "Value"))
sourceacct8 =scv8.getROProperty("default value")

Set scv9= eval(getObjectInfoFromXML("sourceacct9_vat", objectsFile, "Value"))
sourceacct9 =scv9.getROProperty("default value")

Set scv10= eval(getObjectInfoFromXML("sourceacct10_vat", objectsFile, "Value"))
sourceacct10 =scv10.getROProperty("default value")

Set scv11= eval(getObjectInfoFromXML("sourceacct11_vat", objectsFile, "Value"))
sourceacct11 =scv11.getROProperty("default value")

Dim sourcedept1,sourcedept2,sourcedept3,sourcedept4,sourcedept5,sourcedept6,sourcedept7,sourcedept8,sourcedept9,sourcedept10,sourcedept11
Dim scd1,scd2,scd3,scd4,scd5,scd6,scd7,scd8,scd9,scd10,scd11
Set scd1 = eval(getObjectInfoFromXML("sourcedept1_vat", objectsFile, "Value"))
sourcedept1 =scd1.getROProperty("default value")

Set scd2 = eval(getObjectInfoFromXML("sourcedept2_vat", objectsFile, "Value"))
sourcedept2 =scd2.getROProperty("default value")

Set scd3= eval(getObjectInfoFromXML("sourcedept3_vat", objectsFile, "Value"))
sourcedept3 =scd3.getROProperty("default value")

Set scd4= eval(getObjectInfoFromXML("sourcedept4_vat", objectsFile, "Value"))
sourcedept4 =scd4.getROProperty("default value")

Set scd5= eval(getObjectInfoFromXML("sourcedept5_vat", objectsFile, "Value"))
sourcedept5 =scd5.getROProperty("default value")


Set scd6= eval(getObjectInfoFromXML("sourcedept6_vat", objectsFile, "Value"))
sourcedept6 =scd6.getROProperty("default value")

Set scd7= eval(getObjectInfoFromXML("sourcedept7_vat", objectsFile, "Value"))
sourcedept7 =scd7.getROProperty("default value")

Set scd8= eval(getObjectInfoFromXML("sourcedept8_vat", objectsFile, "Value"))
sourcedept8 =scd8.getROProperty("default value")

Set scd9= eval(getObjectInfoFromXML("sourcedept9_vat", objectsFile, "Value"))
sourcedept9 =scd9.getROProperty("default value")

Set scd10= eval(getObjectInfoFromXML("sourcedept10_vat", objectsFile, "Value"))
sourcedept10 =scd10.getROProperty("default value")

Set scd11= eval(getObjectInfoFromXML("sourcedept11_vat", objectsFile, "Value"))
sourcedept11 =scd11.getROProperty("default value")

Dim taxtargetaut1,taxtargetaut2,taxtargetaut3,taxtargetaut4,taxtargetaut5,taxtargetaut6,taxtargetaut7,taxtargetaut8,taxtargetaut9,taxtargetaut10,taxtargetaut11
Dim tcaa1,tcaa2,tcaa3,tcaa4,tcaa5,tcaa6,tcaa7,tcaa8,tcaa9,tcaa10,tcaa11
Set tcaa1 = eval(getObjectInfoFromXML("taxtargetaut1_vat", objectsFile, "Value"))
taxtargetaut1 =tcaa1.getROProperty("default value")

Set tcaa2 = eval(getObjectInfoFromXML("taxtargetaut2_vat", objectsFile, "Value"))
taxtargetaut2 =tcaa2.getROProperty("default value")

Set tcaa3= eval(getObjectInfoFromXML("taxtargetaut3_vat", objectsFile, "Value"))
taxtargetaut3 =tcaa3.getROProperty("default value")

Set tcaa4= eval(getObjectInfoFromXML("taxtargetaut4_vat", objectsFile, "Value"))
taxtargetaut4 =tcaa4.getROProperty("default value")

Set tcaa5= eval(getObjectInfoFromXML("taxtargetaut6_vat", objectsFile, "Value"))
taxtargetaut5 =tcaa5.getROProperty("default value")


Set tcaa6= eval(getObjectInfoFromXML("taxtargetaut6_vat", objectsFile, "Value"))
taxtargetaut6 =tcaa6.getROProperty("default value")

Set tcaa7= eval(getObjectInfoFromXML("taxtargetaut7_vat", objectsFile, "Value"))
taxtargetaut7 =tcaa7.getROProperty("default value")

Set tcaa8= eval(getObjectInfoFromXML("taxtargetaut8_vat", objectsFile, "Value"))
taxtargetaut8 =tcaa8.getROProperty("default value")

Set tcaa9= eval(getObjectInfoFromXML("taxtargetaut9_vat", objectsFile, "Value"))
taxtargetaut9 =tcaa9.getROProperty("default value")

Set tcaa10= eval(getObjectInfoFromXML("taxtargetaut10_vat", objectsFile, "Value"))
taxtargetaut10 =tcaa10.getROProperty("default value")

Set tcaa11= eval(getObjectInfoFromXML("taxtargetaut11_vat", objectsFile, "Value"))
taxtargetaut11 =tcaa11.getROProperty("default value")

Dim targetacct1,targetacct2,targetacct3,targetacct4,targetacct5,targetacct6,targetacct7,targetacct8,targetacct9,targetacct10,targetacct11
Dim tca1,tca2,tca3,tca4,tca5,tca6,tca7,tca8,tca9,tca10,tca11
Set tca1 = eval(getObjectInfoFromXML("targetacct1_vat", objectsFile, "Value"))
targetacct1 =tca1.getROProperty("default value")

Set tca2 = eval(getObjectInfoFromXML("targetacct2_vat", objectsFile, "Value"))
targetacct2 =tca1.getROProperty("default value")

Set tca3= eval(getObjectInfoFromXML("targetacct3_vat", objectsFile, "Value"))
targetacct3 =tca3.getROProperty("default value")

Set tca4= eval(getObjectInfoFromXML("targetacct4_vat", objectsFile, "Value"))
targetacct4 =tca4.getROProperty("default value")

Set tca5= eval(getObjectInfoFromXML("targetacct5_vat", objectsFile, "Value"))
targetacct5 =tca5.getROProperty("default value")


Set tca6= eval(getObjectInfoFromXML("targetacct6_vat", objectsFile, "Value"))
targetacct6 =tca6.getROProperty("default value")

Set tca7= eval(getObjectInfoFromXML("targetacct7_vat", objectsFile, "Value"))
targetacct7 =tca7.getROProperty("default value")

Set tca8= eval(getObjectInfoFromXML("targetacct8_vat", objectsFile, "Value"))
targetacct8 =tca8.getROProperty("default value")

Set tca9= eval(getObjectInfoFromXML("targetacct9_vat", objectsFile, "Value"))
targetacct9 =tca9.getROProperty("default value")

Set tca10= eval(getObjectInfoFromXML("targetacct10_vat", objectsFile, "Value"))
targetacct10 =tca10.getROProperty("default value")

Set tca11= eval(getObjectInfoFromXML("targetacct11_vat", objectsFile, "Value"))
targetacct11 =tca11.getROProperty("default value")


Dim targetdept1,targetdept2,targetdept3,targetdept4,targetdept5,targetdept6,targetdept7,targetdept8,targetdept9,targetdept10,targetdept11
Dim tcd1,tcd2,tcd3,tcd4,tcd5,tcd6,tcd7,tcd8,tcd9,tcd10,tcd11
Set tcd1 = eval(getObjectInfoFromXML("targetdept1_vat", objectsFile, "Value"))
targetdept1 =tcd1.getROProperty("default value")

Set tcd2 = eval(getObjectInfoFromXML("targetdept2_vat", objectsFile, "Value"))
targetdept2 =tcd2.getROProperty("default value")


Set tcd3= eval(getObjectInfoFromXML("targetdept3_vat", objectsFile, "Value"))
targetdept3 =tcd3.getROProperty("default value")

Set tcd4= eval(getObjectInfoFromXML("targetdept4_vat", objectsFile, "Value"))
targetdept4 =tcd4.getROProperty("default value")

Set tcd5= eval(getObjectInfoFromXML("targetdept5_vat", objectsFile, "Value"))
targetdept5 =tcd5.getROProperty("default value")


Set tcd6= eval(getObjectInfoFromXML("targetdept6_vat", objectsFile, "Value"))
targetdept6 =tcd6.getROProperty("default value")

Set tcd7= eval(getObjectInfoFromXML("targetdept7_vat", objectsFile, "Value"))
targetdept7 =tcd7.getROProperty("default value")

Set tcd8= eval(getObjectInfoFromXML("targetdept8_vat", objectsFile, "Value"))
targetdept8 =tcd8.getROProperty("default value")

Set tcd9= eval(getObjectInfoFromXML("targetdept9_vat", objectsFile, "Value"))
targetdept9 =tcd9.getROProperty("default value")

Set tcd10= eval(getObjectInfoFromXML("targetdept10_vat", objectsFile, "Value"))
targetdept10 =tcd10.getROProperty("default value")

Set tcd11= eval(getObjectInfoFromXML("targetdept11_vat", objectsFile, "Value"))
targetdept11 =tcd11.getROProperty("default value")

'''''''''''''''''''''Validating business unit''''''''''''''''''''''''''''    
        Dim recordCount
        recordCount = vattaxBusiness
        
        If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
    if Trim(recordCount(1)) = Trim(businessunit1) then
            WriteToReport micPass, "Actual Business Unit 1 value "&businessunit1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Business Unit  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(businessunit2) then
            WriteToReport micPass, "Actual Business Unit 2 value "&businessunit2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Business Unit  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 2 Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(businessunit3) then
            WriteToReport micPass, "Actual Business Unit 3 value "&businessunit3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Business Unit  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(businessunit4) then
            WriteToReport micPass, "Actual Business Unit 4 value "&businessunit4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(businessunit5) then
            WriteToReport micPass, "Actual Business Unit 5 value "&businessunit5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(businessunit6) then
            WriteToReport micPass, "Actual Business Unit 6 value "&businessunit6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(businessunit7) then
            WriteToReport micPass, "Actual Business Unit  7 value "&businessunit7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(businessunit8) then
            WriteToReport micPass, "Actual Business Unit  8 value "&businessunit8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(businessunit9) then
            WriteToReport micPass, "Actual Business Unit 9 value "&businessunit9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(businessunit10) then
            WriteToReport micPass, "Actual Business Unit 10 value "&businessunit10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(businessunit11) then
            WriteToReport micPass, "Actual Business Unit 11 value "&businessunit11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Business Unit 1 Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit is not Validated", "Business Unit 1 Value is Validation failed", false
        End If
        
        End If

'''''''''''''''''''''Validating province''''''''''''''''''''''''''''


recordCount = vattaxState
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
        
        
    if Trim(recordCount(1)) = Trim(province1) then
            WriteToReport micPass, "Actual Province  1 value "&province1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Province  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(province2) then
            WriteToReport micPass, "Actual Province 2 value "&province2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Province  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(province3) then
            WriteToReport micPass, "Actual Province 3 value "&province3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(province4) then
            WriteToReport micPass, "Actual Province 4 value "&province4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(province5) then
            WriteToReport micPass, "Actual province 5 value "&province5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province  Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(province6) then
            WriteToReport micPass, "Actual Province 6 value "&province6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "ProvinceValue is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(province7) then
            WriteToReport micPass, "Actual Province 7 value "&province7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(province8) then
            WriteToReport micPass, "Actual Province 8 value "&province8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(province9) then
            WriteToReport micPass, "Actual Province 9 value "&province9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(province10) then
            WriteToReport micPass, "Actual Province 10  value "&province10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Province  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(province11) then
            WriteToReport micPass, "Actual Province 11 value "&province11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Province Value is Validated successfully", false
        Else
            WriteToReport micFail, "Province is not Validated", "Province Value is Validation failed", false
        End If
        
        End If
        
    
'''''''''''''''''''''Validating Source Tax Authority'''''''''''''''''''''''''''


recordCount = vattaxAuth
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
        
        
    if Trim(recordCount(1)) = Trim(sourcetax1) then
            WriteToReport micPass, "Actual Source Tax Authority  1 value "&sourcetax1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Source Tax Authority  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(sourcetax2) then
            WriteToReport micPass, "Actual Source Tax Authority 2 value "&sourcetax2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Source Tax Authority  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(sourcetax3) then
            WriteToReport micPass, "Actual Source Tax Authority 3 value "&sourcetax3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authoritye is not Validated", "Source Tax Authority Value is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(sourcetax4) then
            WriteToReport micPass, "Actual Source Tax Authority 4 value "&sourcetax4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax AuthorityValue is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(sourcetax5) then
            WriteToReport micPass, "Actual Source Tax Authority 5 value "&sourcetax5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority  Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(sourcetax6) then
            WriteToReport micPass, "Actual Source Tax Authority 6 value "&sourcetax6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax AuthorityValue is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(sourcetax7) then
            WriteToReport micPass, "Actual Source Tax Authority 7 value "&sourcetax7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(sourcetax8) then
            WriteToReport micPass, "Actual Source Tax Authority 8 value "&sourcetax8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(sourcetax9) then
            WriteToReport micPass, "Actual Source Tax Authority 9 value "&sourcetax9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(sourcetax10) then
            WriteToReport micPass, "Actual Source Tax Authority 10 value "&sourcetax10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Source Tax Authority  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(sourcetax11) then
            WriteToReport micPass, "Actual Source Tax Authority 11 value "&sourcetax11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Source Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Tax Authority is not Validated", "Source Tax Authority Value is Validation failed", false
        End If
        
        End If
    
'''''''''''''''''''''Validating Source Account'''''''''''''''''''''''''''


recordCount = vattaxAcctFrom
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
        
        
    if Trim(recordCount(1)) = Trim(sourceacct1) then
            WriteToReport micPass, "Actual Source Account  1 value "&sourceacct1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Source Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source TAccount Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(sourceacct2) then
            WriteToReport micPass, "Actual Source Account 2 value "&sourceacct2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Source Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(sourceacct3) then
            WriteToReport micPass, "Actual Source Account 3 value "&sourceacct3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Source Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account  is not Validated", "Source Account  is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(sourceacct4) then
            WriteToReport micPass, "Actual Source Account 4 value "&sourceacct4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Source Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(sourceacct5) then
            WriteToReport micPass, "Actual Source Account 5 value "&sourceacct5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Source Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account  Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(sourceacct6) then
            WriteToReport micPass, "Actual Source Account 6 value "&sourceacct6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Source Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(sourceacct7) then
            WriteToReport micPass, "Actual Source Account 7 value "&sourceacct7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Source Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(sourceacct8) then
            WriteToReport micPass, "Actual Source Account 8 value "&sourceacct8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Source Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(sourceacct9) then
            WriteToReport micPass, "Actual Source Account 9 value "&sourceacct9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Source Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(sourceacct10) then
            WriteToReport micPass, "Actual Source Account 10 value "&sourceacct10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Source Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(sourceacct11) then
            WriteToReport micPass, "Actual Source  Account 11 value "&sourceacct11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Source Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Account is not Validated", "Source Account Value is Validation failed", false
        End If
        
        End If
        
            
'''''''''''''''''''''Validating Source Department'''''''''''''''''''''''''''


recordCount = vattaxDeptFrom
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
        
        
    if Trim(recordCount(1)) = Trim(sourcedept1) then
            WriteToReport micPass, "Actual Source Department  1 value "&sourcedept1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Source Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(sourcedept2) then
            WriteToReport micPass, "Actual Source Department 2 value "&sourcedept2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Source Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(sourcedept3) then
            WriteToReport micPass, "Actual Source Department 3 value "&sourcedept3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Source Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department  is not Validated", "Source Department  is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(sourcedept4) then
            WriteToReport micPass, "Actual Source Department 4 value "&sourcedept4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Source Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(sourcedept5) then
            WriteToReport micPass, "Actual Source Department 5 value "&sourcedept5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Source Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department  Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(sourcedept6) then
            WriteToReport micPass, "Actual Source Department 6 value "&sourcedept6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Source Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(sourcedept7) then
            WriteToReport micPass, "Actual Source Department 7 value "&sourcedept7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Source Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(sourcedept8) then
            WriteToReport micPass, "Actual Source Department 8 value "&sourcedept8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Source Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(sourcedept9) then
            WriteToReport micPass, "Actual Source Department 9 value "&sourcedept9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Source Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(sourcedept10) then
            WriteToReport micPass, "Actual Source Department 10 value "&sourcedept10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Source Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(sourcedept11) then
            WriteToReport micPass, "Actual Source  Department 11 value "&sourcedept11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Source Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Source Department is not Validated", "Source Department Value is Validation failed", false
        End If
        
        End If
    
        
'''''''''''''''''''''Validating Target Tax Authority'''''''''''''''''''''''''''


recordCount = vattaxTargetauth
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
        
    if Trim(recordCount(1)) = Trim(taxtargetaut1) then
            WriteToReport micPass, "Actual Target Tax Authority  1 value "&taxtargetaut1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Target Tax Authority  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(taxtargetaut2) then
            WriteToReport micPass, "Actual Target Tax Authority 2 value "&taxtargetaut2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Target Tax Authority  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(taxtargetaut3) then
            WriteToReport micPass, "Actual Target Tax Authority 3 value "&taxtargetaut3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Target Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target is not Validated", "Target Value is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(taxtargetaut4) then
            WriteToReport micPass, "Actual Target Tax Authority 4 value "&taxtargetaut4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Target Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax AuthorityValue is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(taxtargetaut5) then
            WriteToReport micPass, "Actual Target Tax Authority 5 value "&taxtargetaut5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Target Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority  Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(taxtargetaut6) then
            WriteToReport micPass, "Actual Target Tax Authority 6 value "&taxtargetaut6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Target Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax AuthorityValue is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(taxtargetaut7) then
            WriteToReport micPass, "Actual Target Tax Authority 7 value "&taxtargetaut7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Target Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(taxtargetaut8) then
            WriteToReport micPass, "Actual Target Tax Authority 8 value "&taxtargetaut8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Target Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(taxtargetaut9) then
            WriteToReport micPass, "Actual Target Tax Authority 9 value "&taxtargetaut9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Target Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(taxtargetaut10) then
            WriteToReport micPass, "Actual Target Tax Authority 10 value "&taxtargetaut10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Target Tax Authority  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(taxtargetaut11) then
            WriteToReport micPass, "Actual Target Tax Authority 11 value "&taxtargetaut11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Target Tax Authority Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Tax Authority is not Validated", "Target Tax Authority Value is Validation failed", false
        End If
        
        End If    
        
            
'''''''''''''''''''''Validating Source Account'''''''''''''''''''''''''''


recordCount = vattaxAcctTO
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
        
        
    if Trim(recordCount(1)) = Trim(targetacct1) then
            WriteToReport micPass, "Actual Target Account  1 value "&targetacct1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Target Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target TAccount Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(targetacct2) then
            WriteToReport micPass, "Actual Target Account 2 value "&targetacct2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Target Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(targetacct3) then
            WriteToReport micPass, "Actual Target Account 3 value "&targetacct3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Target Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account  is not Validated", "Target Account  is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(targetacct4) then
            WriteToReport micPass, "Actual Target Account 4 value "&targetacct4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Target Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(targetacct5) then
            WriteToReport micPass, "Actual Target Account 5 value "&targetacct5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Target Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account  Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(targetacct6) then
            WriteToReport micPass, "Actual Target Account 6 value "&targetacct6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Target Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(targetacct7) then
            WriteToReport micPass, "Actual Target Account 7 value "&targetacct7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Target Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(targetacct8) then
            WriteToReport micPass, "Actual Target Account 8 value "&targetacct8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Target Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(targetacct9) then
            WriteToReport micPass, "Actual Target Account 9 value "&targetacct9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Target Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(targetacct10) then
            WriteToReport micPass, "Actual Target Account 10 value "&targetacct10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Target Account  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(targetacct11) then
            WriteToReport micPass, "Actual Target  Account 11 value "&targetacct11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Target Account Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Account is not Validated", "Target Account Value is Validation failed", false
        End If
        
        End If
        
            
'''''''''''''''''''''Validating Target Department'''''''''''''''''''''''''''


recordCount = vattaxDeptTO
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        
        
        
    if Trim(recordCount(1)) = Trim(targetdept1) then
            WriteToReport micPass, "Actual Target Department  1 value "&targetdept1&" matches value from Sql Query "&Trim(recordCount(1))&" ", "Target Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
    
    if Trim(recordCount(2)) = Trim(targetdept2) then
            WriteToReport micPass, "Actual Target Department 2 value "&targetdept2&" matches value from Sql Query "&Trim(recordCount(2))&" ", "Target Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If


    if Trim(recordCount(3)) = Trim(targetdept3) then
            WriteToReport micPass, "Actual Target Department 3 value "&targetdept3&" matches value from Sql Query "&Trim(recordCount(3))&" ", "Target Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department  is not Validated", "Target Department  is Validation failed", false
        End If
    
    if Trim(recordCount(4)) = Trim(targetdept4) then
            WriteToReport micPass, "Actual Target Department 4 value "&targetdept4&" matches value from Sql Query "&Trim(recordCount(4))&" ", "Target Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
    if Trim(recordCount(5)) = Trim(targetdept5) then
            WriteToReport micPass, "Actual Target Department 5 value "&targetdept5&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Target Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department  Value is Validation failed", false
        End If
        
        if Trim(recordCount(6)) = Trim(targetdept6) then
            WriteToReport micPass, "Actual Target Department 6 value "&targetdept6&" matches value from Sql Query "&Trim(recordCount(6))&" ", "Target Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
        
        if Trim(recordCount(7)) = Trim(targetdept7) then
            WriteToReport micPass, "Actual Target Department 7 value "&targetdept7&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Target Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
        
        if Trim(recordCount(8)) = Trim(targetdept8) then
            WriteToReport micPass, "Actual Target Department 8 value "&targetdept8&" matches value from Sql Query "&Trim(recordCount(8))&" ", "Target Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
        
        if Trim(recordCount(9)) = Trim(targetdept9) then
            WriteToReport micPass, "Actual Target Department 9 value "&targetdept9&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Target Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(10)) = Trim(targetdept10) then
            WriteToReport micPass, "Actual Target Department 10 value "&targetdept10&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Target Department  Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
        
        
        if Trim(recordCount(11)) = Trim(targetdept11) then
            WriteToReport micPass, "Actual Target  Department 11 value "&targetdept11&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Target Department Value is Validated successfully", false
        Else
            WriteToReport micFail, "Target Department is not Validated", "Target Department Value is Validation failed", false
        End If
  End If
    
        ''''''''''''''''''''''''''''''Page Update Invoice Flag/PO ref''''''''''''''''''''''''
        
        GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CDWBillingUpdateInvFlag") 

    SelectMainMenu1(GlobalDictionary("MainMenuSelection")) 
        if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Find an Existing Value").Exist Then
            WriteToReport micPass, "Find an Existing Value Under Update Invoice Flag/PO Ref  page loaded successfully", "Update Invoice Flag/PO Ref Page loaded successfully", false
        Else
            WriteToReport micFail, "Find an Existing Value Under Update Invoice Flag/PO Ref Page not loaded", "Update Invoice Flag/PO Ref Page loading failed, so failing the test case", true
            Exit Function
        End If
End If
        setValue_WebEdit getObjectInfoFromXML("buin_vat", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buin_vat", objectsFile, "Description")
        
    Dim invoiceid
    recordCount = vatinvoiceid((GlobalDictionary("buinvat")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True


        invoiceid=recordCount(1)
        
        setValue_WebEdit getObjectInfoFromXML("invoice_vat", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invoice_vat", objectsFile, "Description")
        
        btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*****************************'''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*****************************'''''''''''''''''''''''''''''''''''''''''''''''''''
 if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Update Invoice Flag/PO Ref</span>").Exist Then
            WriteToReport micPass, "Update Invoice Flag/PO Ref  page loaded successfully", "Update Invoice Flag/PO Ref Page loaded successfully", false
        Else
            WriteToReport micFail, "Update Invoice Flag/PO Ref Page not loaded", "Update Invoice Flag/PO Ref Page loading failed, so failing the test case", true
            Exit Function
        End If


        setValue_WebEdit getObjectInfoFromXML("purchase_order_vat", objectsFile, "Value"),GlobalDictionary("prchaseord"),false,("Purchase Order Field is editable and Value")
         
 End If
'btn_click  getObjectInfoFromXML("save_cccc", objectsFile, "Value"),("Save Button Clicked")
Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Click
Dim objCreditInvDate,credit_InvoiceDate

credit_InvoiceDate =Browser("creationtime:=0").Page("index:=1").WebCheckBox("class:=PSCHECKBOX","html id:=BI_HDR_IVC_PRINTED_FLG").getROProperty("checked")

If credit_InvoiceDate=1 Then
    uncheck_CheckBox getObjectInfoFromXML("invoice_printed_checked", objectsFile, "Value"),("Invoice Printed Check Box was checked and is Unchecked now")
    Else
    check_CheckBox getObjectInfoFromXML("invoice_printed_unchecked", objectsFile, "Value"),("Invoice Printed Check Box was Unchecked and is Checked now")
End If

'btn_click  getObjectInfoFromXML("save_cccc", objectsFile, "Value"),("Save Button Clicked")
Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Click

'################################################################### Validating values after save buttion is clicked

  GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CDWBillingUpdateInvFlag")

    SelectMainMenu1(GlobalDictionary("MainMenuSelection")) 
        if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Find an Existing Value").Exist Then
            WriteToReport micPass, "Update Invoice Flag/PO Ref  page loaded successfully", "Update Invoice Flag/PO Ref Page loaded successfully", false
        Else
            WriteToReport micFail, "Update Invoice Flag/PO Ref Page not loaded", "Update Invoice Flag/PO Ref Page loading failed, so failing the test case", true
            Exit Function
        End If

        setValue_WebEdit getObjectInfoFromXML("buin_vat", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buin_vat", objectsFile, "Description")

        setValue_WebEdit getObjectInfoFromXML("invoice_vat", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invoice_vat", objectsFile, "Description")
        
        btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
 '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*****************************'''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*****************************'''''''''''''''''''''''''''''''''''''''''''''''''''
 
 if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Update Invoice Flag/PO Ref</span>").Exist Then
            WriteToReport micPass, "Update Invoice Flag/PO Ref  page loaded successfully", "Update Invoice Flag/PO Ref Page loaded successfully", false
        Else
            WriteToReport micFail, "Update Invoice Flag/PO Ref Page not loaded", "Update Invoice Flag/PO Ref Page loading failed, so failing the test case", true
            Exit Function
        End If
Dim purchord2,purchord1
Set purchord2 = eval(getObjectInfoFromXML("purchase_order_vat", objectsFile, "Value"))
purchord1 =purchord2.getROProperty("default value")

WriteToReport micDone,"Purchase order field Value after Save button was clicked is "&purchord1&" ","Purchase order field Value after Save button was clicked is "&purchord1&" ",false

if credit_InvoiceDate=1 then
            WriteToReport micPass, "Invoice Printed Check Box is UnChecked after Save button was clicked", "Invoice Printed Check Box is unchecked ", false
        Else
            WriteToReport micPass, "Invoice Printed Check Box is Checked after Save button was clicked", "Invoice Printed Check Box is checked", false
        End If
    
End Function
'**************************************************************************************************************
''' <summary> 
''' Test Custom Invoice e-mail functionality
''' </summary>
''' <author>SWETHA RAVOORI</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'5/30/2018			Eric Trout	 Added Find due to so many invoices
'**************************************************************************************************************
Public Function TestInvoiceemail()
    
Dim tcObjective,recordCount
tcObjective="Test Custom Invoice e-mail functionality"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then


if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Find an Existing Value").Exist(30) Then
            WriteToReport micPass, "Find an Existing Value Page loaded successfully", "Find an Existing Value Page loaded successfully", false
        Else
            WriteToReport micFail, "Find an Existing Value Page not loaded", "Find an Existing Value Page loading failed, so failing the test case", true
            Exit Function
        End If


        setValue_WebEdit getObjectInfoFromXML("buin_vat", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buin_vat", objectsFile, "Description")
        
    Dim invoiceid
    recordCount = emailinvoiceid((GlobalDictionary("buinvat")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True


invoiceid=recordCount(4)
        
        setValue_WebEdit getObjectInfoFromXML("invoice_vat", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invoice_vat", objectsFile, "Description")
        
        btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")

if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","innerhtml:=Edit EmailID for Courtesy Copy").Exist(30) Then
            WriteToReport micPass, "Edit EmailID for Courtesy Copy Page loaded successfully", "Edit EmailID for Courtesy Copy Page loaded successfully", false
        Else
            WriteToReport micFail, "Edit EmailID for Courtesy Copy Page not loaded", "Edit EmailID for Courtesy Copy Page loading failed, so failing the test case", true
            Exit Function
        End If

WebList_select getObjectInfoFromXML("invoicemedia_email", objectsFile, "Value"),"Internal Routing",("Internal Routing is selected from Invoice Media weblist")
setValue_WebEdit getObjectInfoFromXML("email_email", objectsFile, "Value"),GlobalDictionary("email"),false, getObjectInfoFromXML("email_email", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Save_Button", objectsFile, "Value"),("Save Button Clicked")
End If

 Wait 8
    
        ''''''''''''''''''''''''''''''Process Customer Invoice Page'''''''''''''''''''''''
        
        GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CDWBillingProcessCustInv") 

    SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
   wait 10   
        if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=<abbr class=""PTUNDERLINE"">A</abbr>dd a New Value").Exist(30) Then
            WriteToReport micPass, "Process Customer Invoice page loaded successfully", "Process Customer Invoice Page loaded successfully", false
        Else
            WriteToReport micFail, "Process Customer Invoice Page not loaded", "Process Customer Invoice Page loading failed, so failing the test case", true
            Exit Function
        End If
btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"),("Run Control ID selected from Seacrch Result")
wait 5
        if  Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Process Customer Invoices</span>").Exist(30) Then
            WriteToReport micPass, "Process Customer Invoice page loaded successfully", "Process Customer Invoice Page loaded successfully", false
        Else
            WriteToReport micFail, "Process Customer Invoice Page not loaded", "Process Customer Invoice Page loading failed, so failing the test case", true
            
        End If

WebList_select getObjectInfoFromXML("Invoiceaction_email", objectsFile, "Value"),"Reprnt",("Reprnt is selected from Invoice Action weblist")
setValue_WebEdit getObjectInfoFromXML("Frombuin_email", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("Frombuin_email", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Tobuin_email", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("Tobuin_email", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("FromInvoice_email", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("FromInvoice_email", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("ToInvoice_email", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("ToInvoice_email", objectsFile, "Description")
Verify_ClickRadioBtn getObjectInfoFromXML("InvoiceIDradiobtn_email", objectsFile, "Value"),("Invoice ID Radio Button is checked from Range Selection"),"INV"
btn_click  getObjectInfoFromXML("Save_Button", objectsFile, "Value"),("Save Button Clicked")
Wait 5
    btn_click  getObjectInfoFromXML("Run_Button", objectsFile, "Value"),("Run Button Clicked")
    wait 5
    if Browser("creationtime:=0").Page("index:=1").WebElement("class:=PTPOPUP_TITLE","innerhtml:=Process Scheduler Request").Exist(30) Then
            WriteToReport micPass, "Process Scheduler Request Page loaded successfully", "Process Scheduler Request Page loaded successfully", false
        Else
            WriteToReport micFail, "Process Scheduler Request Page not loaded", "Process Scheduler Request Page loading failed, so failing the test case", true
            
        End If
    wait 5
    check_CheckBox getObjectInfoFromXML("cdw_bi_checkbox", objectsFile, "Value"),("CDW BI Invoices Creation Job check box is Checked")
    btn_click  getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
Dim processsInstance
wait 5
processsInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=0").GetROProperty("innertext")

click_Link getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"),("Process Monitor Link is Clicked")   
 wait 5
 if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","innerhtml:=Process List").Exist(30) Then
            WriteToReport micPass, "Process Monitor Page loaded successfully", "Process Monitor Page loaded successfully", false
        Else
            WriteToReport micFail, "Process Monitor Page not loaded", "Process Monitor Page loading failed, so failing the test case", true
            
        End If
wait 5

Dim runStatus
   runStatus = getStatus(split(Split(processsInstance,":")(1)," ")(0),GlobalDictionary("SignInUser"))


        ''''''''''''''''''''''''''''''Process Customer Invoice Page'''''''''''''''''''''''
        
        GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CDWBillingReviewCustInv") 

    SelectMainMenu1(GlobalDictionary("MainMenuSelection")) 
    if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","innerhtml:=Review Customer Invoices").Exist(30) Then
            WriteToReport micPass, "Review Customer Invoices page loaded successfully", "Review Customer Invoices Page loaded successfully", false
     Else
            WriteToReport micFail, "Review Customer Invoices Page not loaded", "Review Customer Invoices Page loading failed, so failing the test case", true
            Exit Function
     End If
	
	'Add Click Find
	invoiceprocess=Browser("creationtime:=0").Page("index:=1").Link("name:=Find","index:=0").Click
	
	'Enter Invoice
	Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinEdit("regexpwndclass:=Edit").Set Trim(invoiceid)
	
	'Click OK
	Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinButton("regexpwndtitle:=OK").Click
	
	Dim invoiceprocess
	Set invoiceprocess=Browser("creationtime:=0").Page("index:=1").Link("name:="&TRIM(invoiceid),"index:=0")
	
	If invoiceprocess.exist(30) Then
	    WriteToReport micPass, "Invoice ID "&invoiceid&" is available in Review Customer Invoices Page ", "Invoice ID "&invoiceid&" is available in Review Customer Invoices Pagesuccessfully", false
	Else
	    WriteToReport micFail, "Invoice ID "&invoiceid&" is not available in Review Customer Invoices Page", "Invoice ID "&invoiceid&" is Not available in Review Customer Invoices Page", true
	End If
	
	btn_click  getObjectInfoFromXML("Refresh_snghk", objectsFile, "Value"),("Refresh Button Clicked")
	Wait 2
	click_Link getObjectInfoFromXML("selectall_email", objectsFile, "Value"),("Select All Button Clicked")
	Wait 2
	    btn_click  getObjectInfoFromXML("sendinvoice_email", objectsFile, "Value"),("Send Invoice Button Clicked")
	    Wait 2
	btn_click  getObjectInfoFromXML("ok_worksheet_bnt_ccc", objectsFile, "Value"),("Ok Button Clicked")
	
	'wait 30
	'btn_click  getObjectInfoFromXML("Refresh_snghk", objectsFile, "Value"),("Refresh Button Clicked")
	Wait 10
	
	Dim invoiceprocessobj
	Set invoiceprocessobj=Browser("creationtime:=0").Page("index:=1").Link("name:="&TRIM(invoiceid))
	
	Dim iCountloop
	iCountloop = 0 
	While invoiceprocessobj.exist(5) and iCountloop < 10
		'add condition refresh and recheck
		btn_click  getObjectInfoFromXML("Refresh_snghk", objectsFile, "Value"),("Refresh Button Clicked")
	    Wait 10
	    iCountloop =  iCountloop + 1
	Wend
	
	If NOT invoiceprocessobj.exist(2) Then
	   WriteToReport micPass, "Invoice ID "&invoiceid&" is no longer available in Review Customer Invoices Page after hitting Refresh ", "Invoice ID "&invoiceid&"  in Review Customer Invoices Page successfully", false
	 Else
	   WriteToReport micFail, "Invoice ID "&invoiceid&" is available in Review Customer Invoices Page ", "Invoice ID "&invoiceid&" IS STILL available in Review Customer Invoices Page", true
	End If
	
		
	End If

Set invoiceprocess = nothing
Set invoiceprocessobj = nothing
End Function



'**************************************************************************************************************
''' <summary> 
''' Validate a single line invoice with a debit balance
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function SinglelineInvoicewithDebitCard()
    
        
Dim tcObjective,recordCount
tcObjective="Validate a single line invoice with a debit balance"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Validate Find an Existing Value Page'''''''''''''''''''''''
       if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Find an Existing Value").Exist(30) Then
            WriteToReport micPass, "Details Page loaded successfully", "Details Page loaded successfully", false
         Else
            WriteToReport micFail, "Details Page not loaded", "Details Page loading failed, so failing the test case", true
            Exit Function
        End If
        
    '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("buin_sigln", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buin_sigln", objectsFile, "Description")
   
    Dim invoiceid
    recordCount = invicesingline((GlobalDictionary("buinvat")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        invoiceid=recordCount(1)
        '''''''''''''setting invoice,bill status,search''''''
        setValue_WebEdit getObjectInfoFromXML("invoice_sigln", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invoice_vat", objectsFile, "Description")
        WebList_select getObjectInfoFromXML("Bill_status_sigln", objectsFile, "Value"),"Invoiced Bill",("Invoiced Bill is selected from Bill Status weblist")
        btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
        
        End If
''''''''''''''''''''Validate Header - Info 1 Page'''''''''''''''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","html tag:=SPAN","innerhtml:=Header -  Info 1").Exist(30) Then
            WriteToReport micPass, "Header - Info 1 Page loaded successfully", "Header - Info 1 Page loaded successfully", false
        Else
            WriteToReport micFail, "Header - Info 1 Page not loaded", "Header - Info 1 Page loading failed, so failing the test case", true
            Exit Function
        End If

''''''''''''''''''''Validate Line - Info 1 Page'''''''''''''''''''''''
WebList_select getObjectInfoFromXML("lineinfo1_sigln", objectsFile, "Value"),"Line - Info 1",("Line - Info 1 is selected from the weblist")
if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Header -  Info 1").Exist(30) Then
            WriteToReport micPass, "Line - Info 1 Page loaded successfully", "Line - Info 1 Page loaded successfully", false
        Else
            WriteToReport micFail, "Line - Info 1 Page not loaded", "Line - Info 1 Page loading failed, so failing the test case", true
            Exit Function
        End If

''''''''''''Using query to validate values on line info 1 page-------------
Dim buninsql,invc,billtocustid,billtocustname,descr,seq1,line,identf,quat,unittomes,unitprice,grossext,netext,taxamt
Dim bnvms11,bnvms12,bnvms13,bnvms14,bnvms15,bnvms16,bnvms17,bnvms18,bnvms19,bnvms20,bnvms21,bnvms22,bnvms23,bnvms24
Set bnvms11 = eval(getObjectInfoFromXML("buninsql_vat", objectsFile, "Value"))
buninsql =bnvms11.getROProperty("innerhtml")

Set bnvms12 = eval(getObjectInfoFromXML("invc_vat", objectsFile, "Value"))
invc =bnvms12.getROProperty("innerhtml")

Set bnvms13 = eval(getObjectInfoFromXML("billtocustid_vat", objectsFile, "Value"))
billtocustid =bnvms13.getROProperty("innerhtml")

Set bnvms14 = eval(getObjectInfoFromXML("billtocustname_vat", objectsFile, "Value"))
billtocustname =bnvms14.getROProperty("innertext")


Set bnvms15 = eval(getObjectInfoFromXML("descr_vat", objectsFile, "Value"))
descr =bnvms15.getROProperty("innerhtml")

Set bnvms16 = eval(getObjectInfoFromXML("seq1_vat", objectsFile, "Value"))
seq1 =bnvms16.getROProperty("innerhtml")

Set bnvms17 = eval(getObjectInfoFromXML("line_vat", objectsFile, "Value"))
line =bnvms17.getROProperty("innerhtml")

Set bnvms18 = eval(getObjectInfoFromXML("identf_vat", objectsFile, "Value"))
identf =bnvms18.getROProperty("innerhtml")

Set bnvms19 = eval(getObjectInfoFromXML("quat_vat", objectsFile, "Value"))
quat =bnvms19.getROProperty("innerhtml")

Set bnvms20 = eval(getObjectInfoFromXML("unittomes_vat", objectsFile, "Value"))
unittomes =bnvms20.getROProperty("innerhtml")


Set bnvms21 = eval(getObjectInfoFromXML("unitprice_vat", objectsFile, "Value"))
unitprice =bnvms21.getROProperty("innerhtml")

Set bnvms22 = eval(getObjectInfoFromXML("grossext_vat", objectsFile, "Value"))
grossext =bnvms22.getROProperty("innerhtml")

Set bnvms23 = eval(getObjectInfoFromXML("netext_vat", objectsFile, "Value"))
netext =bnvms23.getROProperty("innerhtml")

Set bnvms24 = eval(getObjectInfoFromXML("taxamt_vat", objectsFile, "Value"))
taxamt =bnvms24.getROProperty("innerhtml")

'''''query''''
recordCount = lineinfovalidate(invoiceid)

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

        if Trim(recordCount(0)) = Trim(buninsql) then
            WriteToReport micPass, "Actual Business Unit Value "&buninsql&" matches value from Sql Query "&Trim(recordCount(0))&"", "Business Unit Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit Value is not Validated", "Business Unit Value is Validation failed", false
        End If
        if Trim(recordCount(1)) = Trim(invc) then
            WriteToReport micPass, "Actual Invoice Value "&invc&" matches value from Sql Query "&Trim(recordCount(1))&"", "Invoice Value is Validated successfully", false
        Else
            WriteToReport micFail, "Invoice Value is not Validated", "Invoice Value is Validation failed", false
        End If
        if Trim(recordCount(2)) = Trim(billtocustid) then
            WriteToReport micPass, "Actual Bill To Customer ID Value "&billtocustid&" matches value from Sql Query "&Trim(recordCount(2))&"", "Bill To Customer ID Value is Validated successfully", false
        Else
            WriteToReport micFail, "Bill To Customer ID Value is not Validated", "Bill To Customer ID Value is Validation failed", false
        End If    
            
        if Trim(recordCount(4)) = Trim(billtocustname) then
            WriteToReport micPass, "Actual Bill To Customer Name Value "&billtocustname&" matches value from Sql Query "&Trim(recordCount(4))&"", "Bill To Customer Name Value is Validated successfully", false
        Else
            WriteToReport micFail, "Bill To Customer Name Value is not Validated", "Bill To Customer Name Value is Validation failed", false
        End If    

            if Browser("creationtime:=0").page("index:=1").WebElement("innertext:="&Trim(recordCount(5)),"index:=0").exist then
            WriteToReport micPass, "Actual Description Value matches value from Sql Query "&Trim(recordCount(5))&"", "Description Value is Validated successfully", false
        Else
            WriteToReport micFail, "Description Value is not Validated", "Description Value is Validation failed", false
        End If
            if Trim(recordCount(6)) = Trim(seq1) then
            WriteToReport micPass, "Actual Seq Number Value "&seq1&" matches value from Sql Query "&Trim(recordCount(6))&"", "Seq Number Value is Validated successfully", false
        Else
            WriteToReport micFail, "Seq Number Value is not Validated", "Seq Number Value is Validation failed", false
        End If
             if Trim(recordCount(7)) = Trim(identf) then
            WriteToReport micPass, "Actual Identifier Value  is "&Trim(identf)&" matches value from Sql Query "&Trim(recordCount(7))&"", "Identifier Value is Validated successfully", false
        Else
            WriteToReport micFail, "Identifier Value is not Validated", "Identifier Value is Validation failed", false
        End If
                 if Trim(recordCount(8)) = Trim(line) then
            WriteToReport micPass, "Actual Line Number Value "&Trim(line)&" matches value from Sql Query "&Trim(recordCount(10))&"", "Line Number Value is Validated successfully", false
        Else
            WriteToReport micFail, "Line Number Value is not Validated", "Line Number Value is Validation failed", false
        End If            
                        
            if cdbl(recordCount(9)) = cdbl(quat) then
            WriteToReport micPass, "Actual Quantity Value "&cdbl(quat)&" matches value from Sql Query "&cdbl(recordCount(9))&"", "Quantity Value is Validated successfully", false
        Else
            WriteToReport micFail, "Quantity Value is not Validated", "Quantity Value is Validation failed", false
        End If            
            
            
        
        if cdbl(Trim(recordCount(11))) = cdbl(Trim(unitprice)) then
            WriteToReport micPass, "Actual Unit Price Value "&unitprice&" matches value from Sql Query "&recordCount(11)&"", "Unit Price Value is Validated successfully", false
        Else
            WriteToReport micFail, "Unit Price Value is not Validated", "Unit Price Value is Validation failed", false
        End If
        
            if cint(recordCount(12)) = cint(grossext) then
            WriteToReport micPass, "Actual Gross Extended Value "&cint(grossext)&" matches value from Sql Query "&cint(recordCount(12))&"", "Gross Extended Value is Validated successfully", false
        Else
            WriteToReport micFail, "Gross Extended Value is not Validated", "Gross Extended Value is Validation failed", false
        End If 
            if cint(recordCount(13)) = cint(netext) then
            WriteToReport micPass, "Actual Net Extended Value "&cint(netext)&" matches value from Sql Query "&cint(recordCount(13))&"", "Net Extended Value is Validated successfully", false
        Else
            WriteToReport micFail, "Net Extended Value is not Validated", "Net Extended Value is Validation failed", false
        End If 
        if cdbl(Trim(recordCount(14))) = cdbl(Trim(taxamt)) then
            WriteToReport micPass, "Actual Tax Amount Value "&taxamt&" matches value from Sql Query "&Trim(recordCount(10))&"", "Tax Amount Value is Validated successfully", false
        Else
            WriteToReport micFail, "Tax Amount Value is not Validated", "Tax Amount Value is Validation failed", false
        End If      
     
            End If
        
        
End If
        
End Function

'**************************************************************************************************************
''' <summary> 
''' Validate a single line invoice with a CREDIT balance
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function SinglelineInvoicewithcreditbal()
    
        
Dim tcObjective,recordCount
tcObjective="Validate a single line invoice with a CREDIT balance"

WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Validate Find an Existing Value Page'''''''''''''''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Find an Existing Value").Exist(30) Then
            WriteToReport micPass, "Details Page loaded successfully", "Details Page loaded successfully", false
        Else
            WriteToReport micFail, "Details Page not loaded", "Details Page loading failed, so failing the test case", true
            Exit Function
        End If
        
    '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("buin_sigln", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buin_sigln", objectsFile, "Description")

    Dim invoiceid
    recordCount = invicesinglinegreater((GlobalDictionary("buinvat")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
invoiceid=recordCount(1)
        '''''''''''''setting invoice,bill status,search''''''
        setValue_WebEdit getObjectInfoFromXML("invoice_sigln", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invoice_vat", objectsFile, "Description")
        WebList_select getObjectInfoFromXML("Bill_status_sigln", objectsFile, "Value"),"Invoiced Bill",("Invoiced Bill is selected from Bill Status weblist")
        btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
        
        End If
''''''''''''''''''''Validate Header - Info 1 Page'''''''''''''''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","html tag:=SPAN","innerhtml:=Header -  Info 1").Exist(30) Then
            WriteToReport micPass, "Header - Info 1 Page loaded successfully", "Header - Info 1 Page loaded successfully", false
        Else
            WriteToReport micFail, "Header - Info 1 Page not loaded", "Header - Info 1 Page loading failed, so failing the test case", true
            Exit Function
        End If

''''''''''''''''''''Validate Line - Info 1 Page'''''''''''''''''''''''
WebList_select getObjectInfoFromXML("lineinfo1_sigln", objectsFile, "Value"),"Line - Info 1",("Line - Info 1 is selected from the weblist")
if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Header -  Info 1").Exist(20) Then
            WriteToReport micPass, "Line - Info 1 Page loaded successfully", "Line - Info 1 Page loaded successfully", false
        Else
            WriteToReport micFail, "Line - Info 1 Page not loaded", "Line - Info 1 Page loading failed, so failing the test case", true
            Exit Function
        End If

''''''''''''Using query to validate values on line info 1 page-------------
Dim buninsql,invc,billtocustid,billtocustname,descr,seq1,line,identf,quat,unittomes,unitprice,grossext,netext,taxamt
Dim bnvms11,bnvms12,bnvms13,bnvms14,bnvms15,bnvms16,bnvms17,bnvms18,bnvms19,bnvms20,bnvms21,bnvms22,bnvms23,bnvms24

Set bnvms11 = eval(getObjectInfoFromXML("buninsql_vat", objectsFile, "Value"))
buninsql =bnvms11.getROProperty("innerhtml")

Set bnvms12 = eval(getObjectInfoFromXML("invc_vat", objectsFile, "Value"))
invc =bnvms12.getROProperty("innerhtml")

Set bnvms13 = eval(getObjectInfoFromXML("billtocustid_vat", objectsFile, "Value"))
billtocustid =bnvms13.getROProperty("innerhtml")

Set bnvms14 = eval(getObjectInfoFromXML("billtocustname_vat", objectsFile, "Value"))
billtocustname =bnvms14.getROProperty("innerhtml")


Set bnvms15 = eval(getObjectInfoFromXML("descr_vat", objectsFile, "Value"))
descr =bnvms15.getROProperty("innerhtml")

Set bnvms16 = eval(getObjectInfoFromXML("seq1_vat", objectsFile, "Value"))
seq1 =bnvms16.getROProperty("innerhtml")

Set bnvms17 = eval(getObjectInfoFromXML("line_vat", objectsFile, "Value"))
line =bnvms17.getROProperty("innerhtml")

Set bnvms18 = eval(getObjectInfoFromXML("identf_vat", objectsFile, "Value"))
identf =bnvms18.getROProperty("innerhtml")

Set bnvms19 = eval(getObjectInfoFromXML("quat_vat", objectsFile, "Value"))
quat =bnvms19.getROProperty("innerhtml")

Set bnvms20 = eval(getObjectInfoFromXML("unittomes_vat", objectsFile, "Value"))
unittomes =bnvms20.getROProperty("innerhtml")


Set bnvms21 = eval(getObjectInfoFromXML("unitprice_vat", objectsFile, "Value"))
unitprice =bnvms21.getROProperty("innerhtml")

Set bnvms22 = eval(getObjectInfoFromXML("grossext_vat", objectsFile, "Value"))
grossext =bnvms22.getROProperty("innerhtml")

Set bnvms23 = eval(getObjectInfoFromXML("netext_vat", objectsFile, "Value"))
netext =bnvms23.getROProperty("innerhtml")

Set bnvms24 = eval(getObjectInfoFromXML("taxamt_vat", objectsFile, "Value"))
taxamt =bnvms24.getROProperty("innerhtml")
'''''query''''
recordCount = lineinfovalidate(invoiceid)
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

          if Trim(recordCount(0)) = Trim(buninsql) then
            WriteToReport micPass, "Actual Business Unit Value "&buninsql&" matches value from Sql Query "&Trim(recordCount(0))&"", "Business Unit Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit Value is not Validated", "Business Unit Value is Validation failed", false
        End If
        if Trim(recordCount(1)) = Trim(invc) then
            WriteToReport micPass, "Actual Invoice Value "&invc&" matches value from Sql Query "&Trim(recordCount(1))&"", "Invoice Value is Validated successfully", false
        Else
            WriteToReport micFail, "Invoice Value is not Validated", "Invoice Value is Validation failed", false
        End If
        if Trim(recordCount(2)) = Trim(billtocustid) then
            WriteToReport micPass, "Actual Bill To Customer ID Value "&billtocustid&" matches value from Sql Query "&Trim(recordCount(2))&"", "Bill To Customer ID Value is Validated successfully", false
        Else
            WriteToReport micFail, "Bill To Customer ID Value is not Validated", "Bill To Customer ID Value is Validation failed", false
        End If    
            
        if Trim(recordCount(4)) = Trim(billtocustname) then
            WriteToReport micPass, "Actual Bill To Customer Name Value "&billtocustname&" matches value from Sql Query "&Trim(recordCount(4))&"", "Bill To Customer Name Value is Validated successfully", false
        Else
            WriteToReport micFail, "Bill To Customer Name Value is not Validated", "Bill To Customer Name Value is Validation failed", false
        End If        
            if left(recordCount(5),9) = left(descr,9) then
            WriteToReport micPass, "Actual Description Value "&left(descr,9)&" matches value from Sql Query "&left(recordCount(5),9)&"", "Description Value is Validated successfully", false
        Else
            WriteToReport micFail, "Description Value is not Validated", "Description Value is Validation failed", false
        End If
            if Trim(recordCount(6)) = Trim(seq1) then
            WriteToReport micPass, "Actual Seq Number Value "&seq1&" matches value from Sql Query "&Trim(recordCount(6))&"", "Seq Number Value is Validated successfully", false
        Else
            WriteToReport micFail, "Seq Number Value is not Validated", "Seq Number Value is Validation failed", false
        End If
             if Trim(recordCount(7)) = Trim(identf) then
            WriteToReport micPass, "Actual Identifier Value  is "&Trim(identf)&" matches value from Sql Query "&Trim(recordCount(7))&"", "Identifier Value is Validated successfully", false
        Else
            WriteToReport micFail, "Identifier Value is not Validated", "Identifier Value is Validation failed", false
        End If
                 if Trim(recordCount(8)) = Trim(line) then
            WriteToReport micPass, "Actual Line Number Value "&Trim(line)&" matches value from Sql Query "&Trim(recordCount(8))&"", "Line Number Value is Validated successfully", false
        Else
            WriteToReport micFail, "Line Number Value is not Validated", "Line Number Value is Validation failed", false
        End If            
                        
            if cint(recordCount(9)) = cint(quat) then
            WriteToReport micPass, "Actual Quantity Value "&cint(quat)&" matches value from Sql Query "&cint(recordCount(9))&"", "Quantity Value is Validated successfully", false
        Else
            WriteToReport micFail, "Quantity Value is not Validated", "Quantity Value is Validation failed", false
        End If            
            
            if Trim(recordCount(10)) = Trim(unittomes) then
            WriteToReport micPass, "Actual Unit Of Measure Value "&unittomes&" matches value from Sql Query "&Trim(recordCount(10))&"", "Unit Of Measure Value is Validated successfully", false
        Else
            WriteToReport micFail, "Unit Of Measure Value is not Validated", "Unit Of Measure Value is Validation failed", false
        End If 
        
        if cdbl(recordCount(11)) = cdbl(Trim(unitprice)) then
            WriteToReport micPass, "Actual Unit Price Value "&unitprice&" matches value from Sql Query "&recordCount(11)&"", "Unit Price Value is Validated successfully", false
        Else
            WriteToReport micFail, "Unit Price Value is not Validated", "Unit Price Value is Validation failed", false
        End If
        
            if CLng(recordCount(12)) = CLng(grossext) then
            WriteToReport micPass, "Actual Gross Extended Value "&CLng(grossext)&" matches value from Sql Query "&CLng(recordCount(12))&"", "Gross Extended Value is Validated successfully", false
        Else
            WriteToReport micFail, "Gross Extended Value is not Validated", "Gross Extended Value is Validation failed", false
        End If 
            if CLng(recordCount(13)) = CLng(netext) then
            WriteToReport micPass, "Actual Net Extended Value "&CLng(netext)&" matches value from Sql Query "&CLng(recordCount(13))&"", "Net Extended Value is Validated successfully", false
        Else
            WriteToReport micFail, "Net Extended Value is not Validated", "Net Extended Value is Validation failed", false
        End If 
        if CLng(recordCount(14)) = CLng(taxamt) then
            WriteToReport micPass, "Actual Tax Amount Value "&CLng(taxamt)&" matches value from Sql Query "&CLng(recordCount(14))&"", "Tax Amount Value is Validated successfully", false
        Else
            WriteToReport micFail, "Tax Amount Value is not Validated", "Tax Amount Value is Validation failed", false
        End If          
            
            End If
        
        
        End If
        
End Function

'**************************************************************************************************************
''' <summary> 
''' Verify that Summarized Line Level Tax Percent is displayed on the Bill Line Info1 Review Page
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function TaxPercentonLineInfo1()
    
        
Dim tcObjective,recordCount
tcObjective="Validate a single line invoice with a CREDIT balance"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Validate Find an Existing Value Page'''''''''''''''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Find an Existing Value").Exist(30) Then
            WriteToReport micPass, "Find an Existing Value Tab under Details Page loaded successfully", "Find an Existing Value Page loaded successfully", false
        Else
            WriteToReport micFail, "Find an Existing Value Page not loaded", "Find an Existing Value Page loading failed, so failing the test case", true
            Exit Function
        End If
        
    '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("buin_sigln", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buin_sigln", objectsFile, "Description")
        
    Dim invoiceid
    recordCount = lineinfotaxsumz111((GlobalDictionary("buinvat")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
invoiceid=recordCount(1)
        '''''''''''''setting invoice,bill status,search''''''
        setValue_WebEdit getObjectInfoFromXML("invoice_sigln", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invoice_vat", objectsFile, "Description")
        WebList_select getObjectInfoFromXML("Bill_status_sigln", objectsFile, "Value"),"Invoiced Bill",("Invoiced Bill is selected from Bill Status weblist")
        btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
        
        End If
''''''''''''''''''''Validate Header - Info 1 Page'''''''''''''''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","html tag:=SPAN","innerhtml:=Header -  Info 1").Exist(30) Then
            WriteToReport micPass, "Header - Info 1 Page loaded successfully", "Header - Info 1 Page loaded successfully", false
        Else
            WriteToReport micFail, "Header - Info 1 Page not loaded", "Header - Info 1 Page loading failed, so failing the test case", true
            Exit Function
        End If

''''''''''''''''''''Validate Line - Info 1 Page'''''''''''''''''''''''
WebList_select getObjectInfoFromXML("lineinfo1_sigln", objectsFile, "Value"),"Line - Info 1",("Line - Info 1 is selected from the weblist")
if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Header -  Info 1").Exist(30) Then
            WriteToReport micPass, "Line - Info 1 Page loaded successfully", "Line - Info 1 Page loaded successfully", false
        Else
            WriteToReport micFail, "Line - Info 1 Page not loaded", "Line - Info 1 Page loading failed, so failing the test case", true
            Exit Function
                End If
''''''''''''''''''''Validate Tax Page'''''''''''''''''''''''
click_Link getObjectInfoFromXML("clicktaxlink", objectsFile, "Value"),("Tax Link Clicked")
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Line - Tax Info</span>").Exist(30) Then
            WriteToReport micPass, "Line - Tax Info Page loaded successfully", "Line - Tax Info Page loaded successfully", false
        Else
            WriteToReport micFail, "Line - Tax Info Page not loaded", "Line - Tax Info Page loading failed, so failing the test case", true
            Exit Function
        End If
'''''''''''********************************&%^$%&*%^^^^^^^^^^&$%#%$##$$#'''''''''''''''''
Dim taxsql,finalnum
    recordCount = lineinfotaxsumz111((GlobalDictionary("buinvat")))

If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
taxsql=recordCount(3)
finalnum=FormatNumber(taxsql)
 End If
'''''''''''********************************&%^$%&*%^^^^^^^^^^&$%#%$##$$#'''''''''''''''''
Dim perapp,perapp1,convtper,linenumber1,linenumber
Set perapp = eval(getObjectInfoFromXML("percnt_for_cc4", objectsFile, "Value"))
perapp1 =perapp.getROProperty("innerhtml")
convtper = left(perapp1,4)
Set linenumber1 = eval(getObjectInfoFromXML("percntnextline_for_cc4", objectsFile, "Value"))
linenumber =linenumber1.getROProperty("innerhtml")

WriteToReport micDone,"Tax Percentage Value displayed for Line "&linenumber&" is "&convtper&" and Tax Percentage from SQL is "&finalnum&" ","Credit Card Number",false
''''''''''''''loop''''''''''''''''''''''''''''''''''''

If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=\$ICField5\$hdown\$0").Exist(30) Then  

Do until Browser("creationtime:=0").Page("index:=1").WebElement("html id:=\$ICField5\$hdown\$0").Exist(30) = False

element_Click getObjectInfoFromXML("percntnext_for_cc4", objectsFile, "Value"),("Next Button Clicked")
Dim linenumber2,linenumber22
Set linenumber2 = eval(getObjectInfoFromXML("percntnextline_for_cc4", objectsFile, "Value"))
linenumber22 =linenumber2.getROProperty("innerhtml")

WriteToReport micDone,"Tax Percentage Value displayed  for Line "&linenumber22&" is "&convtper&" and Tax Percentage from SQL is "&finalnum&" ","Credit Card Number",false

Loop
End If
''''''''''''''end loop'''''''''''
     
        End If
        
End Function

'**************************************************************************************************************
''' <summary> 
''' Verify Invoice Reprint from Collections Workbench -- AA CAN 00017
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function VerifyInvoiceReprintCollectionsWorkbench017()
    Dim tcObjective,recordCount
tcObjective="Verify Invoice Reprint from Collections Workbench -- AA CAN 00017"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Validate Collections Workbench Page'''''''''''''''''''''''

wait 5
if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Reports/Queries").Exist(30) Then
            WriteToReport micPass, "Receivables workcenter Page loaded successfully", "Receivables workcenter Page loaded successfully", false
        Else
            WriteToReport micFail, "Receivables workcenter Page not loaded", "Receivables workcenter Page loading failed, so failing the test case", true
            Exit Function
        End If
''''''''''''''''''''''''''''''''''''''''''''''''''''''' Collections Workbench
Setting.WebPackage("ReplayType") = 2
       Browser("creationtime:=0").Page("index:=1").Link("innertext:=Collections Workbench","index:=0").Click
       'element_dblClick getObjectInfoFromXML("colwrk_lin", objectsFile, "Value"),("Collection Workbench Link Clicked")
Setting.WebPackage("ReplayType") = 1
wait 5 
       if Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","outerhtml:=<span>Items</span>","index:=0").Exist(30) Then
            WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", false
        Else
            WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
            Exit Function
        End If 
    '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("setid"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
        setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")

    '''''''''''''setting invoice'''''
        Dim invoiceid
    recordCount = invoicereprintverfyinvc1((GlobalDictionary("buinvat")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

invoiceid=recordCount(1)
        
        setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
        
        wait 6

btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"),("Search Button Clicked")
    
    End If
        if Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","outerhtml:=<span>Items</span>").Exist(30) Then
            WriteToReport micPass, "Item tab loaded successfully", "Item tab loaded successfully", false
        Else
            WriteToReport micFail, "Item tab not loaded", "Item tab loading failed", true
            End If
                End If
                
                'Click Search icon
                Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW\$hfind\$0").Click
                
                'Ener Invoice number in search box (Item and Invoice should match
                If Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinEdit("regexpwndclass:=Edit").exist(5)Then
                	Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinEdit("regexpwndclass:=Edit").Set invoiceid
                	Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinButton("regexpwndtitle:=OK").Click	
                Else
                 	WriteToReport micFail, "Find", "Find Window did not load", true
                 	Exit Function
                End If
        check_CheckBox getObjectInfoFromXML("detail1_lin", objectsFile, "Value"),("Check Box on Detail 1 tab is Checked")    
        WebList_select getObjectInfoFromXML("itemaction_sigln", objectsFile, "Value"),"Reprint Invoices",("Reprint Invoices is selected from the weblist")
btn_click  getObjectInfoFromXML("Gobtn_lin", objectsFile, "Value"),("GO button Clicked")
 wait 2
 Verify_ClickRadioBtn getObjectInfoFromXML("webrad_lin", objectsFile, "Value"),("For Output Destination Web Radio Button Clicked "),"6"
 btn_click  getObjectInfoFromXML("okbtn_lin", objectsFile, "Value"),("OK button Clicked")
 wait 5
 '''''''''''''''''''''''''''''''''''''''
  Dim processInstanceObj, procInstance
 
 If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Successful - Process Instance.*","index:=0").exist(10) Then
 procInstance = split(split(Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Successful - Process Instance.*","index:=0").GetROProperty("innertext"),"=")(1),".")(0)
 Else
	 WriteToReport micFail, "Process", "Process not displayed", true
 	 Exit Function
 End If
 

  btn_click  getObjectInfoFromXML("okbtnerr_lin", objectsFile, "Value"),("OK button for Successful Process Clicked")
    ''''''''''''''''''''Validate Receivables workcenter Page'''''''''''''''''''''''
      
		If Browser("creationtime:=1").Page("index:=1").WebElement("innerhtml:=Reports/Queries").exist(20) Then
			Browser("creationtime:=1").Page("index:=1").WebElement("innerhtml:=Reports/Queries").click
		Else
		 	WriteToReport micFail, "Report/Queries", "Report/Queries object was not found.", true
			Exit Function
		End If
         if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=AR Queries").Exist(30) Then
            WriteToReport micPass, "Report/Queries Page loaded successfully", "Report/Queries Page loaded successfully", false
        Else
            WriteToReport micFail, "Report/Queries Page not loaded", "Report/Queries Page loading failed, so failing the test case", true
            End If
               
            wait 5

element_dblClick getObjectInfoFromXML("Pr_lin", objectsFile, "Value"),("Process Monitor Link is Clicked")
wait 5

 	if Browser("creationtime:=0").Page("index:=1").WebElement("class:=PTCPGRIDTITLE","innerhtml:=Process List").Exist(30) Then
        WriteToReport micPass, "Process Monitor Page loaded successfully", "Process Monitor Page loaded successfully", false
    Else
            WriteToReport micFail, "Process Monitor Page not loaded", "Process Monitor Page loading failed, so failing the test case", true
            End If
wait 2

Dim runStatus
   runStatus = getStatus(procInstance,GlobalDictionary("SignInUser"))   
   wait 2
   element_dblClick getObjectInfoFromXML("mr_lin", objectsFile, "Value"),("Report Manager Link is Clicked")
   wait 2
   if Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSGROUPBOXLABEL","innerhtml:=View Reports For").Exist(30) Then
        WriteToReport micPass, "Report Manager Page loaded successfully", "Report Manager Page loaded successfully", false
    Else
            WriteToReport micFail, "Report Manager Page not loaded", "Report Manager Page loading failed, so failing the test case", true
            End If
    btn_click  getObjectInfoFromXML("refbtn_lin", objectsFile, "Value"),("Refresh Button Clicked")
    wait 5
    
    element_dblClick getObjectInfoFromXML("CDWBIRPT_lin", objectsFile, "Value"),("CDWBIRPT Link is Clicked")    
     if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=File List").Exist(30) Then
        WriteToReport micPass, "CDWBIRPT Page loaded successfully", "CDWBIRPT Page loaded successfully", false
    Else
            WriteToReport micFail, "CDWBIRPT Page not loaded", "CDWBIRPT Page loading failed, so failing the test case", true
            End If
                
            wait 2
    element_dblClick getObjectInfoFromXML("CDWBIRPTPDF_lin", objectsFile, "Value"),("CDWBIRPT Link to open pdf is Clicked")
     wait 5
''''''''''''''''''''''''GETTING INVOICE FROM PDF'''''''''''''''''

Dim sVal,invoiceId1,isFound
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").highlight
Call WriteToReport (micPass,"CDW Invoice Status Report is Loaded Successfully","", True)
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "a" + micCtrlUp
wait 2
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "c" + micCtrlUp
Dim clipBoard, objFso, tempFile, txt, reqText
Set clipBoard = CreateObject("Mercury.Clipboard")
reqText = clipBoard.GetText
'Print reqText
clipBoard.Clear
Set clipBoard = Nothing
Set objFso = CreateObject("Scripting.FileSystemObject")
Set tempFile = objFso.CreateTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", True)

tempFile.Write reqText
tempFile.Close
Set tempFile = objFso.OpenTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt")
isFound = false
Dim rowNum
Do until tempFile.AtEndOfStream
    txt = tempFile.ReadLine
    If instr(txt, "Invoices NOT interfaced to Bill Trust BUT will be sent to customers via EMail/Internal:") > 0 Then
        isFound = True
        rowNum = 0
    ElseIf isFound Then
        rowNum = rowNum + 1
        If rowNum = 2 Then
            invoiceId1 = (mid((split(txt," ",1)(0)),11,14))
            sVal = Replace(""&invoiceId1&""," ","")
            Call WriteToReport (micPass,"InvoiceID 1 captured is "&sVal&"","", True)
    
            isFound = false
        End If
    End If
Loop

tempFile.Close

objFso.DeleteFile "C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", true
Set objFso = Nothing
Browser("CreationTime:=1").Close   


End Function

'**************************************************************************************************************
''' <summary> 
''' Verify Invoice Reprint from Collections Workbench -- AA CAN 00003
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function VerifyInvoiceReprintCollectionsWorkbench003()
    Dim tcObjective,recordCount
tcObjective="Verify Invoice Reprint from Collections Workbench -- AA CAN 00003"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Validate Collections Workbench Page'''''''''''''''''''''''

wait 5
if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Reports/Queries").Exist(30) Then
            WriteToReport micPass, "Receivables workcenter Page loaded successfully", "Receivables workcenter Page loaded successfully", false
        Else
            WriteToReport micFail, "Receivables workcenter Page not loaded", "Receivables workcenter Page loading failed, so failing the test case", true
            Exit Function
        End If
'''''''''''''''''''''''''''''''''''''''''''''''''''''''    
      '  element_dblClick getObjectInfoFromXML("colwrk_lin", objectsFile, "Value"),("Collection Workbench Link Clicked")
      Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	     
	    
     If Browser("creationtime:=0").Page("index:=1").PSFrame("title:=Pagelet Area Page").Link("innertext:=Collections Workbench","index:=1").exist(30) Then
        Browser("creationtime:=0").Page("index:=1").PSFrame("title:=Pagelet Area Page").Link("innertext:=Collections Workbench","index:=1").highlight
     	Browser("creationtime:=0").Page("index:=1").PSFrame("title:=Pagelet Area Page").Link("innertext:=Collections Workbench","index:=1").click
     	If Browser("creationtime:=0").Page("index:=1").PSFrame("title:=Pagelet Area Page").Link("innertext:=Collections Workbench","index:=1").exist(30) Then
         	Browser("creationtime:=0").Page("index:=1").PSFrame("title:=Pagelet Area Page").Link("innertext:=Collections Workbench","index:=1").click
         End If	
     	WriteToReport micPass, "Collections Workbench link clicked successfully", "Collections Workbench link is  clicked  successfully", false
     else
        WriteToReport micFail, "Collections Workbench link ", "Collections Workbench link is not clicked  successfully", true     
     End If  
     
      Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
wait 5 
       if Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","outerhtml:=<span>Items</span>").Exist(30) Then
            WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", false
        Else
            WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
            Exit Function
        End If 
    '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("setid"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
        setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")

    '''''''''''''setting invoice'''''
        Dim invoiceid
    recordCount = invoicereprintverfyinvc1((GlobalDictionary("buinvat")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True

invoiceid=recordCount(1)
        
        setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
        
        wait 6

btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"),("Search Button Clicked")
    
    End If
        if Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","outerhtml:=<span>Items</span>").Exist(30) Then
            WriteToReport micPass, "Item tab loaded successfully", "Item tab loaded successfully", false
        Else
            WriteToReport micFail, "Item tab not loaded", "Item tab loading failed", true
            End If
                End If
        check_CheckBox getObjectInfoFromXML("detail1_lin", objectsFile, "Value"),("Check Box on Detail 1 tab is Checked")    
        WebList_select getObjectInfoFromXML("itemaction_sigln", objectsFile, "Value"),"Reprint Invoices",("Reprint Invoices is selected from the weblist")
btn_click  getObjectInfoFromXML("Gobtn_lin", objectsFile, "Value"),("GO button Clicked")
 wait 2
 Verify_ClickRadioBtn getObjectInfoFromXML("webrad_lin", objectsFile, "Value"),("For Output Destination Web Radio Button Clicked "),"6"
 btn_click  getObjectInfoFromXML("okbtn_lin", objectsFile, "Value"),("OK button Clicked")
 wait 5
 
 Dim processInstanceObj, processInstance
 
 processInstance = split(split(Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Successful - Process Instance.*","index:=0").GetROProperty("innertext"),"=")(1),".")(0)
 
  btn_click  getObjectInfoFromXML("okbtnerr_lin", objectsFile, "Value"),("OK button for Successful Process Clicked")
    ''''''''''''''''''''Validate Receivables workcenter Page'''''''''''''''''''''''
      
wait 8       
		Browser("creationtime:=0").Page("index:=1").Link("html id:=ptalPg_RPTQRY").Click
         if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=AR Queries").Exist(30) Then
            WriteToReport micPass, "Report/Queries Page loaded successfully", "Report/Queries Page loaded successfully", false
        Else
            WriteToReport micFail, "Report/Queries Page not loaded", "Report/Queries Page loading failed, so failing the test case", true
            End If
               
            wait 5

element_dblClick getObjectInfoFromXML("Pr_lin", objectsFile, "Value"),("Process Monitor Link is Clicked")
wait 5

           if Browser("creationtime:=0").Page("index:=1").WebElement("class:=PTCPGRIDTITLE","innerhtml:= Process List ").Exist(30) Then
              WriteToReport micPass, "Process Monitor Page loaded successfully", "Process Monitor Page loaded successfully", false
            Else
              WriteToReport micFail, "Process Monitor Page not loaded", "Process Monitor Page loading failed, so failing the test case", true
           End If
    
wait 2

Dim runStatus
   runStatus = getStatus(processInstance,GlobalDictionary("SignInUser") )  
   wait 2
   element_dblClick getObjectInfoFromXML("mr_lin", objectsFile, "Value"),("Report Manager Link is Clicked")
   wait 2
   if Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSGROUPBOXLABEL","innerhtml:=View Reports For").Exist(30) Then
        WriteToReport micPass, "Report Manager Page loaded successfully", "Report Manager Page loaded successfully", false
    Else
            WriteToReport micFail, "Report Manager Page not loaded", "Report Manager Page loading failed, so failing the test case", true
            End If
    btn_click  getObjectInfoFromXML("refbtn_lin", objectsFile, "Value"),("Refresh Button Clicked")
    wait 5
    element_dblClick getObjectInfoFromXML("CDWBIRPT_lin", objectsFile, "Value"),("CDWBIRPT Link is Clicked")    
     if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=File List").Exist(30) Then
        WriteToReport micPass, "CDWBIRPT Page loaded successfully", "CDWBIRPT Page loaded successfully", false
    Else
            WriteToReport micFail, "CDWBIRPT Page not loaded", "CDWBIRPT Page loading failed, so failing the test case", true
            End If
                
            wait 2
    element_dblClick getObjectInfoFromXML("CDWBIRPTPDF_lin", objectsFile, "Value"),("CDWBIRPT Link to open pdf is Clicked")
     wait 5
''''''''''''''''''''''''GETTING INVOICE FROM PDF'''''''''''''''''

Dim sVal,invoiceId1,isFound
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").highlight
Call WriteToReport (micPass,"CDW Invoice Status Report is Loaded Successfully","", True)
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "a" + micCtrlUp
wait 2
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "c" + micCtrlUp
Dim clipBoard, objFso, tempFile, txt, reqText
Set clipBoard = CreateObject("Mercury.Clipboard")
reqText = clipBoard.GetText
'Print reqText

clipBoard.Clear
Set clipBoard = Nothing



Set objFso = CreateObject("Scripting.FileSystemObject")
Set tempFile = objFso.CreateTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", True)

tempFile.Write reqText
tempFile.Close

Set tempFile = objFso.OpenTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt")
'Dim isFound,invoiceId1,invoiceId2
isFound = false
Dim rowNum
Do until tempFile.AtEndOfStream
    txt = tempFile.ReadLine
    If instr(txt, "Invoices NOT interfaced to Bill Trust BUT will be sent to customers via EMail/Internal:") > 0 Then
        isFound = True
        rowNum = 0
    ElseIf isFound Then
        rowNum = rowNum + 1
        If rowNum = 2 Then
            invoiceId1 = (mid((split(txt," ",1)(0)),11,14))
            sVal = Replace(""&invoiceId1&""," ","")
            Call WriteToReport (micPass,"InvoiceID 1 captured is "&sVal&"","", True)
    
            isFound = false
        End If
    End If

Loop

tempFile.Close

objFso.DeleteFile "C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", true
Set objFso = Nothing
Browser("CreationTime:=1").Close   


End Function



'**************************************************************************************************************
''' <summary> 
''' Verify Lease Rebills retain Original Invoice Date
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function VerifyLeaseRebillinv()
    Dim tcObjective,recordCount
tcObjective="Verify Lease Rebills retain Original Invoice Date"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective"), false 

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","outerhtml:=<span>Find an Existing Value</span>").Exist(60) Then
            WriteToReport micPass, "Find an Existing Value tab under Adjust Entire Bill page loaded successfully", "Find an Existing Value Page loaded successfully", false
        Else
        WriteToReport micFail, "Find an Existing Value Tab Adjust Entire Bill Page not loaded", "Find an Existing Value Page loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("buin_adj", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buin_adj", objectsFile, "Description")
        
    '''''''''''''setting invoice'''''
        Dim invoiceid,invd1
    recordCount = invoicereprintverfyinvc1((GlobalDictionary("buinvat")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
invoiceid=recordCount(2)

        setValue_WebEdit getObjectInfoFromXML("invoice_adj", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invoice_adj", objectsFile, "Description")
        
        wait 2
End If
btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")


''''''''''''''validating Adjust Entire Bill page'''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innerhtml:=Adjust Entire Bill","index:=1").Exist(45) Then
            WriteToReport micPass, "Adjust Entire Bill Page loaded successfully", "Adjust Entire Bill Page loaded successfully", false
        Else
        WriteToReport micFail, "Adjust Entire Bill Page not loaded", "Adjust Entire Bill Page loading failed, so failing the test case", true
        Exit Function
End If
Verify_ClickRadioBtn getObjectInfoFromXML("billadjact_adj", objectsFile, "Value"),("For Select Bill Adjustment Action Radio Button Credit & Rebill Clicked "),"CRB"

    click_Lookup_Img_And_Select_Item "Look up Adjustment Reason.*","BI_ADJ_WRK_CREDIT_REASON", GlobalDictionary("adjrsn"),"Adjustment Reason is "&GlobalDictionary("adjrsn")&" "    
'btn_click  getObjectInfoFromXML("save_cccc", objectsFile, "Value"),("Save Button Clicked")
Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Click
wait(3)
Dim creditbillinvoice,rebillinvoice
creditbillinvoice=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX","html id:=BI_ADJ_WRK_ADJ_INVOICE1").GetROProperty("default value")
rebillinvoice=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX","html id:=BI_ADJ_WRK_ADJ_INVOICE2").GetROProperty("default value")
'WriteToReport micPass, "Captured Credit Bill Invoice is "&creditbillinvoice&" and Rebill Invoice is "&rebillinvoice&" ", "Captured Credit Bill and Rebill Invoices"
WriteToReport micDone,"Captured Credit Bill Invoice is "&creditbillinvoice&" and Rebill Invoice is "&rebillinvoice&" ","Captured Credit Bill and Rebill Invoice",false
wait 3
click_Link getObjectInfoFromXML("header1link_adj", objectsFile, "Value"),("Header Info 1 Link Next to Rebill Bill is Clicked")
wait 5
Dim valdategrey1,valdate1
If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_INVOICE_DT").Exist(60) Then
   valdategrey1=Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_INVOICE_DT").GetROProperty("disabled")
   valdate1=Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_INVOICE_DT").GetROProperty("default value")
	
End If

    if valdategrey1= 1 Then
        WriteToReport micPass, "Invoice Date is grayed out and the value of Invoice date is "&valdate1&"", "Invoice Date is grayed out successfully", false
    Else
            WriteToReport micFail, "Invoice Date is not grayed out", "Invoice Date is not grayed out", true
            End If
        btn_click  getObjectInfoFromXML("rtnsrch_adj", objectsFile, "Value"),("Return to Search Button Clicked")    
wait 3
if Browser("creationtime:=1").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(60) Then
            WriteToReport micPass, "Find an Existing Value Tab Under Standard Billing Page loaded successfully", "Find an Existing Value Page loaded successfully", false
        Else
        WriteToReport micFail, "Find an Existing Value Tab Under Standard Billing Page not loaded", "Find an Existing Value Page loading failed, so failing the test case", true
        Exit Function

 End If
 
setValue_WebEdit getObjectInfoFromXML("bui_new_rebill1", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("bui_new_rebill1", objectsFile, "Description")
wait 2
setValue_WebEdit getObjectInfoFromXML("inv_new_rebill1", objectsFile, "Value"),rebillinvoice,false, getObjectInfoFromXML("inv_new_rebill1", objectsFile, "Description")

btn_click  getObjectInfoFromXML("serch_delete_adj", objectsFile, "Value"),("Search Button Clicked")

Dim valdategrey2,valdate2
If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_INVOICE_DT").Exist(60) Then
	valdategrey2=Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_INVOICE_DT").GetROProperty("disabled")
valdate2=Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_INVOICE_DT").GetROProperty("default value")
End If

if valdategrey2= 1 Then
        WriteToReport micPass, "Invoice Date is grayed out and the value of Invoice date is "&valdate2&"", "Invoice Date is grayed out successfully", false
    Else
            WriteToReport micFail, "Invoice Date is not grayed out", "Invoice Date is not grayed out", true
            End If
            
            
    ''''''''''''''''''''Validate Find an Existing Value Page'''''''''''''''''''''''
    Browser("creationtime:=1").Close
        GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_BillingReviewAdjusmentHist")
    if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
wait 2
        if Browser("creationtime:=0").page("index:=1").WebElement("innertext:=Adjustment History","index:=0","html id:=app_label").Exist(50) Then
            WriteToReport micPass, "Adjustment History Page loaded successfully", "Adjustment History Page loaded successfully", false
	     Else
	        WriteToReport micFail, "Adjustment History Page not loaded", "Adjustment History Page loading failed, so failing the test case", true
        End If

''''''''''''''''''''''''''''''' 
Browser("creationtime:=0").page("index:=1").WebEdit("html id:=BI_HDR_ADJ_VW_BUSINESS_UNIT").Set GlobalDictionary("buinvat") 
Browser("creationtime:=0").page("index:=1").WebEdit("html id:=BI_HDR_ADJ_VW_INVOICE").Set invoiceid 
btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")

'''''''''''''''''''''''''''''''''''''''''
wait 10
Dim valdateorgdate,valdatecreddate1,valdaterebilldate
valdateorgdate=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY","html id:=BI_ADJ_HIST_VW_INVOICE_DT\$0","html tag:=SPAN").GetROProperty("innerhtml")
valdatecreddate1=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY","html id:=BI_ADJ_HIST_VW_INVOICE_DT\$1","html tag:=SPAN").GetROProperty("innerhtml")
valdaterebilldate=Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY","html id:=BI_ADJ_HIST_VW_INVOICE_DT\$2","html tag:=SPAN").GetROProperty("innerhtml")

if valdateorgdate=valdatecreddate1 and valdateorgdate=valdaterebilldate Then
        WriteToReport micPass, "The Invoice Date for the Credit and Rebill Invoice match the Invoice Date for the Orignal Invoie that is "&valdatecreddate1&"", "Invoice Date is matched successfully", false
    Else
            WriteToReport micFail, "Invoice Date did not match", "Invoice Date did not match", true
End If
End If
End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Finalized Bill - Credit Single Line Test Process to credit a single line through Adjust Selected Bill Lines page
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'05/30/2018			Eric Trout		Added .Exist due to timing issue
'**************************************************************************************************************
Public Function CreditSingleLine()
	Dim tcObjective, recordCount, invoiceid, invd1
	Dim stusnew, stusnewg, cenew1, cenew

	tcObjective="Finalized Bill - Credit Single Line Test Process to credit a single line through Adjust Selected Bill Lines page"
	WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then

		''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
		If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
			WriteToReport micPass, "Find an Existing Value Tab under Adjust Selected Bill Lines Page loaded successfully", "Find an Existing Value Page loaded successfully", False
		Else
			WriteToReport micFail, "Find an Existing Value Tab under Adjust Selected Bill Lines Page not loaded", "Find an Existing Value Page loading failed, so failing the test case", True
			Exit Function
		End If

        '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("buninsql_sng", objectsFile, "Value"), GlobalDictionary("buinvat"), False, getObjectInfoFromXML("buninsql_sng", objectsFile, "Description")
        
	    '''''''''''''setting invoice'''''
		recordCount = invoicereprintverfyinvc1((GlobalDictionary("buinvat")))
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			invoiceid = recordCount(2)
			setValue_WebEdit getObjectInfoFromXML("invc_sng", objectsFile, "Value"), invoiceid, False, getObjectInfoFromXML("invc_sng", objectsFile, "Description")
			Wait 2
		End If

		btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
		Wait 2
		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"">Adjust Selected Bill Lines</span>").Exist(30) Then
			WriteToReport micPass, "Adjust Selected Bill Lines Page loaded successfully", "Adjust Selected Bill Lines Page loaded successfully", False
		Else
			WriteToReport micFail, "Adjust Selected Bill Lines Page not loaded", "Adjust Selected Bill Lines Page loading failed, so failing the test case", True
			Exit Function
		End If

		Verify_ClickRadioBtn getObjectInfoFromXML("adjval_sng", objectsFile, "Value"),("Adjustment Selected Line Radio Buttion which is under Line Adjustment Parameters tab is Selected"),"LIN"
		Wait 2
		setValue_WebEdit getObjectInfoFromXML("nxt_sng", objectsFile, "Value"),GlobalDictionary("Adju"), False,("Adjustment Field value under Line Adjustment Results tab")
		Wait 2
		check_CheckBox getObjectInfoFromXML("select_sng", objectsFile, "Value"),("Select Check Box which is under Select Bill Lines tab was Unchecked and is Checked now")
		Wait 2
		setValue_WebEdit getObjectInfoFromXML("adjaresn_sng", objectsFile, "Value"),GlobalDictionary("Adjures"), False,("Adjustment Reason Field value under Select Bill Lines tab")
		Wait 2
		btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"),("Save Button Clicked")
		
		If Browser("creationtime:=0").Page("index:=1").Link("html id:=BI_PB_WRK_BI_HDR_PB").exist(20) Then
		click_Link getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Value"),("Header Info 1 Link Clicked")
		Else
			Call WriteToReport(micFail, "Header Info 1 Link", "Header Info 1 Link was not found.", True)
			Exit Function
		End If
		
		
		Wait 5
		If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_BILL_STATUS").Exist(30) Then
			Call WriteToReport(micPass, "Header Info 1 Page loaded Successfully", "Header Info 1 Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Header Info 1 Page not loaded Successfully", "Failed to load Header Info 1 Page", True)
			Exit Function
		End If

		Set stusnewg= eval(getObjectInfoFromXML("Status_new_sng", objectsFile, "Value"))
		stusnew =stusnewg.getROProperty("default value")
		set cenew1= eval(getObjectInfoFromXML("invc_sng_new", objectsFile, "Value"))
		cenew =cenew1.getROProperty("innerhtml")
		wait 2
		If stusnew= "NEW" Then
			WriteToReport micPass, "The Invoice created is " & cenew & " and the status of the new invoice is " & stusnew & " ", "Invoice Date is matched successfully", False
		Else
			WriteToReport micFail, "Invoice not created", "Invoice did not get created", True
		End If
	End If
End Function


'**************************************************************************************************************
''' <summary> 
''' Testing the process of adjusting Billing Lines in a finalized bill
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function CreditSingleLinebill()
	Dim tcObjective, recordCount, invoiceid, invd1
	Dim optsng, optsng1, stusnew, stusnewg, cenew1, cenew

	tcObjective = "Testing the process of adjusting Billing Lines in a finalized bill"
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then

		''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
		Wait 3
		If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
			WriteToReport micPass, "Find an Existing Value Tab under Adjust Selected Bill Lines Page loaded successfully", "Find an Existing Value Page loaded successfully", False
		Else
			WriteToReport micFail, "Find an Existing Value Tab under Adjust Selected Bill Lines Page not loaded", "Find an Existing Value Page loading failed, so failing the test case", True
			Exit Function
		End If

		'''''''''''''setting business unit'
		setValue_WebEdit getObjectInfoFromXML("buninsql_sng", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("buninsql_sng", objectsFile, "Description")

		'''''''''''''setting invoice'''''
		recordCount = invoicereprintverfyinvc1((GlobalDictionary("buinvat")))
		isArray(recordCount)
		If Ubound(recordCount) >= 0 Then
			invoiceid=recordCount(2)
			setValue_WebEdit getObjectInfoFromXML("invc_sng", objectsFile, "Value"),invoiceid, False, getObjectInfoFromXML("invc_sng", objectsFile, "Description")
			Wait 4
		End If

		btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
		wait 2
		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"">Adjust Selected Bill Lines</span>").Exist(30) Then
			WriteToReport micPass, "Adjust Selected Bill Lines Page loaded successfully", "Adjust Selected Bill Lines Page loaded successfully", False
		Else
			WriteToReport micFail, "Adjust Selected Bill Lines Page not loaded", "Adjust Selected Bill Lines Page loading failed, so failing the test case", True
			Exit Function
		End If

		Verify_ClickRadioBtn getObjectInfoFromXML("adjval_sng", objectsFile, "Value"), ("Adjustment Selected Line Radio Buttion which is under Line Adjustment Parameters tab is Selected"), "LIN"
		Wait 2
		Set optsng = eval(getObjectInfoFromXML("opt_sng_new", objectsFile, "Value"))
		optsng1 = optsng.getROProperty("default value")
		WriteToReport micDone, "Line opt weblist value is " & optsng1 & " ","Line opt weblist value", False
		Wait 2
		setValue_WebEdit getObjectInfoFromXML("nxt_sng", objectsFile, "Value"), GlobalDictionary("Adju"), False, ("Adjustment Field value under Line Adjustment Results tab")
		Wait 2
		check_CheckBox getObjectInfoFromXML("select_sng", objectsFile, "Value"), ("Select Check Box which is under Select Bill Lines tab was Unchecked and is Checked now")
		Wait 2
		setValue_WebEdit getObjectInfoFromXML("adjaresn_sng", objectsFile, "Value"), GlobalDictionary("Adjures"), False, ("Adjustment Reason Default Field value under Line Adjustment Parameters tab")
		Wait 2
		btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), ("Save Button Clicked")
		Wait 2
		click_Link getObjectInfoFromXML("Bill_Header_Info_link_sng", objectsFile, "Value"), ("Bill Line Info 1 Link next to Total Lines Adjusted Field is Clicked")
		Wait 6
		If Browser("creationtime:=1").Page("index:=1").WebElement("html id:=app_label", "innerhtml:=Line -  Info 1").Exist(30) Then
			Call WriteToReport(micPass, "Bill Line Info 1 Page loaded Successfully", "Bill Line Info 1 Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Bill Line Info 1 Page not loaded Successfully", "Failed to load Header Info 1 Page", True)
			Exit Function
		End If

		element_Click getObjectInfoFromXML("Header_Info1_Status", objectsFile, "Value"), ("Header - Info 1 Link Clicked")
		If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_BILL_STATUS").Exist(30) Then
			Call WriteToReport(micPass, "Header info 1 Page loaded Successfully", "Header info 1 Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Header info 1 Page not loaded Successfully", "Failed to load Header info 1 Page", True)
			Exit Function
		End If

		Set stusnewg = Eval(getObjectInfoFromXML("Status_new_sng", objectsFile, "Value"))
		stusnew = stusnewg.getROProperty("default value")
		Set cenew1 = Eval(getObjectInfoFromXML("invc_sng_new", objectsFile, "Value"))
		cenew = cenew1.getROProperty("innerhtml")
		Wait 2
		If stusnew = "NEW" Then
			WriteToReport micPass, "The Invoice created is " & cenew & " and the status of the new invoice is " & stusnew & " ", "Invoice Date is matched successfully", False
		Else
			WriteToReport micFail, "Invoice not created", "Invoice did not get created", True
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Custom Vertex components - Validate the custom vertex pages
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function Validatecustomvertexpagescomponents()
	Dim tcObjective,recordCount
tcObjective="Custom Vertex components - Validate the custom vertex pages"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
        if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Vertex Logging Page</span>").Exist(30) Then
            WriteToReport micPass, "Vertex Integration Logging Page loaded successfully", "Vertex Integration Logging Page loaded successfully", false
          Else
            WriteToReport micFail, "Vertex Integration Logging Page not loaded", "Vertex Integration Logging loading failed, so failing the test case", true
          Exit Function
        End If
      
wait 2
    uncheck_CheckBox getObjectInfoFromXML("vertxtaxcaclc_checked", objectsFile, "Value"),("Vertex Tax Calc Logging Switch Check Box is editable and was checked and is Unchecked now")
wait 2
    check_CheckBox getObjectInfoFromXML("vertxtaxcaclc_checked", objectsFile, "Value"),("Vertex Tax Calc Logging Switch Check Box is editable and was Unchecked and is Checked now")


'''*******************************************
GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CDWBillingVertexLineErrorChecking") 


    SelectMainMenu1(GlobalDictionary("MainMenuSelection")) 
         If Browser("creationtime:=0").Page("index:=1").WebButton("name:=No").Exist(5) Then
	    	Browser("creationtime:=0").Page("index:=1").WebButton("name:=No").Click
	    End If
        if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(10) Then
            WriteToReport micPass, "Vertex Line Error Checking  page loaded successfully", "Vertex Line Error Checking Page loaded successfully", false
        Else
            WriteToReport micFail, "Vertex Line Error Checking Page not loaded", "Vertex Line Error Checking Page loading failed, so failing the test case", true
            Exit Function
        End If


element_dblClick getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"),("Add A New Value Tab Clicked")

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Add a New Value</span>").Exist(30) Then
            WriteToReport micPass, "Add a New Value Tab loaded successfully", "Add a New Value Tab loaded successfully", false
        Else
            WriteToReport micFail, "Add a New Value Tab not loaded", "Add a New Value Tab loading failed, so failing the test case", true
           
        End If
setValue_WebEdit getObjectInfoFromXML("runcnt_checked", objectsFile, "Value"),GlobalDictionary("runcon"),false, getObjectInfoFromXML("runcnt_checked", objectsFile, "Description")
wait 2
Browser("title:=Standard Billing").page("title:=Standard Billing").PSFrame("name:=Target Content").WebButton("html id:=#ICSearch").Click


if  isObjExistNOReport( getObjectInfoFromXML("test1_checked", objectsFile, "Value"),("Test 1 Link ")) then
    click_Link getObjectInfoFromXML("test1_checked", objectsFile, "Value"),("Test 1 Link Clicked")
End If
wait 10
WebList_select getObjectInfoFromXML("opt1_sng1_new1", objectsFile, "Value"),"Invoices",("Invoices is selected from Run Option weblist")
wait 5
setValue_WebEdit getObjectInfoFromXML("busntt_checked", objectsFile, "Value"),GlobalDictionary("buinvat"),false, getObjectInfoFromXML("busntt_checked", objectsFile, "Description")
wait 2
img_click getObjectInfoFromXML("imgclick_cc_IMG_cc4", objectsFile, "Value"),("Magnifying glass to select Invoice is clicked")
click_Link  getObjectInfoFromXML("linkclick_test1_checked", objectsFile, "Value"),("Link to select Invoice is clicked")
wait 10
Dim incid,incid4
Set incid4= eval(getObjectInfoFromXML("incid_cc4", objectsFile, "Value"))
incid =incid4.getROProperty("default value")
WriteToReport micDone,"Invoice ID is "&incid&" ","Invoice ID "&incid&" is set  ",false

wait 2
btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
wait 2
check_CheckBox getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Value"),("Vertex Error Checking Check Box Checked")
wait 2
btn_click getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
wait 5
Dim processInstanceObj, procInstance
 If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance.*","index:=0").Exist(30) Then
 	 procInstance = split(Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance.*","index:=0").GetROProperty("innertext"),":")(1)
 End If


wait 2
click_Link  getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
 wait 5
 if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Process List</span>").Exist(60) Then
        WriteToReport micPass, "Process Monitor Page loaded successfully", "Process Monitor Page loaded successfully", false
    Else
        WriteToReport micFail, "Process Monitor Page not loaded", "Process Monitor Page loading failed, so failing the test case", true
 End If
    
wait 2

Dim runStatus
   runStatus = getStatus(procInstance,GlobalDictionary("SignInUser"))
'''''***********************************%^%@#$^%@$#%^@$#%^#$%^@$%^@#$%^#$%^@#$%^@#$%^@#***************
GlobalDictionary("MainMenuSelection") = GetDataFrmAllVars("$Navigation_CDWBillingVertexConnectionTest") 

    SelectMainMenu1(GlobalDictionary("MainMenuSelection")) 
wait 3      
        if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Vertex Connection Test</span>").Exist(60) Then
            WriteToReport micPass, "Vertex Connection Test page loaded successfully", "Vertex Connection Test Page loaded successfully", false
          Else
            WriteToReport micFail, "Vertex Connection Test Page not loaded", "Vertex Connection Test Page loading failed, so failing the test case", true
            Exit Function
        End If


wait 3
Dim geocode,taxamount,taxamount1,geocode1
Set geocode1 = eval(getObjectInfoFromXML("geocodetax_snghk_checked", objectsFile, "Value"))
geocode =geocode1.getROProperty("innertext")

Set taxamount1 = eval(getObjectInfoFromXML("taxamounttax_snghk_checked", objectsFile, "Value"))
taxamount =taxamount1.getROProperty("innertext")

If geocode=" " Then
WriteToReport micPass, "Geo Code Value on Vertex Connection Test Page Before Test Tax Install Button Clicked is "&chr(34)&""&geocode&""&chr(34)&"","Credit Card Number", false
        Else
        WriteToReport micFail, "Geo Code Value displayed is "&geocode&" ","Credit Card Number, so failing the test case", true
        Exit Function
 End If	
 If taxamount="0.000" Then
WriteToReport micPass, "Tax Amount Value on Vertex Connection Test Page Before Test Tax Install Button Clicked is "&chr(34)&""&taxamount&""&chr(34)&"","Credit Card Number", false
        Else
        WriteToReport micFail, "Tax Amount Value displayed is "&taxamount&" ","Credit Card Number, so failing the test case", true
        Exit Function
 End If

btn_click getObjectInfoFromXML("testtaxinstall_checked", objectsFile, "Value"),("Test Tax Install button Clicked")

wait 10
Dim geocode11,geocode12,taxamount11,taxamount12
Set geocode11 = eval(getObjectInfoFromXML("geocodetax_snghk_checked", objectsFile, "Value"))
geocode12 =geocode11.getROProperty("innertext")

Set taxamount11 = eval(getObjectInfoFromXML("taxamounttax_snghk_checked", objectsFile, "Value"))
taxamount12 =taxamount11.getROProperty("innertext")

If geocode12<>geocode Then
WriteToReport micPass, "Geo Code Value on Vertex Connection Test Page After Test Tax Install Button Clicked is "&chr(34)&""&geocode12&""&chr(34)&"","Credit Card Number", false
        Else
        WriteToReport micFail, "Credit Card Number displayed is "&cc4card&" ","Credit Card Number, so failing the test case", true
        Exit Function
 End If	
 If taxamount12<>taxamount Then
WriteToReport micPass, "Tax Amount Value on Vertex Connection Test Page After Test Tax Install Button Clicked is "&chr(34)&""&taxamount12&""&chr(34)&"","Credit Card Number", false
        Else
        WriteToReport micFail, "Credit Card Number displayed is "&cc4card&" ","Credit Card Number, so failing the test case", true
        Exit Function
 End If
End If


End Function

'**************************************************************************************************************
''' <summary> 
''' Review Credit Card - Last 4 digits of Credit Card number appear on bill
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function ReviewCC4number()
	Dim tcObjective,recordCount
tcObjective="Review Credit Card - Last 4 digits of Credit Card number appear on bill"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''

       if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(50) Then
            WriteToReport micPass, "Summary Page loaded successfully", "Summary Page loaded successfully", false
          Else
            WriteToReport micFail, "Summary Page not loaded", "Summary Page loading failed, so failing the test case", true
            Exit Function
        End If
        '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("busntt_cc4", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("busntt_cc4", objectsFile, "Description")
     wait 3   
    '''''''''''''setting invoice'''''
        Dim invoiceid,invd1,biltocc
    recordCount = custcc4((GlobalDictionary("BusinessUnit")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
invoiceid=recordCount(1)
biltocc=recordCount(2)
        setValue_WebEdit getObjectInfoFromXML("invtt_cc4", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invtt_cc4", objectsFile, "Description")
        setValue_WebEdit getObjectInfoFromXML("custtt_cc4", objectsFile, "Value"),biltocc,false, getObjectInfoFromXML("custtt_cc4", objectsFile, "Description")
     
End If
btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
wait 5
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Bill Summary Info</span>").Exist(30) Then
            WriteToReport micPass, "Bill Summary Info Page loaded successfully", "Bill Summary Info Page loaded successfully", false
        Else
        WriteToReport micFail, "Bill Summary Info Page not loaded", "Bill Summary Info Page loading failed, so failing the test case", true
        Exit Function
End If
click_Link  getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Value"), getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Description")

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Header -  Info 1</span>").Exist(30) Then
           WriteToReport micPass, "Header -  Info 1 Page loaded successfully", "Header -  Info 1 Page loaded successfully", false
        Else
        WriteToReport micFail, "Header -  Info 1 Page not loaded", "Header -  Info 1 Page loading failed, so failing the test case", true
        Exit Function
End If
 img_click getObjectInfoFromXML("cc_IMG_cc4", objectsFile, "Value"), getObjectInfoFromXML("cc_IMG_cc4", objectsFile, "Description")
 if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PTPOPUP_TITLE"" id=""ptModTitle_0"">Credit Card Information</span>").Exist(60) Then
           WriteToReport micPass, "Credit Card Information Page loaded successfully", "Credit Card Information Page loaded successfully", false
        Else
        WriteToReport micFail, "Credit Card Information Page not loaded", "Credit Card Information Page loading failed, so failing the test case", true
        Exit Function
 End If
wait 3
 Dim cc4card1,cc4card,convtper,finalpaer,valuesmid,lencc,valuesmid11,convtper11
Set cc4card1 = eval(getObjectInfoFromXML("cc_cardno_cc4", objectsFile, "Value"))
cc4card =cc4card1.getROProperty("innerhtml")
 lencc=Len(cc4card)
 convtper =left(cc4card,12)
 convtper11=left(cc4card,11)
 finalpaer =Right(cc4card,4)
 valuesmid ="XXXXXXXXXXXX"
valuesmid11="XXXXXXXXXXX"

If lencc=16 Then
If convtper =valuesmid  Then
WriteToReport micPass, "All the digits except the last 4 digits are "&chr(34)&""&convtper&""&chr(34)&"","Credit Card Number", false
        Else
        WriteToReport micFail, "Credit Card Number displayed is "&cc4card&" ","Credit Card Number, so failing the test case", true
        Exit Function	
End If

If IsNumeric(finalpaer) Then
    WriteToReport micPass, "Last 4 digits of Credit Card Number "&cc4card&" are Numeric as expected "&chr(34)&""&finalpaer&""&chr(34)&"","Credit Card Number", false
 Else
    WriteToReport micFail, "Credit Card Number displayed is "&cc4card&" ","Credit Card Number, so failing the test case", true
    Exit Function
 End If

Else


If convtper11 =valuesmid11  Then
    WriteToReport micPass, "All the digits except the last 4 digits are "&chr(34)&""&convtper&""&chr(34)&" ","Credit Card Number", false
  Else
    WriteToReport micFail, "Credit Card Number displayed is "&cc4card&" ","Credit Card Number, so failing the test case", true
    Exit Function	
End If

	If IsNumeric(finalpaer) Then
	     WriteToReport micPass, "Last 4 digits of Credit Card Number "&cc4card&" are Numeric as expected "&chr(34)&""&finalpaer&""&chr(34)&"","Credit Card Number", false
	  Else
	     WriteToReport micFail, "Credit Card Number displayed is "&cc4card&" ","Credit Card Number, so failing the test case", true
	     Exit Function
	 End If

End If

  End If
 
End Function

'**************************************************************************************************************
''' <summary> 
''' VertexIntegration Function is to verify the BI10_01 Vertex integration
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change

Public Function VertexIntegration()

Dim i, bSetSecure, tcObjective, invoiceInfoArr, invNumValue, taxAmtValue, netPlusTaxValue, quantityValue, runStatus, verifytaxAmtValue, capturedQuantVal
    bSetSecure = False
	
	tcObjective ="Vertex Integration "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false

	
	if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
	    if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
	        Call WriteToReport(micPass, "Copy Single Bill", "Successfully Navigated to Copy Single Bill Page", False)
	     else
	        Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
	     End If 

	invoiceInfoArr = dbFetchVertexIntegration(GlobalDictionary("BusinessUnit"))
	
		If IsArrayEmpty(invoiceInfoArr) Then
		GlobalDictionary("dataAvailable") = false
		 Call WriteToReport(micDone, "WARNING :Business unit or Inovice ", "DB query returned zero records ",True)
		Exit function
		else
    GlobalDictionary("dataAvailable") = True      
    Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	setValue_WebEdit getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Value"),invoiceInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Description")        
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	
	if Browser("creationtime:=0").Page("index:=1").WebRadioGroup("html id:=BI_ADJ_WRK_BILL_ACTION\$4\$","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Copy Single Bill", "Copy Single Bill Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
        End If 
	Verify_ClickRadioBtn getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Description"),"CPY"	
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	
	If isObjectExist (getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")) = True Then
	     click_Link getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")
	End If
	
		if Browser("creationtime:=1").Page("index:=1").WebList("html id:=DERIVED_WORK_BI_PAGE_NAVIGATOR1","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Standard Billing", "Standard Billing Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Standard Billing", "Failed to load Standard Billing Page", True)
        End If 
	WebList_select getObjectInfoFromXML("LineInfo1_WebList", objectsFile, "Value"),"Line - Info 1", getObjectInfoFromXML("LineInfo1_WebList", objectsFile, "Description")
	Wait 15
	
	
	invNumValue = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=BI_HDR_INVOICE").GetROProperty("innertext")
	taxAmtValue = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=BI_LINE_TAX_AMT\$0").GetROProperty("innertext")
	netPlusTaxValue = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=DERIVED_WORK_BI_LINE_TOTAL\$0").GetROProperty("innertext")
	capturedQuantVal = Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_LINE_QTY\$0","index:=0").GetROProperty("default value")
	quantityValue = ""&getRandomNumber(3)	
	Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_LINE_QTY\$0","index:=0").Set quantityValue
	Call WriteToReport(micPass, "Quantity", "Successfully set value for Quantity from "&capturedQuantVal&" to the value is "&quantityValue&".0000", False)
	'setValue_WebEdit getObjectInfoFromXML("Quantity_WebEdit", objectsFile, "Value"),quantityValue,bSetSecure, getObjectInfoFromXML("Quantity_WebEdit", objectsFile, "Description")
	 btn_click  getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	
	element_dblClick getObjectInfoFromXML("HeaderInfo1_WebElement", objectsFile, "Value"), getObjectInfoFromXML("HeaderInfo1_WebElement", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("Status_WebEdit", objectsFile, "Value"),"RDY",bSetSecure, getObjectInfoFromXML("Status_WebEdit", objectsFile, "Description")
	btn_click  getObjectInfoFromXML("Save_Button_page1", objectsFile, "Value"), getObjectInfoFromXML("Save_Button_page1", objectsFile, "Description")
	Wait 5
	If isObjExistNOReport(getObjectInfoFromXML("Ok_Button2", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button2", objectsFile, "Description")) = True Then
click_Link  getObjectInfoFromXML("Ok_Button2", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button2", objectsFile, "Description")
End If 
Wait 5
	SelectMainMenu1(GlobalDictionary("MainMenuSelection2"))
	 if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Single Action Invoice", "Successfully Navigated to Single Action Invoice Page", False)
               else
            Call WriteToReport(micFail, "Single Action Invoice", "Failed to load Single Action Invoice Page", True)
     End If 
	
	btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	   Wait 3
    click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
     
	Verify_ClickRadioBtn getObjectInfoFromXML("ProcessingDate_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("ProcessingDate_RadioButton", objectsFile, "Description"),"P"
	Verify_ClickRadioBtn getObjectInfoFromXML("BatchStandard_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("BatchStandard_RadioButton", objectsFile, "Description"),"L"
	
	'Verify_ClickRadioBtn getObjectInfoFromXML("InvoiceId_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("InvoiceId_RadioButton", objectsFile, "Description"),"INV"

 	Browser("CreationTime:=0").Page("index:=1").WebRadioGroup("name:=RUN_BI_PRNTIVC_INVOICE_RANGE_OPT\$0").Select "INV"
 	call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_NONVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	setValue_WebEdit getObjectInfoFromXML("FromInvoice_WebEdit", objectsFile, "Value"),invNumValue,bSetSecure, getObjectInfoFromXML("FromInvoice_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("ToInvocie_WebEdit", objectsFile, "Value"),invNumValue,bSetSecure, getObjectInfoFromXML("ToInvocie_WebEdit", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
        
	Wait 5
        
     If IsObjectExist (getObjectInfoFromXML("BIJOB03_Process", objectsFile, "Value"), getObjectInfoFromXML("BIJOB03_Process", objectsFile, "Description")) = True Then
       
       check_CheckBox getObjectInfoFromXML("BIJOB03_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("BIJOB03_CheckBox", objectsFile, "Description") 
     End If 
        
     btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")           
        Wait 10
        Dim processInstance
        processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
     btn_click  getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
    if Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist Then
          Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
             else
          Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
    End If 
			
			
wait 3

getStatusupdateProcessTime "BIJOB03 - Single Action Invoice",split(processInstance,":")(1)
	
	
	
	SelectMainMenu1(GlobalDictionary("MainMenuSelection3"))
		 if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Details", "Successfully Navigated to Details Page", False)
               else
            Call WriteToReport(micFail, "Details", "Failed to load Details Page", True)
     End If 
	call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	setValue_WebEdit getObjectInfoFromXML("Invoice1_WebEdit", objectsFile, "Value"),invNumValue,bSetSecure, getObjectInfoFromXML("Invoice1_WebEdit", objectsFile, "Description")
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 5

      verifyValue getObjectInfoFromXML("VerifyStatus_WebElement", objectsFile, "Value"),"INV","innerhtml","Bill Status"
      
	
	Wait 10
	WebList_select getObjectInfoFromXML("LineInfo1Page0_WebList", objectsFile, "Value"),"Line - Info 1", getObjectInfoFromXML("LineInfo1Page0_WebList", objectsFile, "Description")
	Wait 10
	
	verifytaxAmtValue = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BI_LINE_TAX_AMT\$0").GetROProperty("innertext")
	
	If cdbl(taxAmtValue) <> cdbl(verifytaxAmtValue) Then 
   	 Call WriteToReport(micPass,"Tax Amount","The Tax amount "&taxAmtValue&" is changed to "&verifytaxAmtValue&"", False)
          else    
     Call WriteToReport(micFail,"Tax Amount","The Tax amount "&taxAmtValue&" didnot change and the value mathces is "&verifytaxAmtValue&"", True)
               
    End If
   
	
	End If
	
End Function

'**************************************************************************************************************
''' <summary> 
''' VerifyTaxPerDispBillInfoSummaryPage Function is to verify the BI17_01 Verify that Header Level Tax Percent is displayed on the Bill Info Summary Page
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function VerifyTaxPerDispBillInfoSummaryPage()
    
	Dim bSetSecure, tcObjective, invoiceInfoArr, taxAmtValue, taxPrectValue, grossExtendValue, taxpercntge
	Dim calculation1, calculation2,removePertax, rondedvalue, replacetaxAmtValue
    bSetSecure = False
	tcObjective ="Verify that Header Level Tax Percent is displayed on the Bill Info Summary Page "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
    if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
    if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Copy Single Bill", "Successfully Navigated to Copy Single Bill Page", False)
               else
            Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
     End If 

	invoiceInfoArr = dbFetchInvoicePerc(GlobalDictionary("BusinessUnit"))
	
	If IsArrayEmpty(invoiceInfoArr) Then
	GlobalDictionary("dataAvailable") = false
	Call WriteToReport(micFail, "Business unit or Inovice ", "DB query returned zero records ",True) 
	Exit function	
	else
	GlobalDictionary("dataAvailable") = True
      call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	setValue_WebEdit getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Value"),invoiceInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Description")     	 
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	
	if Browser("creationtime:=0").Page("index:=1").WebRadioGroup("html id:=BI_ADJ_WRK_BILL_ACTION\$4\$","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Copy Single Bill", "Copy Single Bill Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
        End If 
	Verify_ClickRadioBtn getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Description"),"CPY"	
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	
	If isObjectExist (getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")) = True Then
	     click_Link getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")
	End If
	
		if Browser("creationtime:=1").Page("index:=1").WebList("html id:=DERIVED_WORK_BI_PAGE_NAVIGATOR1","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Standard Billing", "Standard Billing Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Standard Billing", "Failed to load Standard Billing Page", True)
        End If 

      click_Link getObjectInfoFromXML("Summary_Link", objectsFile, "Value"), getObjectInfoFromXML("Summary_Link", objectsFile, "Description")

        if Browser("creationtime:=1").Page("index:=2").WebElement("innerhtml:=Bill Summary Info","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Bill Summary Page", "Bill Summary Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Bill Summary Page", "Failed to load Bill Summary Page", True)
        End If 
        
        
      element_Click getObjectInfoFromXML("BillSummaryInfo_Tab", objectsFile, "Value"), getObjectInfoFromXML("BillSummaryInfo_Tab", objectsFile, "Description")   

	taxAmtValue = invoiceInfoArr(4)	
	grossExtendValue = invoiceInfoArr(3)
	taxpercntge = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=CDW_TAX_PCT_CDW_TAX_PCT").GetROProperty("innertext") 
         removePertax = cdbl(Left(taxpercntge,4)) 
	calculation1 = cdbl(taxAmtValue) / cdbl(grossExtendValue) 	
	   	calculation2 = calculation1 * 100		   	
        rondedvalue= cdbl(FormatNumber(calculation2,2))       

  If cdbl(removePertax) = cdbl(rondedvalue) Then
        Call WriteToReport(micPass, "Tax percent on Bill Summary Info Tab", "Calculated Value "&rondedvalue&"% matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
         
     Elseif (CCur(removePertax)- CCur(rondedvalue))  = 0.02 or (CCur(removePertax)- CCur(rondedvalue))  = 0.01 or  (CCur(removePertax)- CCur(rondedvalue)) = -0.01 or (CCur(removePertax)- CCur(rondedvalue)) = -0.02 Then          
        Call WriteToReport(micPass, "Tax percent on Bill Summary Info Tab", "Calculated Value "&rondedvalue&"% Approximately matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
  Else
       Call WriteToReport(micFail, "Tax percent on Bill Summary Info Tab", "Calculated Value "&rondedvalue&"% doesnot match with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", True)
     End If	
End If

End Function




'**************************************************************************************************************
''' <summary> 
''' VerifyTaxPerDispRevBillInfo Function is to verify the BI17_02 Verify that Header Level Tax Percent is displayed on the Review Billing Information
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************


'15
Public Function VerifyTaxPerDispRevBillInfo()
'
'	Err.Clear
'    On Error Resume Next
    
	Dim bSetSecure, tcObjective, invoiceInfoArr, taxAmtValue, taxPrectValue, grossExtendValue, taxpercntge
	Dim calculation1, calculation2, removePertax, rondedvalue, replacetaxAmtValue
    bSetSecure = False
	tcObjective ="Verify that Header Level Tax Percent is displayed on the Review Billing Information "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
    if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
    
   
    invoiceInfoArr = dbFetchInvoicePerc(GlobalDictionary("BusinessUnit"))
	
	If IsArrayEmpty(invoiceInfoArr) Then
	GlobalDictionary("dataAvailable") = false
	 Call WriteToReport(micDone, "WARNING :Business unit or Inovice ", "DB query returned zero records ",True)   
	  Exit function
	else
	GlobalDictionary("dataAvailable") = True
	call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	setValue_WebEdit getObjectInfoFromXML("Invoice2_WebEdit", objectsFile, "Value"),invoiceInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice2_WebEdit", objectsFile, "Description")
        	 
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	
    
     if Browser("creationtime:=1").Page("index:=1").WebElement("html id:=BI_SUMMARY_WRK_SUM_TOT_TAXES").Exist(30) Then
            Call WriteToReport(micPass, "Summary Page", "Summary Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Summary Page", "Failed to load Summary Page", True)
        End If 
        
       element_Click getObjectInfoFromXML("BillSummaryInfo1_Tab", objectsFile, "Value"), getObjectInfoFromXML("BillSummaryInfo1_Tab", objectsFile, "Description")    
        

	taxAmtValue = invoiceInfoArr(4)	
	grossExtendValue = invoiceInfoArr(3)
	taxpercntge = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=CDW_TAX_PCT_CDW_TAX_PCT").GetROProperty("innertext")

    
         removePertax = cdbl(Left(taxpercntge,4)) 
'msgbox "removePertax " &removePertax

	calculation1 = cdbl(taxAmtValue) / cdbl(grossExtendValue) 
	'msgbox "calculation1 " &calculation1
	
	   	calculation2 = calculation1 * 100	
	   	'msgbox "calculation2 " &calculation2
	   	
        rondedvalue= cdbl(FormatNumber(calculation2,2))       
    


  If cdbl(removePertax) = cdbl(rondedvalue) Then
        Call WriteToReport(micPass, "Tax percent on Bill Summary Info Tab", "Calculated Value "&rondedvalue&"% matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
         
     Elseif (CCur(removePertax)- CCur(rondedvalue))  = 0.02 or (CCur(removePertax)- CCur(rondedvalue))  = 0.01 or  (CCur(removePertax)- CCur(rondedvalue)) = -0.01 or (CCur(removePertax)- CCur(rondedvalue)) = -0.02 Then           
        Call WriteToReport(micPass, "Tax percent on Bill Summary Info Tab", "Calculated Value "&rondedvalue&"% Approximately matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
  Else
       Call WriteToReport(micFail, "Tax percent on Bill Summary Info Tab", "Calculated Value "&rondedvalue&"% doesnot match with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", True)
     End If	
End If

'     on Error goto 0
End Function


'**************************************************************************************************************
''' <summary> 
''' VerifyTaxPerDispBillLineTaxInfo Function is to verify the BI17_03 Verify that Summarized Line Level Tax Percent is displayed on the Bill Line Tax Info Page
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function VerifyTaxPerDispBillLineTaxInfo()
'		Err.Clear
'    On Error Resume Next
    
	Dim bSetSecure, tcObjective, invoiceInfoArr, taxAmtValue, taxPrectValue, grossExtendValue, taxpercntge
	Dim calculation1, calculation2,removePertax, rondedvalue, replacetaxAmtValue, infoEachBillLine
    bSetSecure = False
	tcObjective ="Verify that Summarized Line Level Tax Percent is displayed on the Bill Line Tax Info Page "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
    if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
    
      if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Copy Single Bill", "Successfully Navigated to Copy Single Bill Page", False)
               else
            Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
     End If 

	invoiceInfoArr = dbFetchInvoicePerc(GlobalDictionary("BusinessUnit"))	
	If IsArrayEmpty(invoiceInfoArr) Then
	GlobalDictionary("dataAvailable") = false
	    Call WriteToReport(micDone, "WARNING :Business unit or Inovice ", "DB query returned zero records ",True)
	     Exit function
	      else
        GlobalDictionary("dataAvailable") = True    
      Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	    setValue_WebEdit getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Value"),invoiceInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Description")        
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	
	if Browser("creationtime:=0").Page("index:=1").WebRadioGroup("html id:=BI_ADJ_WRK_BILL_ACTION\$4\$","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Copy Single Bill", "Copy Single Bill Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
        End If 
	Verify_ClickRadioBtn getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Description"),"CPY"	
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	
	If isObjectExist (getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")) = True Then
	     click_Link getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")
	End If
	
		if Browser("creationtime:=1").Page("index:=1").WebList("html id:=DERIVED_WORK_BI_PAGE_NAVIGATOR1","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Standard Billing Page", "Standard Billing Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Standard Billing Page", "Failed to load Standard Billing Page", True)
        End If 

    WebList_select getObjectInfoFromXML("LineInfo1_WebList", objectsFile, "Value"),"Line - Info 1", getObjectInfoFromXML("LineInfo1_WebList", objectsFile, "Description")
	Wait 10


infoEachBillLine = dbFetchEachBillLine("1", invoiceInfoArr(1), GlobalDictionary("BusinessUnit"))	
	If NOT UBound(infoEachBillLine) = 0 Then 
         
	taxAmtValue = infoEachBillLine(5)	
	grossExtendValue = infoEachBillLine(3)
	taxpercntge = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=CDW_TAX_PCT_CDW_TAX_PCT\$0").GetROProperty("innertext") 
End If
         removePertax = cdbl(Left(taxpercntge,4)) 


	calculation1 = cdbl(taxAmtValue) / cdbl(grossExtendValue) 
	'msgbox "calculation1 " &calculation1
	
	   	calculation2 = calculation1 * 100	
	   	'msgbox "calculation2 " &calculation2
	   	
        rondedvalue= cdbl(FormatNumber(calculation2,2))       
        

  If cdbl(removePertax) = cdbl(rondedvalue) Then
        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab", "Calculated Value "&rondedvalue&"% matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
         
     Elseif (CCur(removePertax)- CCur(rondedvalue))  = 0.02 or (CCur(removePertax)- CCur(rondedvalue))  = 0.01 or  (CCur(removePertax)- CCur(rondedvalue)) = -0.01 or (CCur(removePertax)- CCur(rondedvalue)) = -0.02 Then          
        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab", "Calculated Value "&rondedvalue&"% Approximately matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
  Else
       Call WriteToReport(micFail, "Tax percent on Line - Info 1 Tab", "Calculated Value "&rondedvalue&"% doesnot match with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value(TOT_SU_TAX) = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value(INVOICE_AMT_PRETAX) = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", True)
     End If	
     
End If
' on Error goto 0
    
End Function

'**************************************************************************************************************
''' <summary> 
''' SumLineLvlTaxPerBillLineTaxInfoRevPage Function is to verify the BI17_04 Verify that Summarized Line Level Tax Percent is displayed on the Bill Line Tax Info Review Page 
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function SumLineLvlTaxPerBillLineTaxInfoRevPage() 
    
Dim bSetSecure, tcObjective, invoiceInfoArr, taxAmtValue, taxPrectValue, grossExtendValue, taxpercntge, LinetValue
Dim calculation1, calculation2, strFlag, rondedvalue, removePertax, replacetaxAmtValue, infoEachBillLine , seqLineVal
    bSetSecure = False
	tcObjective ="Verify that Summarized Line Level Tax Percent is displayed on the Bill Line Tax Info Page "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
 if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

    
      if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Details Page", "Successfully Navigated to Details Page", False)
               else
            Call WriteToReport(micFail, "Details Page", "Failed to load Details Page", True)
     End If 
     

	invoiceInfoArr = dbFetchInvoiceLine(GlobalDictionary("BusinessUnit"))	
	If IsArrayEmpty(invoiceInfoArr) Then
	GlobalDictionary("dataAvailable") = false
	   Call WriteToReport(micDone, "WARNING :Business unit or Inovice ", "DB query returned zero records ",True)
	   Exit function
	      else
      GlobalDictionary("dataAvailable") = True    
       Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	    setValue_WebEdit getObjectInfoFromXML("Invoice3_WebEdit", objectsFile, "Value"),invoiceInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice3_WebEdit", objectsFile, "Description")        
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	
	
		if Browser("creationtime:=0").Page("index:=1").WebList("html id:=DERIVED_WORK_BI_PAGE_NAVIGATOR2","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Details Page", "Details Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Details Page", "Failed to load Details Page", True)
        End If 

    WebList_select getObjectInfoFromXML("LineInfo12_WebList", objectsFile, "Value"),"Line - Info 1", getObjectInfoFromXML("LineInfo12_WebList", objectsFile, "Description")
	Wait 2
    
strFlag="True"
Do
If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BILL_LINE\$hdown\$0").Exist(2) Then

  '      LinetValue = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BI_LINE_INVOICE_LINE\$0").GetROProperty("innertext")	
		
             seqLineVal      = Trim(Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DERIVED_WORK_BI_BI_LINE_SEQ_NUM\$0").GetROProperty("innertext"))  
        
	infoEachBillLine = dbFetchEachBillLine(seqLineVal, invoiceInfoArr(1), GlobalDictionary("BusinessUnit"))	 ' as per Rini, updated line value with seq value
	If NOT UBound(infoEachBillLine) = 0 Then 
         
        taxAmtValue = infoEachBillLine(5)		
	    grossExtendValue = infoEachBillLine(3)
        taxpercntge = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_TAX_PCT_CDW_TAX_PCT\$0").GetROProperty("innertext")  
         
         
        End If 
              
      removePertax = cdbl(Left(taxpercntge,4)) 
'msgbox "removePertax " &removePertax

If taxAmtValue <> 0 Then
	


	calculation1 = cdbl(taxAmtValue) / cdbl(grossExtendValue) 
	'msgbox "calculation1 " &calculation1
	
	   	calculation2 = calculation1 * 100	
	   
	   	
        rondedvalue= cdbl(FormatNumber(calculation2,2))       
       

'		  If cdbl(removePertax) = cdbl(rondedvalue) Then
'		        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
'		         
'		     Elseif (CCur(removePertax)- CCur(rondedvalue))  = 0.02 or (CCur(removePertax)- CCur(rondedvalue))  = 0.01 or  (CCur(removePertax)- CCur(rondedvalue)) = -0.01 or (CCur(removePertax)- CCur(rondedvalue)) = -0.02 Then          
'		        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% Approximately matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
'		  Else
'		       Call WriteToReport(micFail, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% doesnot match with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", True)
'		     End If	
'		  
          If cdbl(removePertax) = cdbl(rondedvalue) Then
		        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
		         
		     Elseif (CCur(removePertax)- CCur(rondedvalue))  <= 0.1  or (CCur(removePertax)- CCur(rondedvalue)) <= -0.1 Then          
		        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% Approximately matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.1) ", False)
		  Else
		       Call WriteToReport(micFail, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% doesnot match with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.1) ", True)
		     End If	
		  
		
		     Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BILL_LINE\$hdown\$0").Click	  
		'Wait 5

	else
	   Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BILL_LINE\$hdown\$0").Click
	End If
Else
      LinetValue = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BI_LINE_INVOICE_LINE\$0").GetROProperty("innertext")	
		
		infoEachBillLine = dbFetchEachBillLine(LinetValue, invoiceInfoArr(1), GlobalDictionary("BusinessUnit"))	
	If NOT UBound(infoEachBillLine) = 0 Then 
         
        taxAmtValue = infoEachBillLine(5)		
	    grossExtendValue = infoEachBillLine(3)
        taxpercntge = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_TAX_PCT_CDW_TAX_PCT\$0").GetROProperty("innertext")  
        End If
        
      removePertax = cdbl(Left(taxpercntge,4)) 

	calculation1 = cdbl(taxAmtValue) / cdbl(grossExtendValue) 
		   	calculation2 = calculation1 * 100	
	        rondedvalue= cdbl(FormatNumber(calculation2,2))       
        
'  If cdbl(removePertax) = cdbl(rondedvalue) Then
'        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
'         
'     Elseif (CCur(removePertax)- CCur(rondedvalue))  = 0.02 or (CCur(removePertax)- CCur(rondedvalue))  = 0.01 or  (CCur(removePertax)- CCur(rondedvalue)) = -0.01 or (CCur(removePertax)- CCur(rondedvalue)) = -0.02 Then          
'        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% Approximately matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
'  Else
'       Call WriteToReport(micFail, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% doesnot match with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", True)
'     End If		
 
If cdbl(removePertax) = cdbl(rondedvalue) Then
		        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.02) ", False)
		         
		     Elseif (CCur(removePertax)- CCur(rondedvalue))  <= 0.1  or (CCur(removePertax)- CCur(rondedvalue)) <= -0.1 Then          
		        Call WriteToReport(micPass, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% Approximately matches with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.1) ", False)
		  Else
		       Call WriteToReport(micFail, "Tax percent on Line - Info 1 Tab for Bill Line "&LinetValue&"", "Calculated Value "&rondedvalue&"% doesnot match with Actual Value "&taxpercntge&" "&vbCr & vbLf&"Tax Amount Value = "&taxAmtValue&" "&vbCr & vbLf&" Gross Extended Value = "&grossExtendValue&" "&vbCr & vbLf&" Dividing TaxAmountValue/GrossExtendedValue = "&calculation1&" "&vbCr & vbLf&" Multiplying (TaxAmountValue/GrossExtendedValue)*100 = "&calculation2&" "&vbCr & vbLf&" Rounded to = "&rondedvalue&"% "&vbCr & vbLf&" Tax Percentage Value = "&taxpercntge&" "&vbCr & vbLf&"(NOTE: Comparison is done for Tax Percentage if is equal to expected Calculated amount; variance +/- 0.1) ", True)
		     End If	
		     
	strFlag = "False"
End If 
'End If'''
Loop until strFlag = "False"
End If
'     on Error goto 0
End Function

'**************************************************************************************************************
''' <summary> 
''' SumLineLvlTaxPerBillLineInfo1Page Function is to verify the BI17_05 Verify that Summarized Line Level Tax Percent is displayed on the Bill Line Info1 Page
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'12Feb2018			Eric Trout		updated to account for seq number that has no tax and is not found in query
'**************************************************************************************************************
Public Function SumLineLvlTaxPerBillLineInfo1Page() 
    
Dim bSetSecure, tcObjective, invoiceInfoArr, taxAmtValue, taxPrectValue, grossExtendValue, taxpercntge
Dim strFlag, seqvalue, rondedvalue, removePertax, replacetaxAmtValue, dbtaxper, infoEachBillLine
    bSetSecure = False
	tcObjective ="Verify that Summarized Line Level Tax Percent is displayed on the Bill Line Info1 Page "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
 if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
 
    if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Copy Single Bill", "Successfully Navigated to Copy Single Bill Page", False)
               else
            Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
     End If 

	invoiceInfoArr = dbFetchPercentage(GlobalDictionary("BusinessUnit"))	
	If IsArrayEmpty(invoiceInfoArr) Then
	   GlobalDictionary("dataAvailable") = false
	    Call WriteToReport(micDone, "WARNING :Business unit or Inovice ", "DB query returned zero records ",True) 
	    Exit function
	      else
        GlobalDictionary("dataAvailable") = True 
       Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
	    setValue_WebEdit getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Value"),invoiceInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Description")        
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	
	if Browser("creationtime:=0").Page("index:=1").WebRadioGroup("html id:=BI_ADJ_WRK_BILL_ACTION\$4\$","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Copy Single Bill", "Copy Single Bill Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Copy Single Bill", "Failed to load Copy Single Bill Page", True)
        End If 
	Verify_ClickRadioBtn getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("Cobybill_RadioButton", objectsFile, "Description"),"CPY"	
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	
	If isObjectExist (getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")) = True Then
	     click_Link getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Value"), getObjectInfoFromXML("GoToBillHeader_Link", objectsFile, "Description")
	End If
	
		if Browser("creationtime:=1").Page("index:=1").WebList("html id:=DERIVED_WORK_BI_PAGE_NAVIGATOR1","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Standard Billing Page", "Standard Billing Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Standard Billing Page", "Failed to load Standard Billing Page", True)
        End If 

    WebList_select getObjectInfoFromXML("LineInfo1_WebList", objectsFile, "Value"),"Line - Info 1", getObjectInfoFromXML("LineInfo1_WebList", objectsFile, "Description")
	Wait 5
    
  click_Link getObjectInfoFromXML("Tax_Link", objectsFile, "Value"), getObjectInfoFromXML("Tax_Link", objectsFile, "Description")
  Wait 5
 

 strFlag="True"
 Dim invoiceNum
Do
If Browser("creationtime:=1").Page("index:=1").WebElement("html id:=\$ICField4\$hdown\$0").Exist(2) Then

 taxpercntge = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=CDW_TAX_PCT_CDW_TAX_PCT\$0").GetROProperty("innertext")
 seqvalue = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=DERIVED_WORK_BI_BI_LINE_SEQ_NUM\$0").GetROProperty("innertext")
invoiceNum = Trim(Browser("creationtime:=1").Page("index:=1").WebElement("html id:=BI_HDR_INVOICE").GetROProperty("innertext"))

	If TRIM(taxpercntge) <> "0.00%" Then
		
	
		infoEachBillLine = dbFetchEachBillLine1(seqvalue, invoiceNum, GlobalDictionary("BusinessUnit"))	
		If IsArrayEmpty(infoEachBillLine) Then
			   GlobalDictionary("dataAvailable") = false
			    Call WriteToReport(micDone, "WARNING :Business unit or Inovice ", "DB query returned zero records ",True) 
			    Exit function
		else
		        GlobalDictionary("dataAvailable") = True 
		      ' Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", invoiceInfoArr(0),"Business Unit")
			  '  setValue_WebEdit getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Value"),invoiceInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice_WebEdit", objectsFile, "Description")        
		End If
			If NOT UBound(infoEachBillLine) = 0 Then 
		  
				dbtaxper = cdbl(FormatNumber(infoEachBillLine(3),2))
				removePertax = cdbl(Left(taxpercntge,4)) 
			End If
		
		
			If cdbl(dbtaxper) = cdbl(removePertax) Then 
		   	    Call WriteToReport(micPass, "Tax percent on Line - Tax Info Tab for Seq "&seqvalue&"", "Database Value(TAX_PCT) "&dbtaxper&"% matches with Actual Value "&taxpercntge&"", False)
		  	Else
		    	Call WriteToReport(micFail, "Tax percent on Line - Tax Info Tab for Seq "&seqvalue&"", "Database Value(TAX_PCT) "&dbtaxper&"% does not matches with Actual Value "&taxpercntge&"", True)
		    End If	
	Else
        Call WriteToReport(micWarning, "Tax percent on Line - Tax Info Tab for Seq "&seqvalue&"", "Tax percentage shows [" & TRIM(taxpercntge) &"]", False)
	End If			  
		
		     Browser("creationtime:=1").Page("index:=1").WebElement("html id:=\$ICField4\$hdown\$0").Click	  
		Wait 10
	
Else
		taxpercntge = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=CDW_TAX_PCT_CDW_TAX_PCT\$0").GetROProperty("innertext")
		 seqvalue = Browser("creationtime:=1").Page("index:=1").WebElement("html id:=DERIVED_WORK_BI_BI_LINE_SEQ_NUM\$0").GetROProperty("innertext")
		 
		 infoEachBillLine = dbFetchEachBillLine1(seqvalue, invoiceInfoArr(1), GlobalDictionary("BusinessUnit"))	
			If NOT UBound(infoEachBillLine) = 0 Then 
		  
		  dbtaxper = cdbl(FormatNumber(infoEachBillLine(3),2))
		removePertax = cdbl(Left(taxpercntge,4)) 
		End If
		 
		  dbtaxper = cdbl(FormatNumber(invoiceInfoArr(3),2))
		removePertax = cdbl(Left(taxpercntge,4)) 
		
			If cdbl(dbtaxper) = cdbl(removePertax) Then 
		   	    Call WriteToReport(micPass, "Tax percent on Line - Tax Info Tab for Seq "&seqvalue&"", "Database Value(TAX_PCT) "&dbtaxper&"% matches with Actual Value "&taxpercntge&"", False)
		  Else
		    Call WriteToReport(micFail, "Tax percent on Line - Tax Info Tab for Seq "&seqvalue&"", "Database Value(TAX_PCT) "&dbtaxper&"% does not matches with Actual Value "&taxpercntge&"", True)
		     End If	
		 
		
			strFlag = "False"
End If 

Loop until strFlag = "False"
	End If
	
End Function

'**************************************************************************************************************
''' <summary> 
''' RevCustCCTransHis Function is to verify the AR11_03 Review Customer CC transaction history
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function RevCustCCTransHis()
  
Dim bSetSecure, tcObjective, ccTranHisInfoArr
    bSetSecure = False
	tcObjective ="Review Customer Credit Card Transcation History "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
 if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
 
 
  if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Review Transaction History", "Successfully Navigated to Review Transaction History Page", False)
               else
            Call WriteToReport(micFail, "Review Transaction History", "Failed to load Review Transaction History Page", True)
     End If 

	ccTranHisInfoArr = dbFetchCreditCardTranHis(GlobalDictionary("BusinessUnit"))	
	
	If IsArrayEmpty(ccTranHisInfoArr) Then
	GlobalDictionary("dataAvailable") = false
	      Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
	        Exit function
	      Else
        GlobalDictionary("dataAvailable") = True
       Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", ccTranHisInfoArr(0),"Business Unit")
	    setValue_WebEdit getObjectInfoFromXML("Invoice4_WebEdit", objectsFile, "Value"),ccTranHisInfoArr(1),bSetSecure, getObjectInfoFromXML("Invoice4_WebEdit", objectsFile, "Description")         	 
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	
	if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CRCARD_HST_CR_CARD_AUTH_STAT\$0").Exist(30) Then
            Call WriteToReport(micPass, "Review Transaction History", "Review Transaction History Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Review Transaction History", "Failed to load Review Transaction History Page", True)
     End If 
	
  If ccTranHisInfoArr(6) = "M"  Then
	verifyValue getObjectInfoFromXML("AuthStatus_WebElement", objectsFile, "Value"),"Manually Approved/Settled","innerhtml","Auth Status"
      else
    verifyValue getObjectInfoFromXML("AuthStatus_WebElement", objectsFile, "Value"),"Change to Terms","innerhtml","Auth Status"
             
 End If 
             
  
 If TRIM(ccTranHisInfoArr(7)) = GlobalDictionary("databaseCC")  Then
	verifyValue getObjectInfoFromXML("CCNumb_WebElement", objectsFile, "Value"),GlobalDictionary("appCC"),"innerhtml","Encrypted Credit Card Number"
      elseif TRIM(ccTranHisInfoArr(7)) = "3456"  Then
    verifyValue getObjectInfoFromXML("CCNumb_WebElement", objectsFile, "Value"),"XXXXXXXXXXXX3456","innerhtml","Encrypted Credit Card Number"
      else   
verifyValue getObjectInfoFromXML("CCNumb_WebElement", objectsFile, "Value"),"XXXXXXXXXXXX4444","innerhtml","Encrypted Credit Card Number"	  
 End If 

 verifyValue getObjectInfoFromXML("FirstName_WebElement", objectsFile, "Value"),Trim(ccTranHisInfoArr(12)),"innerhtml","First Name"
 verifyValue getObjectInfoFromXML("LastName_WebElement", objectsFile, "Value"),Trim(ccTranHisInfoArr(13)),"innerhtml","Last Name"
 
Dim spl, result, amount, rep, lengthofamount,amt , amtVal
rep = ccTranHisInfoArr(9)
amount = ccUR(Replace(ccTranHisInfoArr(9),",",""))
spl = UBOUND(split(amount,"."))
Set amt = eval( getObjectInfoFromXML("Amount_WebElement", objectsFile, "Value"))
     amtVal = amt.getroproperty("innerhtml")
     If CDbl(amtVal) = cdbl(amount) Then
     	  Call WriteToReport(micPass,"Amount value ","The expected value " &amount&" does  match with actual value" &amtVal, False)
      else
          Call WriteToReport(micFail,"Amount value ","The expected value " &amount&" does not match with actual value" &amtVal,False)      
     End If
 verifyValue getObjectInfoFromXML("ExpMonth_WebElement", objectsFile, "Value"),ccTranHisInfoArr(10),"innerhtml","Expiration Month"
 verifyValue getObjectInfoFromXML("ExpYear_WebElement", objectsFile, "Value"),ccTranHisInfoArr(11),"innerhtml","Expiration Year" 
 
 	End If
	
End Function


'**************************************************************************************************************
''' <summary> 
''' FinzBillCredEntireBill Function is to verify the BI03_01 Finalized Bill - Credit Entire Bill
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************

Public Function FinzBillCredEntireBill()
'	Err.Clear
'    On Error Resume Next  
Dim bSetSecure, tcObjective, CredEntireBill, invoice1, inovice2
    bSetSecure = False
	tcObjective ="Finalized Bill - Credit Entire Bill "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
 if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
 
      if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Adjust Entire Bill Page", "Successfully Navigated to Adjust Entire Bill Page", False)
               else
            Call WriteToReport(micFail, "Adjust Entire Bill Page", "Failed to load Adjust Entire Bill Page", True)
      End If 
      

	CredEntireBill = dbFetchFinzBillCredEntireBill(GlobalDictionary("BusinessUnit"))	
	If  IsArrayEmpty(CredEntireBill) Then
	   GlobalDictionary("dataAvailable") = false
	   Call WriteToReport(micDone, "WARNING :Business unit or Inovice ", "DB query returned zero records ",False) 
        Exit function	   
	      else
       GlobalDictionary("dataAvailable") = True   
       Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", CredEntireBill(0),"Business Unit")
	    setValue_WebEdit getObjectInfoFromXML("Invoice5_WebEdit", objectsFile, "Value"),CredEntireBill(2),bSetSecure, getObjectInfoFromXML("Invoice5_WebEdit", objectsFile, "Description")        
	End If
	
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description") 
    Verify_ClickRadioBtn getObjectInfoFromXML("BillAdjAction_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("BillAdjAction_RadioButton", objectsFile, "Description"),"CRB" 
   Call click_Lookup_Img_And_Select_Item("Look up Adjustment Reason.*","BI_CR_RSN_VW_REASON_CD","RBT","Adjustment Reason")
   Verify_ClickRadioBtn getObjectInfoFromXML("RebillDefAction_RadioButton", objectsFile, "Value"), getObjectInfoFromXML("RebillDefAction_RadioButton", objectsFile, "Description"),"ORIG"
   btn_click  getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
   Wait 5
   invoice1 = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=BI_ADJ_WRK_ADJ_INVOICE1","index:=0").GetROProperty("value")
   Call WriteToReport(micPass, "Captured Credit Bill Invoice","Captured Credit Bill Invoice value is "&invoice1&"", False)
   inovice2 = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=BI_ADJ_WRK_ADJ_INVOICE2","index:=0").GetROProperty("value")
   Call WriteToReport(micPass, "Captured Rebill Bill Invoice","Captured Rebill Bill Invoice value is "&inovice2&"", False)
 
    click_Link getObjectInfoFromXML("Invoice1_Link", objectsFile, "Value"), getObjectInfoFromXML("Invoice1_Link", objectsFile, "Description")
     
 	if Browser("creationtime:=1").Page("index:=1").WebList("html id:=DERIVED_WORK_BI_PAGE_NAVIGATOR1","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Standard Billing Page", "Standard Billing Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Standard Billing Page", "Failed to load Standard Billing Page", True)
        End If 
 
   element_dblClick getObjectInfoFromXML("HeaderInfo1_WebElement", objectsFile, "Value"), getObjectInfoFromXML("HeaderInfo1_WebElement", objectsFile, "Description") 
	verifyValue getObjectInfoFromXML("Status_WebEdit", objectsFile, "Value"),"RDY","default value","Bill Status" 
   Browser("creationtime:=1").WinObject("nativeclass:=window","index:=0").WinButton("nativeclass:=push button","index:=0").Click
 
   click_Link getObjectInfoFromXML("Invoice2_Link", objectsFile, "Value"), getObjectInfoFromXML("Invoice2_Link", objectsFile, "Description")
  
 if Browser("creationtime:=1").Page("index:=1").WebList("html id:=DERIVED_WORK_BI_PAGE_NAVIGATOR1","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Standard Billing Page", "Standard Billing Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Standard Billing Page", "Failed to load Standard Billing Page", True)
        End If 
 
 
    element_dblClick getObjectInfoFromXML("HeaderInfo1_WebElement", objectsFile, "Value"), getObjectInfoFromXML("HeaderInfo1_WebElement", objectsFile, "Description") 
	verifyValue getObjectInfoFromXML("Status_WebEdit", objectsFile, "Value"),"NEW","default value","Bill Status" 
 
 
	End If
	'on Error goto 0
End Function

'**************************************************************************************************************
''' <summary> 
''' RfndCrdBalCC Function is to verify the AR11_11 Refund Credit Balance to Credit Card
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function RfndCrdBalCC()
	'	Err.Clear
'    On Error Resume Next  
	Dim bSetSecure, tcObjective, RfndCC
    bSetSecure = False
	tcObjective ="Refund Credit Balance to Credit Card "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) Then
	else
   		Call WriteToReport(micFail, "Navigation failed", "Navigation failed so failing the test case", True)
        Exit function
	End If

 	if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Add a New Value","index:=0").Exist(60) then
        if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Add a New Value","index:=0").Exist(10) Then
            Call WriteToReport(micPass, "Create Worksheet Page", "Successfully Navigated to Create Worksheet Page", False)
       	else
            Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
            Exit function
        End If 
	
		Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
		btn_click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"), getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Description")
		Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
		RfndCC = dbFetchRfndCrdBalCC(GlobalDictionary("BusinessUnit"))		     
		If IsArrayEmpty(RfndCC) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Deposit unit or Customer", "DB query returned zero records ",True)
			Exit function	        
		else    
			GlobalDictionary("dataAvailable") = True                 
			Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_CLSVW_DEPOSIT_BU", RfndCC(0),"Deposit Unit")
			'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_NONVW_DEPOSIT_BU", RfndCC(0),"Deposit Unit")
			Call click_Lookup_Img_And_Select_Item("Look up Bill To Customer.*","CUST_BI_VW_CUST_ID", RfndCC(1),"Bill To Customer") 
			Browser("title:=Create Worksheet").page("title:=Create Worksheet").WebButton("html id:=#ICSearch", "name:=Add").Click
		End If

		if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
            Call WriteToReport(micPass, "Create Worksheet Page", "Create Worksheet Page loaded Successfully", False)
        else
            Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
        End If
 
		'call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_CLSVW_CUST_ID", RfndCC(1),"Customer ID")
		If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ID_CUST_CUST_ID\$0").Exist(30) Then
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ID_CUST_CUST_ID\$0").Set RfndCC(1)
			Call WriteToReport(micPass, "Custome ID ", "Customer ID is successfully set to "&RfndCC(1), False)
		else
			Call WriteToReport(micFail, "Custome ID ", "Customer ID is not displayed ", True) 
		End If
 
		WebList_select getObjectInfoFromXML("Reference_Criteria1", objectsFile, "Value"),"Specific Value", getObjectInfoFromXML("Reference_Criteria1", objectsFile, "Description")
		Call click_Lookup_Img_And_Select_Item("Look up Qual Code.*","AR_FLD_REF_VW_REF_QUALIFIER_CODE","I","Qual Code")
		call click_Lookup_Img_And_Select_Item("Look up Reference.*","ITEM_ITM2_CLSVW_ITEM", RfndCC(2),"ITEM")

		' btn_click getObjectInfoFromXML("Build1_Button", objectsFile, "Value"), getObjectInfoFromXML("Build1_Button", objectsFile, "Description")
		if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
			Call WriteToReport(micPass, "Build button", "Build button is loaded Successfully", False)
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Click
		else
			Call WriteToReport(micFail, "Build button", "Failed to load Build button", True)
		End If 
 
		if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Exist(30) Then
			Call WriteToReport(micPass, "Credit Card Worksheet Application Page", "Credit Card Worksheet Application Page loaded Successfully", False)
		else
			Call WriteToReport(micFail, "Credit Card Worksheet Application Page", "Failed to load Credit Card Worksheet Application Page", True)
		End If 
 
 ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
 Dim itemIDDefaultVal, isExpectedItemIDExist , itemRow
 
 'itemIDDefaultVal = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$0").GetROProperty("default value") 
	if NOT (verifyItemIDVal(RfndCC(2))) then
		itemRow = getRowNumberForNewItem()
		If Not isempty(itemRow) Then

			'Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
			Browser("creationtime:=0").Page("index:=1").Image("name:=ITEM\$prompt\$img\$"&itemRow).click
			wait 5
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(RfndCC(2))
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
			If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(RfndCC(2))).exist(5) Then
				Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(RfndCC(2))).click
			else
				Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&RfndCC(2)&" is not selected",True)     
			End If

			'  Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$"&itemRow).Set RfndCC(2) PAYMENT_ITEM_ITEM$prompt$img$1 ITEM_ITEM2_VW_ITEM
			If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
				Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&RfndCC(2)&" is selected", False)
			else
				Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
			End If
		else
			Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_ITEM\$newm\$0\$\$0").Click
			wait 3
			Browser("creationtime:=0").Dialog("text:=cdw.com needs some information").WinButton("regexpwndtitle:=OK").Click
			wait 3
			itemRow = getRowNumberForNewItem()
			'   call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM", RfndCC(2),"Item ID in Detail 1 Tab")
			Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(RfndCC(2))
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
			If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(RfndCC(2))).exist(5) Then
				Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(RfndCC(2))).click
			else
				Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&RfndCC(2)&" is not selected",True)     
			End If

			'  Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$"&itemRow).Set RfndCC(2) PAYMENT_ITEM_ITEM$prompt$img$1 ITEM_ITEM2_VW_ITEM
			If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
				Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&RfndCC(2)&" is selected", False)
			else
				Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
			End If	 
		End If
	Else
		If  Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&Trim(RfndCC(2))).exist Then
			Dim rNum
			rNum = Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&Trim(RfndCC(2))).getroproperty("html id")
			If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).GetROProperty("checked") = 1 Then
				Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&RfndCC(2)&" is selected", False)
			else
				Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).Click 
			End If
		Else
			itemRow = getRowNumberForNewItem()
			'   call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM", RfndCC(2),"Item ID in Detail 1 Tab")
			Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(RfndCC(2))
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
			If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(RfndCC(2))).exist(5) Then
				Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(RfndCC(2))).click
			else
				Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&RfndCC(2)&" is not selected",True)     
			End If

			If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
				Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&RfndCC(2)&" is selected", False)
			else
				Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
			End If
		End If
	End If

	 	''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
		wait 5
		click_Link getObjectInfoFromXML("CreditCardDetails_Link", objectsFile, "Value"), getObjectInfoFromXML("CreditCardDetails_Link", objectsFile, "Description")
		wait 15
		WebList_select getObjectInfoFromXML("CCType_WebList", objectsFile, "Value"),GlobalDictionary("CreditCardType"), getObjectInfoFromXML("CCType_WebList", objectsFile, "Description")
		wait 5
		setValue_WebEdit getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Value"),GlobalDictionary("CreditCardNumber"),bSetSecure, getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Value"),GlobalDictionary("ExpiryMonth"),bSetSecure, getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Value"),GlobalDictionary("Expiryyear"),bSetSecure, getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Value"),GlobalDictionary("CreditCardFirstName"),bSetSecure, getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Value"),GlobalDictionary("CreditCardLastName"),bSetSecure, getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Value"),GlobalDictionary("EMAIL"),bSetSecure, getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Value"),GlobalDictionary("Phone"),bSetSecure, getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Description") 
		wait 8 
		WebList_select getObjectInfoFromXML("CCAction_WebList", objectsFile, "Value"),"Authorize and Settle Later", getObjectInfoFromXML("CCAction_WebList", objectsFile, "Description")
		btn_click getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Value"), getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Description")
		Wait 5 
		click_Link getObjectInfoFromXML("RtnUpdateWrksht_Link", objectsFile, "Value"), getObjectInfoFromXML("RtnUpdateWrksht_Link", objectsFile, "Description")
	End If
 'on Error goto 0
End Function


'**************************************************************************************************************
''' <summary> 
''' PayMulItemsbyCC Function is to verify the AR11_10 Pay Multiple Items by Credit Card
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function PayMulItemsbyCC()
	'	Err.Clear
'    On Error Resume Next  
Dim bSetSecure, tcObjective, MulItemsbyCC , itemsCount
    bSetSecure = False
	tcObjective ="Pay Multiple AR Items by Credit Card "   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
 if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then	
 
  
        if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist(30) Then
            Call WriteToReport(micPass, "Collections Workbench Page", "Successfully Navigated to Collections Workbench Page", False)
               else
            Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
        End If      
        
         ''''''' to make sure that customet has more than one item to pay by by CC - venu 08/18
         
         itemsCount = (noOfItemsCount(GlobalDictionary("BusinessUnit")))
          If NOT IsArrayEmpty(itemsCount) Then
          	
         
        
			 MulItemsbyCC = dbFetchPayMulItemsbyCC(GlobalDictionary("BusinessUnit"), itemsCount(1))		     
			 If IsArrayEmpty(MulItemsbyCC) Then
			     GlobalDictionary("dataAvailable") = false
			 	   Call WriteToReport(micDone, "WARNING :Deposit unit or Customer", "DB query returned zero records ",True)
			 	   Exit function
				   else
			      GlobalDictionary("dataAvailable") = True  
			    call click_Lookup_Img_And_Select_Item("Look up SetID.*","SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"),"SetID")
				call click_Lookup_Img_And_Select_Item("Look up Unit.*","SP_BU_CS2_CLSVW_BUSINESS_UNIT",GlobalDictionary("BusinessUnit"),"BusinessUnit")
				call click_Lookup_Img_And_Select_Item("Look up Customer.*","AR_CUST_ALL_VW_CUST_ID",itemsCount(1),"Customer ID")	    
			 End If
		  else
             Call WriteToReport(micDone, "WARNING :Count of items records not more than 1", "DB query returned zero records ",True)
			 	   Exit function		  
        End If
         
         '''''''''''''''''''''''''''''''''''''''''''''''''
 btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
 
       if Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Items","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
        End If 
  element_dblClick getObjectInfoFromXML("Items_WebElement", objectsFile, "Value"), getObjectInfoFromXML("Items_WebElement", objectsFile, "Description")
 
 WebList_select getObjectInfoFromXML("CWItemStatus_WebList", objectsFile, "Value"),"Open", getObjectInfoFromXML("CWItemStatus_WebList", objectsFile, "Description")
  btn_click  getObjectInfoFromXML("Go_Button", objectsFile, "Value"), getObjectInfoFromXML("Go_Button", objectsFile, "Description")
 
 '''''''  selecting the only items that belong to selected cust ID - venu 08/18
  Dim i , item , itemselected
  

  	 itemselected = 0
  	 For i = 1 To UBound(MulItemsbyCC) Step 1
  	 set	  item = Browser("creationtime:=0").page("index:=1").Link("innertext:="&Trim(MulItemsbyCC(i)))
  	 	  If item.exist Then 
  	 	  	 Browser("creationtime:=0").page("index:=1").WebCheckBox("html id:=SELECT_CB\$"&i-1).Set "ON"
  	 	  	 itemselected = itemselected + 1
  	 	  	 
  	 	  End If
  	 	  
  	 	  If itemselected = 2 Then
  	 	  	 Exit for
  	 	  End If
  	 Next

  'check_CheckBox getObjectInfoFromXML("Item1_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Item1_Checkbox", objectsFile, "Description")
  
  'check_CheckBox getObjectInfoFromXML("Item2_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Item2_Checkbox", objectsFile, "Description")
  
  
wait 5
' btn_click  getObjectInfoFromXML("SelectAll_Button", objectsFile, "Value"), getObjectInfoFromXML("SelectAll_Button", objectsFile, "Description")
 WebList_select getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Value"),"Pay by Credit Card", getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Description")
 wait 4
  btn_click  getObjectInfoFromXML("Go1_Button", objectsFile, "Value"), getObjectInfoFromXML("Go1_Button", objectsFile, "Description")
 
 Wait 3
 If Browser("creationtime:=0").page("index:=1").WebElement("innertext:=Credit Card Details","index:=2").Exist(50) Then
	 WebList_select getObjectInfoFromXML("CCType_WebList", objectsFile, "Value"),"MASTERCARD", getObjectInfoFromXML("CCType_WebList", objectsFile, "Description")
	 setValue_WebEdit getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Value"),"540501RXOYUC0016",bSetSecure, getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Description")
	 setValue_WebEdit getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Value"),"01",bSetSecure, getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Description")
	 setValue_WebEdit getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Value"),"2019",bSetSecure, getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Description")
	 setValue_WebEdit getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Value"),"John",bSetSecure, getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Description")
	 setValue_WebEdit getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Value"),"Smith",bSetSecure, getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Description")
	 setValue_WebEdit getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Value"),"qatester@cdw.com",bSetSecure, getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Description")
	 setValue_WebEdit getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Value"),"123-4567",bSetSecure, getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Description")
else
    Call WriteToReport(micFail, "Credit Card Details", "Credit Card Details window is not displayed", True)
    Exit function
End If
 btn_click  getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Description")  
 WebList_select getObjectInfoFromXML("CCAction_WebList", objectsFile, "Value"),"Authorize and Settle Later", getObjectInfoFromXML("CCAction_WebList", objectsFile, "Description")
 btn_click  getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Value"), getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Description")
 Wait 5 
 click_Link getObjectInfoFromXML("RtnCW_Link", objectsFile, "Value"), getObjectInfoFromXML("RtnCW_Link", objectsFile, "Description")
 
 
   
  check_CheckBox getObjectInfoFromXML("Item1_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Item1_Checkbox", objectsFile, "Description")
  
  check_CheckBox getObjectInfoFromXML("Item2_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Item2_Checkbox", objectsFile, "Description")
 
 ' btn_click  getObjectInfoFromXML("SelectAll_Button", objectsFile, "Value"), getObjectInfoFromXML("SelectAll_Button", objectsFile, "Description")
 WebList_select getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Value"),"Pay by Credit Card", getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Description")
  btn_click  getObjectInfoFromXML("Go1_Button", objectsFile, "Value"), getObjectInfoFromXML("Go1_Button", objectsFile, "Description")
 Wait 5
  btn_click  getObjectInfoFromXML("CWOk_Button", objectsFile, "Value"), getObjectInfoFromXML("CWOk_Button", objectsFile, "Description") 
 
	End If
	 'on Error goto 0
End Function


'**************************************************************************************************************
''' <summary> 
''' Bill To Media - Validates the flag that Indicates which Invoice will be sent to BillTrust
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function billtoMediaBillTrust()
Dim srtBusinessValue,strSQL,cust_id,sConnectionString,sheetName,arrRecordValues,getObjectFromXML,invoice,billtrust

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", "Bill To Media - Indicates invoice to be sent to BillTrust", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")
billtrust=dbgetBillTrust(GlobalDictionary("BusinessUnit"))
If  IsArrayEmpty(billtrust) Then
        GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If

	invoice= billtrust(3)
	cust_id = billtrust(4)
	
setValue_WebEdit getObjectInfoFromXML("Businessunit_BillTrust", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Businessunit_BillTrust", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_BillTrust", objectsFile, "Value"),invoice,false, getObjectInfoFromXML("Invoice_BillTrust", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Customer_BillTrust", objectsFile, "Value"),cust_id,false, getObjectInfoFromXML("Customer_BillTrust", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")

If Browser("creationtime:=0").Page("index:=1").WebList("name:=DERIVED_WORK_BI_PAGE_NAVIGATOR2").Exist(30) Then

WebList_select getObjectInfoFromXML("NavWebList_BillTrust", objectsFile, "Value"),"Address Info", ("Address Info option selected from the Navigation WebList")
Dim invoice_Media,objinvoice_Media,uiinvoice_Media,uiinvoice_Media1
invoice_Media=billtrust(0)
Set objinvoice_Media = eval(getObjectInfoFromXML("InvoiceMedia_WebElement", objectsFile, "Value"))
uiinvoice_Media =objinvoice_Media.getROProperty("innertext")
uiinvoice_Media1=Left(uiinvoice_Media,1)

If  invoice_Media=uiinvoice_Media1  Then
Call WriteToReport (micPass, "Invoice Media   is  "&invoice_Media&"-"&chr(34)&" "&uiinvoice_Media&" "&chr(34)&" Matching the Expected Value "&chr(34)&""&invoice_Media&""&chr(34)&"", "Invoice Media is Validated successfully", False)
        Else
Call WriteToReport (micFail, "Invoice Media  is not Validated", " Validation of  Invoice Media is failed", False)
End If
	
End If 
   End If
	
End Function
'**************************************************************************************************************
''' <summary> 
''' Bill To media - Indicates invoice to be sent to EDI Partner
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************

Public Function billtoMediaEDIPartner()
Dim srtBusinessValue,strSQL,cust_id,sConnectionString,sheetName,arrRecordValues,getObjectFromXML,invoice

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")
strSQL ="select BILL_TO_MEDIA, ACCOUNTING_DT, * from PS_BI_HDR WHERE BILL_TO_MEDIA = 'E'"
Call  WriteToReport (micPass, "Query for Customer ID", ""&strSQL&"", False)
	sConnectionString = PSFCONNECTIONSTR
	sheetName = "Invoice Details"
	Call dbGetFirstRecord(strSQL,sConnectionString,arrRecordValues,sheetName )
	
	invoice= DataTable.Value("INVOICE", "Invoice Details")
	cust_id = DataTable.Value("BILL_TO_CUST_ID", "Invoice Details")
If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Bill Inquiry","html tag:=H1").Exist Then
   Call WriteToReport (micPass,"Bill Inquiry Page","Bill Inquiry Page is Loaded Successfully", False)
		Else
   Call WriteToReport (micFail, "Bill Inquiry Page", "Bill Inquiry Page is not Loaded Successfully", True)
End If	
setValue_WebEdit getObjectInfoFromXML("Businessunit_BillTrust", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Businessunit_BillTrust", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_BillTrust", objectsFile, "Value"),invoice,false, getObjectInfoFromXML("Invoice_BillTrust", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Customer_BillTrust", objectsFile, "Value"),cust_id,false, getObjectInfoFromXML("Customer_BillTrust", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
WebList_select getObjectInfoFromXML("NavWebList_BillTrust", objectsFile, "Value"),"Address Info", ("Address Info option selected from the Navigation WebList")
Dim invoice_Media,objinvoice_Media,uiinvoice_Media,uiinvoice_Media1
invoice_Media=DataTable.Value("BILL_TO_MEDIA", "Invoice Details")
Set objinvoice_Media = eval(getObjectInfoFromXML("InvoiceMedia_WebElement", objectsFile, "Value"))
uiinvoice_Media =objinvoice_Media.getROProperty("innertext")
uiinvoice_Media1=Left(uiinvoice_Media,1)
If  invoice_Media=uiinvoice_Media1  Then
Call WriteToReport (micPass, "Invoice Media   is  "&invoice_Media&"-"&chr(34)&" "&uiinvoice_Media&" "&chr(34)&" Matching the Expected Value "&chr(34)&""&invoice_Media&""&chr(34)&"", "Invoice Media is Validated successfully", False)
        Else
Call WriteToReport (micFail, "Invoice Media  is not Validated", " Validation of  Invoice Media is failed", False)
End If
	
End If 
	
End Function
'**************************************************************************************************************
''' <summary> 
''' Verify Invoice Reprint from Collections Workbench -- 03 RBT
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function verifyInvoiceReprint03RBT()
Dim srtBusinessValue,strSQL,cust_id,sConnectionString,sheetName,arrRecordValues,getObjectFromXML,invoice,invRBT

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
wait 5
element_dblClick getObjectInfoFromXML("CollectionsWorkBench_LinkDashboard", objectsFile, "Value"), getObjectInfoFromXML("CollectionsWorkBench_LinkDashboard", objectsFile, "Description")
Wait  5
setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
srtBusinessValue = GlobalDictionary("BusinessUnit")
invRBT=dbgetinvRBT(srtBusinessValue)
If  IsArrayEmpty(invRBT) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
       
	invoice= Trim(invRBT(2))
	cust_id = invRBT(1)
setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),cust_id,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CWB_ITMLIST_WRK_ITEM_QUERY_TYPE_LBL","htmltag:=LABEL").Exist(30) Then
            Call WriteToReport (micPass,"Items Section ","Items Section is Loaded Successfully", True)
		Else
			Call WriteToReport (micFail, "Items Section is not Loaded", "Items Section is not Loaded", True) 
	
End If
  
Dim tableobj,rowNumber,columncount
set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","htmltag:=TABLE")
If tableobj.Exist Then
	columncount=tableobj.ColumnCount(1)
rowNumber=getRownumberfromWebTable (tableobj,invoice,columncount)
tableobj.ChildItem(rowNumber,1,"WebCheckBox",0).set "ON" 
Call WriteToReport (micPass,"CheckBox for Invoice "&invoice&" is Checked Successfully"," CheckBox for Invoice "&invoice&" is Checked Successfully", True)
else
  Call WriteToReport (micFail,"Detail 1 tab table"," Detail 1 tab table is not displayed", True)
  Exit function
End If


WebList_select getObjectInfoFromXML("ItemAction_WebList", objectsFile, "Value"),"Reprint Invoices",("Reprint Invoices selected from weblist")
btn_click  getObjectInfoFromXML("Go_Btn", objectsFile, "Value"), getObjectInfoFromXML("Go_Btn", objectsFile, "Description")
wait 8
Verify_ClickRadioBtn getObjectInfoFromXML("Web_RadioBtn", objectsFile, "Value"), getObjectInfoFromXML("Web_RadioBtn", objectsFile, "Description"),"6"
btn_click  getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
wait 8
If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg","html tag:=DIV").Exist(30) Then
            Call WriteToReport (micPass,"Message box","Message Box Displayed Sucessfull and Process instance", False)
		Else
			Call WriteToReport (micFail, "Message box", "Message Box Did not Display Sucessfull and Process instance", True)
	
End If
Dim objProcessInstance,process_Instance
Set objProcessInstance = eval(getObjectInfoFromXML("ProcessInstance_webElement", objectsFile, "Value"))
   process_Instance =Right(objProcessInstance.getROProperty("innertext"),21) 
      Call WriteToReport (micPass,"Process instance","Process Instance is "&chr(34)&" "&process_Instance&" "&chr(34)&"" , True)
 
btn_click  getObjectInfoFromXML("OK_MsgBox_Btn", objectsFile, "Value"), getObjectInfoFromXML("OK_MsgBox_Btn", objectsFile, "Description")
wait 8
btn_click  getObjectInfoFromXML("ReportQueries_Tab", objectsFile, "Value"), getObjectInfoFromXML("ReportQueries_Tab", objectsFile, "Description")

element_dblClick getObjectInfoFromXML("ProcessMonitor_LinkDashboard", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_LinkDashboard", objectsFile, "Description")
			
Dim runStatus
   runStatus = getStatus(split(process_Instance,".")(0),GlobalDictionary("SignInUser"))

element_dblClick getObjectInfoFromXML("Reportmanager_LinkDashboard", objectsFile, "Value"), getObjectInfoFromXML("Reportmanager_LinkDashboard", objectsFile, "Description")
Dim objTable
Set objTable = Browser("CreationTime:=0").Page("title:=Report Manager").WebTable("name:=Report")
objTable.highlight
objTable.ChildItem(2,2,"Link" ,0).Click

'Dim objtable
Set objtable = Browser("CreationTime:=0").Page("index:=1").WebTable("name:=Name","html tag:=TABLE")
objtable.highlight
objtable.ChildItem(3,1,"Link" ,0).Click

Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").highlight
Call WriteToReport (micPass,"CDW Invoice Status Report is Loaded Successfully","", True)
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "a" + micCtrlUp
wait 2
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "c" + micCtrlUp
Dim clipBoard, objFso, tempFile, txt, reqText
Set clipBoard = CreateObject("Mercury.Clipboard")
reqText = clipBoard.GetText
'Print reqText

clipBoard.Clear
Set clipBoard = Nothing



Set objFso = CreateObject("Scripting.FileSystemObject")
Set tempFile = objFso.CreateTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", True)

tempFile.Write reqText
tempFile.Close

Set tempFile = objFso.OpenTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt")
Dim isFound,invoiceId1,invoiceId2
isFound = false
Dim rowNum
Do until tempFile.AtEndOfStream
	txt = tempFile.ReadLine
	If instr(txt, "Invoices interfaced to Bill Trust for RBT:") > 0 Then
		isFound = True
		rowNum = 0
	ElseIf isFound Then
		rowNum = rowNum + 1
		If rowNum = 2 Then
			invoiceId1 = split(txt," ")(0)
			Call WriteToReport (micPass,"InvoiceID1 captured is"&invoiceId1&"","", True)
		
			isFound = false
		End If
	End If

Loop

tempFile.Close

objFso.DeleteFile "C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", true
Set objFso = Nothing
Browser("CreationTime:=1").Close 

If Trim(invoice)=Trim(invoiceId1) Then
	Call WriteToReport (micPass,"Invoice ID is "&invoice&" and actual Invoice ID is "&invoiceId1&" ","Invoice ID  is Validated Successfully", True)
		Else
	Call WriteToReport (micFail, "Invoice ID", "Invoice ID  is not Validated Successfully", True)
End If




End If 	
End Function
'**************************************************************************************************************
''' <summary> 
''' Verify Invoice Reprint from Collections Workbench -- 01/02 Zuora
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function verifyInvoiceReprint0102Zuora()
Dim srtBusinessValue,strSQL,cust_id,sConnectionString,sheetName,arrRecordValues,getObjectFromXML,invoice,invZR

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
wait 3
element_dblClick getObjectInfoFromXML("CollectionsWorkBench_LinkDashboard", objectsFile, "Value"), getObjectInfoFromXML("CollectionsWorkBench_LinkDashboard", objectsFile, "Description")
Wait 5
setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
srtBusinessValue = GlobalDictionary("BusinessUnit")
invZR=dbgetinvZR(srtBusinessValue)
If  IsArrayEmpty(invZR) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
	invoice= Trim(invZR(2))
	cust_id = invZR(1)
setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),cust_id,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CWB_ITMLIST_WRK_ITEM_QUERY_TYPE_LBL","htmltag:=LABEL").Exist(60) Then
            Call WriteToReport (micPass,"Items Section ","Items Section is Loaded Successfully", True)
		Else
			Call WriteToReport (micFail, "Items Section is not Loaded", "Items Section is not Loaded", True) 
	
End If	
Dim tableobj,rowNumber,columncount
set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","htmltag:=TABLE")
If tableobj.Exist(45) Then
	columncount=tableobj.ColumnCount(1)
    rowNumber=getRownumberfromWebTable (tableobj,invoice,columncount)
    tableobj.ChildItem(rowNumber,2,"WebCheckBox",0).set "ON"
  else
    Call WriteToReport (micFail, "Items table", "Items table is not Loaded", True) 
Exit function 
End If

WebList_select getObjectInfoFromXML("ItemAction_WebList", objectsFile, "Value"),"Reprint Invoices", getObjectInfoFromXML("ItemAction_WebList", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Go_Btn", objectsFile, "Value"), getObjectInfoFromXML("Go_Btn", objectsFile, "Description")
wait 8
Verify_ClickRadioBtn getObjectInfoFromXML("Web_RadioBtn", objectsFile, "Value"), getObjectInfoFromXML("Web_RadioBtn", objectsFile, "Description"),"6"
btn_click  getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")

If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg","html tag:=DIV").Exist(30) Then
            Call WriteToReport (micPass,"Message box","Message Box Displayed Sucessfull and Process instance", False)
		Else
			Call WriteToReport (micFail, "Message box", "Message Box Did not Display Sucessfull and Process instance", True)
	
End If
Dim objProcessInstance,process_Instance
Set objProcessInstance = eval(getObjectInfoFromXML("ProcessInstance_webElement", objectsFile, "Value"))
   process_Instance =split(objProcessInstance.getROProperty("innertext"),".")(0) 
   process_Instance =split(process_Instance," = ")(1) 
      Call WriteToReport (micPass,"Process instance","Process Instance is "&chr(34)&" "&process_Instance&" "&chr(34)&"" , True)
 
btn_click  getObjectInfoFromXML("OK_MsgBox_Btn", objectsFile, "Value"), getObjectInfoFromXML("OK_MsgBox_Btn", objectsFile, "Description")

btn_click  getObjectInfoFromXML("ReportQueries_Tab", objectsFile, "Value"), getObjectInfoFromXML("ReportQueries_Tab", objectsFile, "Description")

element_dblClick getObjectInfoFromXML("ProcessMonitor_LinkDashboard", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_LinkDashboard", objectsFile, "Description")

if Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").webbutton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
            Call WriteToReport (micPass,"Process Monitor Page is Loaded Successfully","", True)
		Else
			Call WriteToReport (micFail, "Process Monitor Page is not Loaded Successfully", "", True)
			End If
			
Dim runStatus
   runStatus = getStatus(process_Instance,GlobalDictionary("SignInUser"))
   
   'Save
   Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").webbutton("name:=Save","html id:=#ICSave").Click

	wait 2
	
	Browser("creationtime:=0").Page("index:=1").Link("html id:=FSPC_REPORT_WRK_HYPERLINK\$13","html tag:=A").DoubleClick
	

wait 3
Dim objTable
Set objTable = Browser("CreationTime:=0").Page("title:=Report Manager").WebTable("name:=Report")
       If objTable.Exist(60) Then
       Call WriteToReport (micPass,"Report Manager Page is Loaded Successfully","", True)
		Else
	   Call WriteToReport (micFail, "Report Manager Page is not Loaded Successfully", "", True)
		End If
	
objTable.highlight
objTable.ChildItem(2,2,"Link" ,0).Click

wait 5
Set objtable = Browser("CreationTime:=0").Page("index:=1").WebTable("name:=Name","html tag:=TABLE")
If objtable.Exist(30) Then
	   Call WriteToReport (micPass,"Report  Page is Loaded Successfully","", True)
		Else
	   Call WriteToReport (micFail, "Report Page is not Loaded Successfully", "", True)
End If

    element_dblClick getObjectInfoFromXML("CDWBIRPTPDF_lin", objectsFile, "Value"),("CDWBIRPT Link to open pdf is Clicked")
     wait 5

If Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Exist(60) Then
	Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").highlight
Call WriteToReport (micPass,"CDW Invoice Status Report is Loaded Successfully","", True)
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "a" + micCtrlUp
wait 2
Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "c" + micCtrlUp
Dim clipBoard, objFso, tempFile, txt, reqText
Set clipBoard = CreateObject("Mercury.Clipboard")
reqText = clipBoard.GetText


clipBoard.Clear
Set clipBoard = Nothing
else
  Call WriteToReport (micFail, "web pdf report page", "web pdf report page is not loaded successfully", True) 
  Exit function
End If

Set objFso = CreateObject("Scripting.FileSystemObject")
Set tempFile = objFso.CreateTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", True)

tempFile.Write reqText
tempFile.Close

Set tempFile = objFso.OpenTextFile("C:\AutoSource_Prod\PSFinUFT\Data\temp.txt")
Dim isFound,invoiceId1,invoiceId2
isFound = false
Dim rowNum
Do until tempFile.AtEndOfStream
	txt = tempFile.ReadLine
	'''' as per rini invoceid can be anywhere in report
	If instr(txt,Trim(invoice) ) > 0 Then
		isFound = True
	  Exit do
	End If

Loop

tempFile.Close

objFso.DeleteFile "C:\AutoSource_Prod\PSFinUFT\Data\temp.txt", true
Set objFso = Nothing
 

If isFound Then
	Call WriteToReport (micPass,"Invoice ID is "&invoice&" is displayed in report ","Invoice ID  is Validated Successfully", True)
	
		Else
	Call WriteToReport (micFail, "Invoice ID", "Invoice ID "&invoice&" is not Validated Successfully with "&invoiceId1, True)
End If
Browser("CreationTime:=1").Close
End If 			
End Function
'**************************************************************************************************************
''' <summary> 
''' Verify Manual Tax Rebills retain Original Invoice Date
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function verifyLeaseRebillsretainOriginalInvoiceDate()

Dim srtBusinessValue,strSQL,cust_id,sConnectionString,sheetName,arrRecordValues,getObjectFromXML,invoice,verifyRebillsORGINV

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")

verifyRebillsORGINV=dbgetVerifyRebillsOrgINV(srtBusinessValue)
If  IsArrayEmpty(verifyRebillsORGINV) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
    invoice = Trim(verifyRebillsORGINV(2))
    cust_id = Trim(verifyRebillsORGINV(1))

setValue_WebEdit getObjectInfoFromXML("Businessunit_AdjustEntireBill", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Businessunit_AdjustEntireBill", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_AdjustEntireBill", objectsFile, "Value"),invoice,false, getObjectInfoFromXML("Invoice_AdjustEntireBill", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Adjust Entire Bill","html tag:=SPAN","index:=1").Exist(30) Then
   Call WriteToReport (micPass,"Adjust Entire Bill Page","Adjust Entire Bill Page is Loaded Successfully", False)
        Else
   Call WriteToReport (micFail, "Adjust Entire Bill Page", "Adjust Entire Bill Page is not Loaded Successfully", True)
End If
Verify_ClickRadioBtn getObjectInfoFromXML("CreditRebill_RadioBtn", objectsFile, "Value"), getObjectInfoFromXML("CreditRebill_RadioBtn", objectsFile, "Description"),"CRB"
setValue_WebEdit getObjectInfoFromXML("AdjustmentReason_WebEdit", objectsFile, "Value"),"MTAX",false, getObjectInfoFromXML("AdjustmentReason_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
wait 3
Dim objCreditBill,creditBill_Invoice
Set objCreditBill = eval(getObjectInfoFromXML("CreditBill_WebEdit", objectsFile, "Value"))
   creditBill_Invoice =objCreditBill.getROProperty("value") 
      Call WriteToReport (micPass,"Credit Bill Invoice","Credit Bill Invoice is "&chr(34)&" "&creditBill_Invoice&" "&chr(34)&"" , True)
Dim objReBillBill,rebillBill_Invoice 
Set objReBillBill = eval(getObjectInfoFromXML("ReBillBill_WebEdit", objectsFile, "Value"))
   rebillBill_Invoice =objReBillBill.getROProperty("value") 
      Call WriteToReport (micPass,"Rebill Bill Invoice","Rebill Bill Invoice is "&chr(34)&" "&rebillBill_Invoice&" "&chr(34)&"" , True)
      
btn_click  getObjectInfoFromXML("Headerinfo1_Rebill_Link", objectsFile, "Value"), getObjectInfoFromXML("Headerinfo1_Rebill_Link", objectsFile, "Description")

If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Invoice","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Header info 1 Page","Header info 1 Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Header info 1 Page", "Header info 1 Page is not Loaded Successfully", True)
End If

Dim objinvRebillDate,reBill_InvoiceDate,invDateGreyedout
Set objinvRebillDate = eval(getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Value"))
   invDateGreyedout=objinvRebillDate.getROProperty("disabled")
   reBill_InvoiceDate =objinvRebillDate.getROProperty("value")
   Call WriteToReport (micPass,"Rebill Invoice Date","Rebill Invoice Date is "&chr(34)&" "&reBill_InvoiceDate&" "&chr(34)&"" , True)
   
   If Trim(invDateGreyedout)=1 Then
   Call WriteToReport (micPass,"ReBill Invoice Date is Grayed Out","ReBill Invoice Date is Grayed Out" , True)
   Else
   Call WriteToReport (micFail, "ReBill Invoice Date is not Grayed Out", "ReBill Invoice Date is not Grayed Out", True)
       
   End If
btn_click  getObjectInfoFromXML("ReturntoSearch_Btn", objectsFile, "Value"), getObjectInfoFromXML("ReturntoSearch_Btn", objectsFile, "Description") 
If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Bill Entry","html tag:=H1","index:=0").Exist(30) Then
        Call WriteToReport (micPass,"Bill Entry Page","Bill Entry  Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Bill Entry Page", "Bill Entry  Page is not Loaded Successfully", True)
End If

setValue_WebEdit getObjectInfoFromXML("BusinessUnit_BillEntry_WebEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("BusinessUnit_BillEntry_WebEdit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_BillEntry_WebEdit", objectsFile, "Value"),creditBill_Invoice,false, getObjectInfoFromXML("Invoice_BillEntry_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Description")
If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Invoice","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Header info 1 Page","Header info 1 Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Header info 1 Page", "Header info 1 Page is not Loaded Successfully", True)
End If

Dim objinvCreditDate,credit_InvoiceDate,invDateGreyedout1
Set objinvCreditDate = eval(getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Value"))
   invDateGreyedout1=objinvCreditDate.getROProperty("disabled")
   credit_InvoiceDate =objinvCreditDate.getROProperty("value")
   Call WriteToReport (micPass,"Credit Invoice Date","Credit Invoice Date is "&chr(34)&" "&credit_InvoiceDate&" "&chr(34)&"" , True)
   
If Trim(invDateGreyedout1)=1 Then
   Call WriteToReport (micPass,"Credit Invoice Date is Grayed Out","Credit Invoice Date is Grayed Out" , True)
   Else
   Call WriteToReport (micFail, "Credit Invoice Date is not Grayed Out", "Credit Invoice Date is not Grayed Out", True)   
End If
End If

Browser("creationtime:=1").Close
if SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True then
if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Adjustment History","html tag:=H1","index:=1").Exist(30) Then
        Call WriteToReport (micPass,"Adjustment History Search Page","Adjustment History Search Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Adjustment History Search Page", "Adjustment History Search Page is not Loaded Successfully", True)
End If

setValue_WebEdit getObjectInfoFromXML("BusinessUnit_AdjustmentHistory_WebEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("BusinessUnit_AdjustmentHistory_WebEdit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_AdjustmentHistory_WebEdit", objectsFile, "Value"),invoice,false, getObjectInfoFromXML("Invoice_AdjustmentHistory_WebEdit", objectsFile, "Description")
'btn_click  getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Description")
Browser("creationtime:=0").Page("index:=1").WebButton("value:=Search").Click
if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Adjustment History","html tag:=SPAN","index:=1").Exist(60) Then
        Call WriteToReport (micPass,"Adjustment History Page","Adjustment History Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Adjustment History Page", "Adjustment History Page is not Loaded Successfully", True)
End If
Dim objOrginvDate,original_InvoiceDate
Set objOrginvDate = eval(getObjectInfoFromXML("InvoiceDateOriginal_WebElement", objectsFile, "Value"))
   original_InvoiceDate =objOrginvDate.getROProperty("innertext")
   Call WriteToReport (micPass,"Original Invoice Date","Original Invoice Date is "&chr(34)&" "&original_InvoiceDate&" "&chr(34)&"" , True)
   
   
   If Trim(original_InvoiceDate) = Trim(credit_InvoiceDate)   Then
       Call WriteToReport (micPass,"Credit and Rebill Date "&credit_InvoiceDate&" Matches the original Invoice Date "&original_InvoiceDate&"","Credit and Rebill Date is Validated Successfully" , True)
   Else
   Call WriteToReport (micFail, "Credit and Rebill Date doesnt Match the original Invoice Date", "Credit and Rebill Date is not Validated Successfully", True)
   End If

End If

End Function




'**************************************************************************************************************
''' <summary> 
''' Verify non-Lease and non-Manual Tax Rebills allow for Invoice Date to be modified
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function verifynonLeaseandnonManualTaxRebillsallowforInvoiceDatemodified()

Dim srtBusinessValue,strSQL,cust_id,sConnectionString,sheetName,arrRecordValues,getObjectFromXML,invoice,verifyRebillsORGINV

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")
verifyRebillsORGINV=dbgetVerifyRebillsOrgINV(srtBusinessValue)
If  IsArrayEmpty(verifyRebillsORGINV) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
    invoice= verifyRebillsORGINV(2)
    cust_id = verifyRebillsORGINV(1)
    
setValue_WebEdit getObjectInfoFromXML("Businessunit_AdjustEntireBill", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Businessunit_AdjustEntireBill", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_AdjustEntireBill", objectsFile, "Value"),invoice,false, getObjectInfoFromXML("Invoice_AdjustEntireBill", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Adjust Entire Bill","html tag:=SPAN","index:=0").Exist(30) Then
   Call WriteToReport (micPass,"Adjust Entire Bill Page","Adjust Entire Bill Page is Loaded Successfully", False)
        Else
   Call WriteToReport (micFail, "Adjust Entire Bill Page", "Adjust Entire Bill Page is not Loaded Successfully", True)
End If
Verify_ClickRadioBtn getObjectInfoFromXML("CreditRebill_RadioBtn", objectsFile, "Value"), getObjectInfoFromXML("CreditRebill_RadioBtn", objectsFile, "Description"),"CRB"
setValue_WebEdit getObjectInfoFromXML("AdjustmentReason_WebEdit", objectsFile, "Value"),"RBT",false, getObjectInfoFromXML("AdjustmentReason_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
wait 3
Dim objCreditBill,creditBill_Invoice
Set objCreditBill = eval(getObjectInfoFromXML("CreditBill_WebEdit", objectsFile, "Value"))
   creditBill_Invoice =objCreditBill.getROProperty("value") 
      Call WriteToReport (micPass,"Credit Bill Invoice","Credit Bill Invoice is "&chr(34)&" "&creditBill_Invoice&" "&chr(34)&"" , True)
Dim objReBillBill,rebillBill_Invoice 
Set objReBillBill = eval(getObjectInfoFromXML("ReBillBill_WebEdit", objectsFile, "Value"))
   rebillBill_Invoice =objReBillBill.getROProperty("value") 
      Call WriteToReport (micPass,"Rebill Bill Invoice","Rebill Bill Invoice is "&chr(34)&" "&rebillBill_Invoice&" "&chr(34)&"" , True)
      
btn_click  getObjectInfoFromXML("Headerinfo1_Rebill_Link", objectsFile, "Value"), getObjectInfoFromXML("Headerinfo1_Rebill_Link", objectsFile, "Description")

If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Invoice","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Header info 1 Page","Header info 1 Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Header info 1 Page", "Header info 1 Page is not Loaded Successfully", True)
End If
   
Dim invoiceDate
invoiceDate= Trim(Date)
setValue_WebEdit getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Value"),invoiceDate,false, getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Save_creationtime1_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_creationtime1_btn", objectsFile, "Description")
wait 3
Dim objinvRebillDate1,reBill_InvoiceDate1
Set objinvRebillDate1 = eval(getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Value"))
    reBill_InvoiceDate1 =objinvRebillDate1.getROProperty("value")
   Call WriteToReport (micPass,"Rebill Invoice Date","Rebill Invoice Date is "&chr(34)&" "&reBill_InvoiceDate1&" "&chr(34)&"" , True)

btn_click  getObjectInfoFromXML("ReturntoSearch_Btn", objectsFile, "Value"), getObjectInfoFromXML("ReturntoSearch_Btn", objectsFile, "Description") 
If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Bill Entry","html tag:=H1","index:=0").Exist(30) Then
        Call WriteToReport (micPass,"Bill Entry Page","Bill Entry  Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Bill Entry Page", "Bill Entry  Page is not Loaded Successfully", True)
End If

setValue_WebEdit getObjectInfoFromXML("BusinessUnit_BillEntry_WebEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("BusinessUnit_BillEntry_WebEdit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_BillEntry_WebEdit", objectsFile, "Value"),creditBill_Invoice,false, getObjectInfoFromXML("Invoice_BillEntry_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Description")
wait 3 
If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Invoice","html tag:=SPAN","index:=0").Exist(30) Then
        Call WriteToReport (micPass,"Header info 1 Page","Header info 1 Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Header info 1 Page", "Header info 1 Page is not Loaded Successfully", True)
End If

setValue_WebEdit getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Value"),invoiceDate,false, getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Save_creationtime1_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_creationtime1_btn", objectsFile, "Description")
wait 3
Dim objinvCreditDate1,credit_InvoiceDate1
Set objinvCreditDate1 = eval(getObjectInfoFromXML("InvoiceDate1_WebEdit", objectsFile, "Value"))
   credit_InvoiceDate1 =objinvCreditDate1.getROProperty("value")
   Call WriteToReport (micPass,"Credit Invoice Date","Credit Invoice Date is "&chr(34)&" "&credit_InvoiceDate1&" "&chr(34)&"" , True)

End If


Browser("creationtime:=1").Close
if SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True then
if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Adjustment History","html tag:=H1","index:=0").Exist(30) Then
        Call WriteToReport (micPass,"Adjustment History Search Page","Adjustment History Search Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Adjustment History Search Page", "Adjustment History Search Page is not Loaded Successfully", True)
End If
setValue_WebEdit getObjectInfoFromXML("BusinessUnit_AdjustmentHistory_WebEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("BusinessUnit_AdjustmentHistory_WebEdit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Invoice_AdjustmentHistory_WebEdit", objectsFile, "Value"),invoice,false, getObjectInfoFromXML("Invoice_AdjustmentHistory_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_BillEntry_Btn", objectsFile, "Description")
wait 3 
if Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Adjustment History","html tag:=SPAN","index:=0").Exist(60) Then
        Call WriteToReport (micPass,"Adjustment History Page","Adjustment History Page is Loaded Successfully", False)
        Else
        Call WriteToReport (micFail, "Adjustment History Page", "Adjustment History Page is not Loaded Successfully", True)
End If
Dim objCreditInvDate,credit_InvoiceDate
Set objCreditInvDate = eval(getObjectInfoFromXML("InvoiceDateCredit_WebElement", objectsFile, "Value"))
   credit_InvoiceDate =objCreditInvDate.getROProperty("innertext")
   Call WriteToReport (micPass,"Credit Invoice Date","Credit Invoice Date is "&chr(34)&" "&credit_InvoiceDate&" "&chr(34)&"" , True)
   
   
   If Trim(credit_InvoiceDate1) = Trim(credit_InvoiceDate)   Then
       Call WriteToReport (micPass,"Credit Invoice Date "&credit_InvoiceDate1&" Matches the New Date Entered "&credit_InvoiceDate&"","Credit Invoice Date Matche the New Date Entered" , True)
   Else
   Call WriteToReport (micFail, "Credit invoice Date doesnt Match the New Date Entered", "Credit Invoice Date doesnt Match the New Date Entered", True)
   End If
   
Dim objinvRebillDate,reBill_InvoiceDate
Set objinvRebillDate = eval(getObjectInfoFromXML("InvoiceDateRebill_WebElement", objectsFile, "Value"))
   reBill_InvoiceDate =objinvRebillDate.getROProperty("innertext")
   Call WriteToReport (micPass,"Rebill Invoice Date","Rebill Invoice Date is "&chr(34)&" "&reBill_InvoiceDate&" "&chr(34)&"" , True) 

If Trim(reBill_InvoiceDate1) = Trim(reBill_InvoiceDate)   Then
       Call WriteToReport (micPass,"ReBill Invoice Date "&reBill_InvoiceDate1&" Matches the New Date Entered "&reBill_InvoiceDate&" ","ReBill Invoice Date Matche the New Date Entered" , True)
   Else
   Call WriteToReport (micFail, "ReBill invoice Date doesnt Match the New Date Entered", "ReBill Invoice Date doesnt Match the New Date Entered", True)
   End If

End If

End Function



'**************************************************************************************************************
''' <summary> 
''' Bill Creation - Payment Method of CC
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'******************************************************************************************************
Public Function billCreationPaymentMethodCC()
Dim srtBusinessValue,strSQL,custID,sConnectionString,sheetName,arrRecordValues,getObjectFromXML,shipTo,shipToLoc,acct,dept,paymethodCC, oPage

set oPage = Browser("creationtime:=0").Page("index:=1")

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
    srtBusinessValue = GlobalDictionary("BusinessUnit")
    paymethodCC=dbgetPaymentmethodCC(srtBusinessValue)
    
    If  IsArrayEmpty(paymethodCC) Then
        GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
    else
       GlobalDictionary("dataAvailable") = True           
    End If
    
    custID=paymethodCC(1) 
	shipTo=paymethodCC(6)
	shipToLoc=paymethodCC(7)
	acct=paymethodCC(8)
	dept=paymethodCC(9)


    element_dblClick  getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"), getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Description")
    wait 3
    setValue_WebEdit getObjectInfoFromXML("Unit_addnewvalue_webedit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_addnewvalue_webedit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("Billtype_addnewvalue_webedit", objectsFile, "Value"),GlobalDictionary("BillType"),false, getObjectInfoFromXML("Billtype_addnewvalue_webedit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("BillSource_addnewvalue_webedit", objectsFile, "Value"),GlobalDictionary("BillSource"),false, getObjectInfoFromXML("BillSource_addnewvalue_webedit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("Customer_addnewvalue_webedit", objectsFile, "Value"),custID,false, getObjectInfoFromXML("Customer_addnewvalue_webedit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("InvoiceDate_addnewvalue_webedit", objectsFile, "Value"),DATE,false, getObjectInfoFromXML("InvoiceDate_addnewvalue_webedit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("AcctngDate_addnewvalue_webedit", objectsFile, "Value"),DATE,false, getObjectInfoFromXML("AcctngDate_addnewvalue_webedit", objectsFile, "Description")
    'btn_click  getObjectInfoFromXML("Add_Button", objectsFile, "Value"), getObjectInfoFromXML("Add_Button", objectsFile, "Description")
	oPage.WebButton("html id:=#ICSearch").Click
	
    If oPage.WebElement("innertext:=Unit","html tag:=SPAN").Exist(60) Then
        Call WriteToReport (micPass,"Header Info 1 Page","Header Info 1 Page is Loaded Successfully", False)
            Else
        Call WriteToReport (micFail, "Header Info 1 Page", "Header Info 1 Page is not Loaded Successfully", True)
    End If
    
    WebList_select getObjectInfoFromXML("Paymethod_CC_weblist", objectsFile, "Value"),"Credit Card", ("Credit Card option was successfully selected from the Payment Method WebList ")
    btn_click  getObjectInfoFromXML("CreditCardInfo_IMG", objectsFile, "Value"), getObjectInfoFromXML("CreditCardInfo_IMG", objectsFile, "Description")
    wait 3
    If oPage.WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
      Call WriteToReport (micPass,"Header - Credit Card Page","Header - Credit Card Page is Loaded Successfully", False)
		Else
      Call WriteToReport (micFail, "Header - Credit Card Page", "Header - Credit Card Page is not Loaded Successfully", True)	
    End If
    
    wait 3
    WebList_select getObjectInfoFromXML("CCTYPE_Weblist", objectsFile, "Value"),GlobalDictionary("Credit Card _Type"), ("Successful selection from the Credit Card Type WebList ")
    setValue_WebEdit getObjectInfoFromXML("CCNUM_WebEdit", objectsFile, "Value"),GlobalDictionary("CreditCard_Number"),false, getObjectInfoFromXML("CCNUM_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("EXPMNTH_WebEdit", objectsFile, "Value"),GlobalDictionary("Expiry_Month"),false, getObjectInfoFromXML("EXPMNTH_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("EXPYEAR_WebEdit", objectsFile, "Value"),GlobalDictionary("Expiry_year"),false, getObjectInfoFromXML("EXPYEAR_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("CCFIRSTNAME_WebEdit", objectsFile, "Value"),GlobalDictionary("CreditCard _FirstName"),false, getObjectInfoFromXML("CCFIRSTNAME_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("CCLASTNAME_WebEdit", objectsFile, "Value"),GlobalDictionary("CreditCard_LastName"),false, getObjectInfoFromXML("CCLASTNAME_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("CCEMAIL_WebEdit", objectsFile, "Value"),GlobalDictionary("email_id"),false, getObjectInfoFromXML("CCEMAIL_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("CCPhone_WebEdit", objectsFile, "Value"),GlobalDictionary("Phn"),false, getObjectInfoFromXML("CCPhone_WebEdit", objectsFile, "Description")
    btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
    wait 5
    btn_click  getObjectInfoFromXML("Headerinfo1_WebElement", objectsFile, "Value"), getObjectInfoFromXML("Headerinfo1_WebElement", objectsFile, "Description")

    If oPage.WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Header Info 1 Page","Header Info 1 Page is Loaded Successfully", False)
            Else
        Call WriteToReport (micFail, "Header Info 1 Page", "Header Info 1 Page is not Loaded Successfully", True)
    End If

    WebList_select getObjectInfoFromXML("NavigationHeaderinfo_WebList", objectsFile, "Value"),"Line - Misc Info",("Line - Misc Info option was successfully selected from the Navigation dropdown WebList ")
    If oPage.WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Line Misc Info  Page","Line Misc Info Page is Loaded Successfully", False)
            Else
        Call WriteToReport (micFail, "Line Misc Info Page", "Line Misc Info Page is not Loaded Successfully", True)
    End If

    setValue_WebEdit getObjectInfoFromXML("StartDate_Lineinfo_WebEdit", objectsFile, "Value"),DATE,false, getObjectInfoFromXML("StartDate_Lineinfo_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("EndDate_Lineinfo_WebEdit", objectsFile, "Value"),DATE,false, getObjectInfoFromXML("EndDate_Lineinfo_WebEdit", objectsFile, "Description")
    btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")

    btn_click  getObjectInfoFromXML("Tax_Lineinfo_Link", objectsFile, "Value"), getObjectInfoFromXML("Tax_Lineinfo_Link", objectsFile, "Description")

    If oPage.WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Line Tax Info Page","Line Tax Info Page is Loaded Successfully", False)
            Else
        Call WriteToReport (micFail, "Line Tax Info Page", "Line Tax Info Page is not Loaded Successfully", True)
    End If
    wait 3 
    setValue_WebEdit getObjectInfoFromXML("ShipTO_Webedit", objectsFile, "Value"),shipTo,false, getObjectInfoFromXML("ShipTO_Webedit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("ShipTOLoc_Webedit", objectsFile, "Value"),shipToLoc,false, getObjectInfoFromXML("ShipTOLoc_Webedit", objectsFile, "Description")
    btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
    
    btn_click  getObjectInfoFromXML("Lineinfo1tab_WebEdit", objectsFile, "Value"), getObjectInfoFromXML("Lineinfo1tab_WebEdit", objectsFile, "Description")
    If oPage.WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Line Info 1 Page","Line Info 1 Page is Loaded Successfully", False)
            Else
        Call WriteToReport (micFail, "Line Info 1 Page", "Line Info 1 Page is not Loaded Successfully", True)
    End If

    setValue_WebEdit getObjectInfoFromXML("Table_WebEdit", objectsFile, "Value"),GlobalDictionary("Table"),false, getObjectInfoFromXML("Table_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("Identifier_WebEdit", objectsFile, "Value"),GlobalDictionary("Identifier"),false, getObjectInfoFromXML("Identifier_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("Quantity_WebEdit", objectsFile, "Value"),GlobalDictionary("Quantity"),false, getObjectInfoFromXML("Quantity_WebEdit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("Unitprice_WebEdit", objectsFile, "Value"),GlobalDictionary("UnitPrice"),false, getObjectInfoFromXML("Unitprice_WebEdit", objectsFile, "Description")
    btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
    wait(10)
    
    WebList_select getObjectInfoFromXML("NavigationHeaderinfo_WebList", objectsFile, "Value"),"Acctg - Rev Distribution", ("Acctg - Rev Distribution option was successfully selected from the Navigation dropdown WebList")
    wait 3
    setValue_WebEdit getObjectInfoFromXML("Account_Acctrev_Webedit", objectsFile, "Value"),acct,false, getObjectInfoFromXML("Account_Acctrev_Webedit", objectsFile, "Description")
    setValue_WebEdit getObjectInfoFromXML("Dept_Acctrev_Webedit", objectsFile, "Value"),dept,false, getObjectInfoFromXML("Dept_Acctrev_Webedit", objectsFile, "Description")
    btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")

If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Header - Info 1","html tag:=SPAN","outerhtml:=.*PTUNDERLINE.*").Exist(60) Then
	 Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Header - Info 1","html tag:=SPAN","outerhtml:=.*PTUNDERLINE.*").click
        Call WriteToReport (micPass,"Header Info 1 Tab","Header Info 1 Tab is clicked Successfully", False)
    Else
        Call WriteToReport (micFail, "Header Info 1 Tab", "Header Info 1 Tab is not clicked Successfully", True)
    End If
    
    If oPage.WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
        Call WriteToReport (micPass,"Header Info 1 Page","Header Info 1 Page is Loaded Successfully", False)
            Else
        Call WriteToReport (micFail, "Header Info 1 Page", "Header Info 1 Page is not Loaded Successfully", True)
    End If
    
    wait 3
    setValue_WebEdit getObjectInfoFromXML("StatusHeaderinfo1_WebEdit", objectsFile, "Value"),"RDY",false, getObjectInfoFromXML("StatusHeaderinfo1_WebEdit", objectsFile, "Description")
    Dim invoice,sAI,cDWBI,runcontrol
    invoice=oPage.WebElement("html id:=BI_HDR_INVOICE","html tag:=SPAN").getROProperty("innertext")
    btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")

       
    sAI=singleActionInvoiceBIJOB03(invoice,GlobalDictionary("RunControl"))
    cDWBI=processCDWBIJOB(invoice,GlobalDictionary("RunControl"))


End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Verify Processed CC Transactions
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function verifyProcessedCCTransactions()
	Dim verifycctrns,srtBusinessValue,invoice,invoice1,verifycctrns1
	Dim tableobj,rowNumber,columncount

	Call WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		srtBusinessValue = GlobalDictionary("BusinessUnit")
		verifycctrns=dbgetVerifyPendingcc(srtBusinessValue)
		If IsArrayEmpty(verifycctrns) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
		End If

		invoice=verifycctrns(1)
		wait 3	
		setValue_WebEdit getObjectInfoFromXML("Unit_Reviewpcc_Webedit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_Reviewpcc_Webedit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Review Pending Transactions","html tag:=SPAN","index:=1").Exist(60) Then
			Call WriteToReport (micPass, "Review Pending Transactions page is loaded Successfully", "Review Pending Transactions page is loaded Successfully", False)
		Else
			Call WriteToReport (micFail, "Review Pending Transactions page is not loaded Successfully", " Review Pending Transactions page is not loaded Successfully", False)
		End If
	
		If Browser("creationtime:=0").Page("index:=1").Link("name:=View All").Exist(30) Then
			Browser("creationtime:=0").Page("index:=1").Link("name:=View All").click
		Else
			if Browser("creationtime:=0").Page("index:=1").Link("name:=View 100").Exist(30) then
				Browser("creationtime:=0").Page("index:=1").Link("name:=View 100").click
			End If	
		End If
	
		wait 10
		If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0","html tag:=TABLE").exist(30) Then
	
			'Click Find
			If Browser("creationtime:=0").Page("index:=1").Link("name:=Find").Exist(30) Then
				Browser("creationtime:=0").Page("index:=1").Link("name:=Find").click
			Else
				Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD\$hfind\$0").Click
			End If	
			
			'Enter Invoice
			If Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinEdit("regexpwndclass:=Edit").exist(5)Then
				 Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinEdit("regexpwndclass:=Edit").Set invoice
				 Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinButton("regexpwndtitle:=OK").Click
			End If
			
			'clears message if displayed
			If Browser("creationtime:=0").WebButton("name:=OK").exist(10) Then
				Browser("creationtime:=0").WebButton("name:=OK").Click
			End If
	
			'Find Row with invoice
			set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0","html tag:=TABLE")
			rowNumber=getRownumberfromWebTable (tableobj,invoice,3)
		
			'reports fail if invoice not found
			If rowNumber = False Then
				Call WriteToReport (micFail, "Weblist reprocess list", "Invoice was not found in the table.", False)
				Exit Function
			End If
	
			tableobj.ChildItem(rowNumber,1,"WebList",0).Select "Re-process" 
		Else
			Call WriteToReport (micFail, "Weblist reprocess list", "There is not anything in the table.", False)
		End If
			
		If err.number <> 0 Then
			Call WriteToReport (micFail, "Weblist reprocess list", "Weblist reprocess list "&invoice&" is not selected", True)
		Else
		    Call WriteToReport (micPass,"WebList Reprocess is Selected  for Invoice "&invoice&"  Successfully"," WebList Reprocess is Selected  for Invoice "&invoice&"  Successfully", True)
		End If
	
		wait 3 
		tableobj.ChildItem(rowNumber,7,"WebButton",0).click
		Call WriteToReport (micPass,"Edit Button  for Invoice "&invoice&" is Clicked Successfully","Edit Button  for Invoice "&invoice&" is Clicked Successfully", True)	
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Current Status","html tag:=TD").Exist(30) Then
			Call WriteToReport (micPass, "CC Address Tabbed page  is loaded Successfully", "CC Address Tabbed page is loaded Successfully", False)
		Else
		    Call WriteToReport (micFail, "CC Address Tabbed page is not loaded Successfully", "CC Address Tabbed page is not loaded Successfully", False)
		End If
	
		verifycctrns1= dbgetVerifyPendingcc1(srtBusinessValue,invoice)
		Dim msg1,uimsg1
		msg1=verifycctrns1(41)
		uimsg1=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CR_CARD_MSG1\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(msg1)=Trim(uimsg1) Then
			Call WriteToReport (micPass, "Message 1  is "&chr(34)&" "&msg1&" "&chr(34)&" matches with actual value "&chr(34)&" "&uimsg1&" "&chr(34)&"", "Message 1 is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "Message 1 is not Validated", " Validation of  Message 1 is failed", False)
		End If

		Dim msg2,uimsg2
		msg2=verifycctrns1(42)
		uimsg2=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CR_CARD_MSG2\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(msg2)=Trim(uimsg2) Then
			Call WriteToReport (micPass, "Message 2  is "&chr(34)&" "&msg2&" "&chr(34)&" matches with actual value "&chr(34)&" "&uimsg2&" "&chr(34)&"", "Message 2 is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "Message 2 is not Validated", " Validation of  Message 2 is failed", False)
		End If
		
		Dim msg3,uimsg3
		msg3=verifycctrns1(43)
		uimsg3=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CR_CARD_MSG3\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(msg3)=Trim(uimsg3) Then
			Call WriteToReport (micPass, "Message 3  is "&chr(34)&" "&msg3&" "&chr(34)&" matches with actual value "&chr(34)&" "&uimsg3&" "&chr(34)&"", "Message 3 is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "Message 3 is not Validated", " Validation of  Message 3 is failed", False)
		End If
	
		Dim authCD,uiauthCD
		authCD=verifycctrns1(37)
		uiauthCD=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CR_CARD_AUTH_CD\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(authCD)=Trim(uiauthCD) Then
			Call WriteToReport (micPass, "Auth Code  is "&chr(34)&" "&authCD&" "&chr(34)&" matches with actual value "&chr(34)&" "&uiauthCD&" "&chr(34)&"", "Auth Code is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "Auth Code is not Validated", " Validation of  Auth Code is failed", False)
		End If

		Dim cctype,uicctype,uicctype1
		cctype=ucase(verifycctrns1(2))
		uicctype=Browser("creationtime:=0").Page("index:=1").WebList("html id:=INTFC_CRCARD_CR_CARD_TYPE\$0","html tag:=SELECT").GetROProperty("value")
		uicctype1=replace(uicctype," ","")
		If Trim(cctype) = "AMEX" Then
	 		If Trim(uicctype1) = "AMERICANEXPRESS" Then
	     		Call WriteToReport (micPass, "Card Type  is "&chr(34)&" "&cctype&" "&chr(34)&" matches with actual value "&chr(34)&" "&uicctype1&" "&chr(34)&"", "Card Type is Validated successfully", False)
			Else
	    		Call WriteToReport (micFail, "Card Type is not Validated", " Validation of  Card Type is failed", False)
	    	End If
		Else
			If Trim(cctype)=Trim(uicctype1) Then
				Call WriteToReport (micPass, "Card Type  is "&chr(34)&" "&cctype&" "&chr(34)&" matches with actual value "&chr(34)&" "&uicctype1&" "&chr(34)&"", "Card Type is Validated successfully", False)
	        Else
		    	Call WriteToReport (micFail, "Card Type is not Validated", " Validation of  Card Type is failed", False)
			End If
		End If
		
		Dim ccnum,uiccnum
		ccnum=verifycctrns1(11)
		uiccnum=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=FUNCLIB_CR_CARD_CR_CARD_NBR_E2\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(ccnum)=Trim(Right(uiccnum,4)) Then
			Call WriteToReport (micPass, "Card Number  is "&chr(34)&" "&ccnum&" "&chr(34)&" matches with actual value "&chr(34)&" "&uiccnum&" "&chr(34)&"", "Card Number is Validated successfully", False)
		Else
		    Call WriteToReport (micFail, "Card Number is not Validated", " Validation of  Card Number is failed", False)
		End If

		Dim expmo,uiexpmo
		expmo = verifycctrns1(14)
		uiexpmo = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CR_CARD_EXPMO\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(expmo) = Trim(uiexpmo) Then
			Call WriteToReport (micPass, "Expiration Month  is "&chr(34)&" "&expmo&" "&chr(34)&" matches with actual value "&chr(34)&" "&uiexpmo&" "&chr(34)&"", "Expiration Month is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "Expiration Month is not Validated", " Validation of  Expiration Month is failed", False)
		End If
	
		Dim firstName,uifirstName
		firstName = verifycctrns1(16)
		uifirstName = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CR_CARD_FNAME\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(firstName) = Trim(uifirstName) Then
			Call WriteToReport (micPass, "First Name  is "&chr(34)&" "&firstName&" "&chr(34)&" matches with actual value "&chr(34)&" "&uifirstName&" "&chr(34)&"", "First Name is Validated successfully", False)
		Else
		    Call WriteToReport (micFail, "First Name is not Validated", " Validation of  First Name is failed", False)
		End If
	
		Dim lastName,uilastName
		lastName = verifycctrns1(17)
		uilastName = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CR_CARD_LNAME\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(lastName) = Trim(uilastName) Then
			Call WriteToReport (micPass, "last Name  is "&chr(34)&" "&lastName&" "&chr(34)&" matches with actual value "&chr(34)&" "&uilastName&" "&chr(34)&"", "last Name is Validated successfully", False)
		Else
		    Call WriteToReport (micFail, "last Name is not Validated", " Validation of  last Name is failed", False)
		End If
	
		Dim email,uiemail
		email = verifycctrns1(36)
		uiemail = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_EMAILID\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(email) = Trim(uiemail) Then
			Call WriteToReport (micPass, "Email ID  is "&chr(34)&" "&email&" "&chr(34)&" matches with actual value "&chr(34)&" "&uiemail&" "&chr(34)&"", "Email ID is Validated successfully", False)
		Else
		    Call WriteToReport (micFail, "Email ID is not Validated", " Validation of  Email ID is failed", False)
		End If

		Dim phone,uiphone
		phone = verifycctrns1(35)
		uiphone = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_PHONE\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(phone) = Trim(uiphone) Then
			Call WriteToReport (micPass, "Phone  is "&chr(34)&" "&phone&" "&chr(34)&" matches with actual value "&chr(34)&" "&uiphone&" "&chr(34)&"", "Phone is Validated successfully", False)
		Else
		    Call WriteToReport (micFail, "Phone is not Validated", " Validation of  Phone is failed", False)
		End If
	
		Dim country,uicountry
		country = verifycctrns1(18)
		uicountry = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_COUNTRY\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(country) = Trim(uicountry) Then
			Call WriteToReport (micPass, "Country  is "&chr(34)&" "&country&" "&chr(34)&" matches with actual value "&chr(34)&" "&uicountry&" "&chr(34)&"", "Country is Validated successfully", False)
		Else
		    Call WriteToReport (micFail, "Country is not Validated", " Validation of  Country is failed", False)
		End If
	
		Dim add1,uiadd1
		add1 = verifycctrns1(19)
		uiadd1 = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_ADDRESS1\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(add1) = Trim(uiadd1) Then
			Call WriteToReport (micPass, "Address 1  is "&chr(34)&" "&add1&" "&chr(34)&" matches with actual value "&chr(34)&" "&uiadd1&" "&chr(34)&"", "Address 1 is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "Address 1 is not Validated", " Validation of  Address 1 is failed", False)
		End If
	
		Dim add2,uiadd2
		add2 = verifycctrns1(20)
		uiadd2 = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_ADDRESS2\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(add2) = Trim(uiadd2) Then
			Call WriteToReport (micPass, "Address 2  is "&chr(34)&" "&add2&" "&chr(34)&" matches with actual value "&chr(34)&" "&uiadd2&" "&chr(34)&"", "Address 2 is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "Address 2 is not Validated", " Validation of  Address 2 is failed", False)
		End If

		Dim city,uicity
		city = verifycctrns1(23)
		uicity = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_CITY\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(city) = Trim(uicity) Then
			Call WriteToReport (micPass, "City  is "&chr(34)&" "&city&" "&chr(34)&" matches with actual value "&chr(34)&" "&uicity&" "&chr(34)&"", "City is Validated successfully", False)
	    Else
			Call WriteToReport (micFail, "City is not Validated", " Validation of  City is failed", False)
		End If

		Dim county,uicounty
		county = verifycctrns1(30)
		uicounty = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_COUNTY\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(county) = Trim(uicounty) Then
			Call WriteToReport (micPass, "County is "&chr(34)&" "&county&" "&chr(34)&" matches with actual value "&chr(34)&" "&uicounty&" "&chr(34)&"", "County is Validated successfully", False)
		Else
		    Call WriteToReport (micFail, "County is not Validated", " Validation of  County is failed", False)
		End If
	
		Dim state,uistate
		state = verifycctrns1(31)
		uistate = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=INTFC_CRCARD_STATE\$0","html tag:=INPUT").GetROProperty("value")
		If Trim(state) = Trim(uistate) Then
			Call WriteToReport (micPass, "State is "&chr(34)&" "&state&" "&chr(34)&" matches with actual value "&chr(34)&" "&uistate&" "&chr(34)&"", "State is Validated successfully", False)
	    Else
		    Call WriteToReport (micFail, "State is not Validated", " Validation of  State is failed", False)
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Review Credit Card - Credit Card Number appears on Bill
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function reviewCCNumberappearsonBill()

Dim customerdetails,srtBusinessValue,invoice,cust_id,ccnum,ccnum1,dbccnum
Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")
customerdetails=dbgetreviewCCNumberappearsonBill(srtBusinessValue)
If  IsArrayEmpty(customerdetails) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
invoice=customerdetails(2)
cust_id=customerdetails(1)
dbccnum=customerdetails(7)

If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Bill Summary","html tag:=H1","index:=1").Exist(45) Then
	Call WriteToReport (micPass, "Bill Summary  page is loaded Successfully", "Bill Summary  page is loaded Successfully", False)
  Else
    Call WriteToReport (micFail, "Bill Summary page is not loaded Successfully", " Bill Summary page is not loaded Successfully", False)
End If

setValue_WebEdit getObjectInfoFromXML("busntt_cc4", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("busntt_cc4", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("invtt_cc4", objectsFile, "Value"),invoice,false, getObjectInfoFromXML("invtt_cc4", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("custtt_cc4", objectsFile, "Value"),cust_id,false, getObjectInfoFromXML("custtt_cc4", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
wait 2

If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","html tag:=SPAN").Exist(10) Then
    Call WriteToReport (micPass, "Bill Summary Info Tabbed page is loaded Successfully", "Bill Summary Info Tabbed page is loaded Successfully", False)
Else
    Call WriteToReport (micFail, "Bill Summary Info  Tabbed page is not loaded Successfully", " Bill Summary Info Tabbed page is not loaded Successfully", False)	
End If
btn_click  getObjectInfoFromXML("viewpccpmt_Link", objectsFile, "Value"), getObjectInfoFromXML("viewpccpmt_Link", objectsFile, "Description")

wait 2
If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Credit Card Data Inquiry","html tag:=SPAN").Exist(10) Then
	Call WriteToReport (micPass, "Credit Card Enquiry page is loaded Successfully", "Credit Card Enquiry page is loaded Successfully", False)
Else
    Call WriteToReport (micFail, "Credit Card Enquiry  page is not loaded Successfully", " Credit Card Enquiry page is not loaded Successfully", False)
End If

ccnum=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=FUNCLIB_CR_CARD_CR_CARD_NBR_E.*","html tag:=SPAN").GetROProperty("innertext") 
	
ccnum1=Right(ccnum,4)

If Trim(ccnum1)=Trim(dbccnum) Then
	Call WriteToReport (micPass, "Credit Card Last Four Digits is "&chr(34)&" "&ccnum1&" "&chr(34)&" matches with actual value "&chr(34)&" "&dbccnum&" "&chr(34)&"", "Credit Card Last Four Digits is Validated successfully", False)
Else
    Call WriteToReport (micFail, "Credit Card Last Four Digits is not Validated", " Validation of  Credit Card Last Four Digits is failed", False)
End If

End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Dunning letter modifications
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'July 20, 2017      Eric Trout      Updated to pull invoices from both pdf files, since one is always blank and there is not a way to determine which one as it changes.
'**************************************************************************************************************
Public Function dunninglettermodifications()

Dim ainvoiceid, bFound,  clipBoard, custid, custinfo, i, invinfo, invoice, invoiceId1, invoiceId, isFound, nBlankCount
Dim objFso, objTable, otable, processInstanceObj,processInstance, rownum, Runcontrolid, runStatus
Dim sDescription, srtBusinessValue, tempFile, txt, reqText

nBlankCount = 0
txt = ""

Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")
custinfo=dbgetDunningLetter(srtBusinessValue)
If  IsArrayEmpty(custinfo) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
custid=custinfo(0)

    If Browser("CreationTime:=0").Page("index:=1").WebElement("html id:=app_label","html tag:=H1").Exist Then
        Call WriteToReport (micPass,"Extract Dunning Letter Info page is Loaded Successfully","Extract Dunning Letter Info page is Loaded Successfully", True)
	Else
	    Call WriteToReport (micFail, "Extract Dunning Letter Info page is not Loaded", "Extract Dunning Letter Info page is not Loaded", True) 
    End If
'Selectin Runcontrol

setValue_WebEdit getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Value"),GlobalDictionary("Runcontrol"),false, getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
    if Browser("creationtime:=0").Page("index:=1").PSFrame("name:=TargetContent").WebButton("name:=Run","html tag:=INPUT").Exist Then
        Call WriteToReport (micPass,"Dunning Letters Parameters Tabbed Page for Report Request Parameters is Loaded Successfully","", True)
	Else
	    Call WriteToReport (micFail, "Dunning Letters Parameters Tabbed Page for Report Request Parameters is  not Loaded Successfully", "", True) 
	End If
'Entering Selection parameters
setValue_WebEdit getObjectInfoFromXML("AsofDate_dunning_Webedit", objectsFile, "Value"),Date,false, getObjectInfoFromXML("AsofDate_dunning_Webedit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("setid_dunning_Webedit", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("setid_dunning_Webedit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("unit_dunning_Webedit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("unit_dunning_Webedit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Customer_dunning_Webedit", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_dunning_Webedit", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("CCustomer_dunning_Webedit", objectsFile, "Value"),"",false, getObjectInfoFromXML("CCustomer_dunning_Webedit", objectsFile, "Description")
WebList_select getObjectInfoFromXML("Dgroups_dunning_Weblist", objectsFile, "Value"),"All Groups",("All Groups option was successfully selected from the Dunning Group WebList ")
btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
'Selecting CDWDUNN Process
btn_click  getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Value"), getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Description")
    if Browser("CreationTime:=0").Page("index:=1").PSFrame("html id:=ptModFrame_0").WebElement("innerhtml:=User ID","html tag:=SPAN").Exist Then
        Call WriteToReport (micPass,"Process Scheduler Request Page is Loaded Successfully","", True)
    Else
		Call WriteToReport (micFail, "Process scheduler Request Page is not Loaded Successfully", "", True)
	End If
check_CheckBox getObjectInfoFromXML("CDWDUNN_dunning_WebCheckbox", objectsFile, "Value"), getObjectInfoFromXML("CDWDUNN_dunning_WebCheckbox", objectsFile, "Description")
    btn_click  getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
    ''''''''''''''''''''''''''''''''''''
    wait 5
    Set processInstanceObj = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1")
   processInstance =   split(processInstanceObj.GetROProperty("innertext"),":")(1)
    '''''''''''''''''''''''''''''''''''''''''
    btn_click  getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Description")
    if Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").webbutton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
         Call WriteToReport (micPass,"Process Monitor Page is Loaded Successfully","", True)
	Else
	     Call WriteToReport (micFail, "Process Monitor Page is not Loaded Successfully", "", True)
    End If
'Runstatus         
   runStatus = getStatus(processInstance,GlobalDictionary("SignInUser"))
   
End If	
if SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True then
btn_click  getObjectInfoFromXML("Administration_Tab", objectsFile, "Value"), getObjectInfoFromXML("Administration_Tab", objectsFile, "Description")
wait 5

'Gets values from both PDF files
For i = 1 To 2
    
	Set objTable = Browser("CreationTime:=0").Page("title:=Report Manager").PSFrame("title:=Report Distribution Mgr").WebTable("name:=Select")
	objTable.highlight
	
	'pulls descrription for reference
	sDescription = objTable.ChildItem(i+1,4,"Link" ,0).GetRoProperty("text")
	'Clicks PDF link of first link
	objTable.ChildItem(i+1,4,"Link" ,0).Click

	wait 10
	Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").highlight
	Call WriteToReport (micPass,sDescription &" is Loaded Successfully","", True)
	Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "a" + micCtrlUp
	wait 2
	Browser("CreationTime:=1").WinObject("regexpwndtitle:=AVPageView").Type micCtrlDwn + "c" + micCtrlUp
	Set clipBoard = CreateObject("Mercury.Clipboard")
	reqText = clipBoard.GetText
	
	clipBoard.Clear
	Set clipBoard = Nothing
    
    'Closes PDF window
	Browser("CreationTime:=1").Close  
    wait 5
    
	If Trim(reqText) <>"" Then
        Call WriteToReport (micDone,"PDF content ["&reqText&"]","", True)
		Exit For
    Else
        Call WriteToReport (micDone,"PDF is blank.","", True)
        nBlankCount = nBlankCount + 1
	End If
	
Next

If nBlankCount <> 2 Then	

	Set objFso = CreateObject("Scripting.FileSystemObject")
	Set tempFile = objFso.CreateTextFile("C:\AutoSource_Prod\PSFinUFT\temp.txt", True)
		
	tempFile.Write reqText
	tempFile.Close
	
	Set tempFile = objFso.OpenTextFile("C:\AutoSource_Prod\PSFinUFT\temp.txt")
	isFound = false
	
	Do until tempFile.AtEndOfStream
		txt = tempFile.ReadLine
	
		If instr(txt, "CDW Credit Services Department") > 0 Then
			isFound = True
			rowNum = 0
		ElseIf isFound Then
			rowNum = rowNum + 1
			If rowNum =>2 Then
                'Captures all invoices
					invoiceId1 = split(txt," ")(0)
					If instr(invoiceid1 ,"$") >0 Then
					Else
						If invoiceid = "" Then
							invoiceid = invoiceid1
						Else
							invoiceid = invoiceid1 & ";"& invoiceid
						End If
					End If									
           
	       	 End If
		End If
	
	Loop
	
	tempFile.Close
	
	objFso.DeleteFile "C:\AutoSource_Prod\PSFinUFT\temp.txt", true
	Set objFso = Nothing

Else
	Call WriteToReport (micFail, "PDF Files Blank", "Both PDF files are blank.", False)
End If

invinfo=dbgetDunningLetter1(srtBusinessValue,custid)
invoice=invinfo(1)

bFound = false

ainvoiceid = split(invoiceid,";")

For i  = 0 To ubound(ainvoiceid)
	If Trim(ainvoiceid(i)) = Trim(invoice) Then
		bFound = True
		 Call WriteToReport (micPass, "Invoice ID from Pdf "&chr(34)&" "&ainvoiceId(i)&" "&chr(34)&" matches with actual value "&chr(34)&" "&invoice&" "&chr(34)&"", "Invoice ID is Validated successfully", False)
		Exit For
	End If
	
Next

If bFound <> true Then
	Call WriteToReport (micFail, "Invoice ID is not Validated", " Validation of  Invoice ID is failed. Invoice: " &invoice &" was not found in PDF.", False)
End If

End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Customer search functions within AR pages
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function customersearchfunctnsARpages()
Dim srtBusinessValue,custinfo,custid
Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")
custinfo=dbgetcustomersearchfunctnsARpages(srtBusinessValue)
If  IsArrayEmpty(custinfo) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
custid=custinfo(1)

    If Browser("creationtime:=0").Page("index:=1").WebEdit("name:=SUBCUST_PRF_WRK_SETID_INQ").Exist Then
	    Call WriteToReport (micPass,"Balances Tab on Account Overview Page  is Loaded Successfully","", True)
    Else
		Call WriteToReport (micFail, "Balances Tab on Account Overview Page is not Loaded Successfully", "", True)
	End If
btn_click  getObjectInfoFromXML("ProfileTab_WebElement", objectsFile, "Value"), getObjectInfoFromXML("ProfileTab_WebElement", objectsFile, "Description")
    If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Unit","html tag:=LABEL").Exist Then
	    Call WriteToReport (micPass,"Profile Tabbed Page is Loaded Successfully","", True)
    Else
		Call WriteToReport (micFail, "Profile Tabbed Page is not Loaded Successfully", "", True)
	End If

setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")

wait 3
Dim tblPageObj
	Set tblPageObj = Browser("creationtime:=0").page("index:=1")
	if countOfElements(tblPageObj,"WebElement","html id","html tag","ACE_AR_LABEL_WRK_CUSTOMER_LABEL","TABLE","There is only one Address", False) > 1 then
	    Call WriteToReport (micFail, "There are more than one Address", "There are more than one", False)
	Else
	    Call WriteToReport (micPass, "There is only one Address", "There is only one Address", False)
	End If
Set tblPageObj = Nothing
End If
End Function



'**************************************************************************************************************
''' <summary> 
''' Review Credit Card details
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function CreditCdetails12e3()
	Dim tcObjective, recordCount, invoiceid, invd1, custid
	Dim bnvms1,bnvms2,bnvms3,bnvms4,bnvms5,bnvms6,bnvms7,bnvms8,bnvms9,bnvms10,bnvms11,cctype,ccnumber,ccmonth,ccyear,ccfirstname,cclastname,ccemail,ccphonenumber
	
	WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&" ", false 
	if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

		''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
		wait 3
		if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist Then
        	WriteToReport micPass, "Details Page loaded successfully", "Details Page loaded successfully", false
        Else
	        WriteToReport micFail, "Details Page not loaded", "Details Page loading failed, so failing the test case", true
	        Exit Function
        End If
        
        '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("Businessunit_BillTrust", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Businessunit_BillTrust", objectsFile, "Description")
     	wait 3   
     	
    	'''''''''''''setting invoice'''''
    	recordCount = reviewccdetailsdatarts((GlobalDictionary("BusinessUnit")))
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
			Exit function
		else
			GlobalDictionary("dataAvailable") = True
			custid=recordCount(1)
			invoiceid=recordCount(2)
			setValue_WebEdit getObjectInfoFromXML("Invoice_BillTrust", objectsFile, "Value"),invoiceid,false, getObjectInfoFromXML("invtt_cc4", objectsFile, "Description")
			setValue_WebEdit getObjectInfoFromXML("Customer_BillTrust", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_BillTrust", objectsFile, "Description")
		End If

		btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
		if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Header -  Info 1</span>").Exist(60) Then
      		WriteToReport micPass, "Header -  Info 1 Page loaded successfully", "Header -  Info 1 Page loaded successfully", false
        Else
	        WriteToReport micFail, "Header -  Info 1 Page not loaded", "Header -  Info 1 Page loading failed, so failing the test case", true
	        Exit Function
		End If
		
		img_click getObjectInfoFromXML("CreditCardInfo_IMG", objectsFile, "Value"), getObjectInfoFromXML("Customer_BillTrust", objectsFile, "Description")
		WriteToReport micDone,"Credit Card Information Image Clicked","Credit Card Information Image Clicked Successfully",false

		'if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ptModTitle_0","innerhtml:=Credit Card Information").Exist(60) Then
		if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ptModTitle.*","innerhtml:=Credit Card Information").Exist(60) Then
	   		WriteToReport micPass, "Credit Card Information Page loaded successfully", "Credit Card Information Page loaded successfully", false
        Else
	        WriteToReport micFail, "Credit Card Information Page not loaded", "Credit Card Information Page loading failed, so failing the test case", true         
	     	Exit Function
		End If

		Set bnvms1 = eval(getObjectInfoFromXML("CCTYPE_Weblist111", objectsFile, "Value"))
		cctype =bnvms1.getROProperty("innertext")
		
		Set bnvms2 = eval(getObjectInfoFromXML("CCNUM_WebEdit111", objectsFile, "Value"))
		ccnumber =bnvms2.getROProperty("innertext")
		
		Set bnvms3= eval(getObjectInfoFromXML("EXPMNTH_WebEdit111", objectsFile, "Value"))
		ccmonth =bnvms3.getROProperty("innertext")
		
		Set bnvms4= eval(getObjectInfoFromXML("EXPYEAR_WebEdit111", objectsFile, "Value"))
		ccyear =bnvms4.getROProperty("innertext")
		
		Set bnvms5= eval(getObjectInfoFromXML("CCFIRSTNAME_WebEdit111", objectsFile, "Value"))
		ccfirstname =bnvms5.getROProperty("innertext")
		
		Set bnvms6= eval(getObjectInfoFromXML("CCLASTNAME_WebEdit111", objectsFile, "Value"))
		cclastname =bnvms6.getROProperty("innertext")
		
		Set bnvms7= eval(getObjectInfoFromXML("CCEMAIL_WebEdit111", objectsFile, "Value"))
		ccemail =bnvms7.getROProperty("innertext")
		
		Set bnvms8= eval(getObjectInfoFromXML("CCPhone_WebEdit111", objectsFile, "Value"))
		ccphonenumber =bnvms8.getROProperty("innertext")

		recordCount = reviewccdetailsdatarts((GlobalDictionary("BusinessUnit")))
		If IsArrayEmpty(recordCount) Then
		    GlobalDictionary("dataAvailable") = false
          	Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
      	else
		    GlobalDictionary("dataAvailable") = True
	        If Trim(recordCount(5)) = "AMEX" and Trim(cctype) = "AMERICAN EXPRESS" Then
	        	if Trim(recordCount(5)) = "AMEX" and Trim(cctype) = "AMERICAN EXPRESS" then
		            WriteToReport micPass, "Actual Credit Card Type value "&cctype&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Credit Card Type  Value is Validated successfully", false
		        Else
		            WriteToReport micFail, "Credit Card Type is not Validated", "Credit Card Type Value Validation failed", false
		        End If
       		else
		        if Replace(Ucase(recordCount(5))," ","") = Replace(Ucase(cctype)," ","") then
		            WriteToReport micPass, "Actual Credit Card Type value "&cctype&" matches value from Sql Query "&Trim(recordCount(5))&" ", "Credit Card Type  Value is Validated successfully", false
		        Else
		            WriteToReport micFail, "Credit Card Type is not Validated", "Credit Card Type Value Validation failed", false
		        End If
	        End If

	        if Trim(recordCount(7)) = Right(ccnumber,4) then
	            WriteToReport micPass, "Actual Credit Card Number value "&Right(ccnumber,4)&" matches value from Sql Query "&Trim(recordCount(7))&" ", "Credit Card Type  Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "Credit Card Type is not Validated", "Credit Card Type Value is Validation failed", false
	        End If

	       if Trim(recordCount(12)) = Trim(ccmonth) then
	            WriteToReport micPass, "Actual Expiration Month value "&ccmonth&" matches value from Sql Query "&Trim(recordCount(12))&" ", "Expiration Month  Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "Expiration Month is not Validated", "Credit Card Type Value is Validation failed", false
	        End If
	        
	        if Trim(recordCount(13)) = Trim(ccyear) then
	            WriteToReport micPass, "Actual Expiration Year value "&ccyear&" matches value from Sql Query "&Trim(recordCount(13))&" ", "Expiration Year  Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "Expiration Year is not Validated", "Credit Card Type Value is Validation failed", false
	        End If
	        
	        if Trim(recordCount(8)) = Trim(ccfirstname) then
	            WriteToReport micPass, "Actual First Name value "&ccfirstname&" matches value from Sql Query "&Trim(recordCount(8))&" ", "First Name  Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "First Name is not Validated", "Credit Card Type Value is Validation failed", false
	        End If
	        
	        if Trim(recordCount(9)) = Trim(cclastname) then
	            WriteToReport micPass, "Actual Last Name value "&cclastname&" matches value from Sql Query "&Trim(recordCount(9))&" ", "Last Name  Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "Last Name is not Validated", "Credit Card Type Value is Validation failed", false
	        End If
	        
	        if Trim(recordCount(10)) = Trim(ccemail) then
	            WriteToReport micPass, "Actual Email Address value "&ccemail&" matches value from Sql Query "&Trim(recordCount(10))&" ", "Email Address  Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "Email Address is not Validated", "Credit Card Type Value is Validation failed", false
	        End If
	        
	        if Trim(recordCount(11)) = Trim(ccphonenumber) then
	            WriteToReport micPass, "Actual Phone Number value "&ccphonenumber&" matches value from Sql Query "&Trim(recordCount(11))&" ", "Phone Number  Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "Phone Number is not Validated", "Credit Card Type Value is Validation failed", false
	        End If
		End If
	End If
End Function



'**************************************************************************************************************
''' <summary> 
''' Pay Outstanding Item via CC - Account Overview Balances
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'03/16/2018			Eric Trout		Cleaned up script for readablilty.  Also added loop to check for item closed up to 10 minutes
'**************************************************************************************************************
Public Function OutsCCAccountOverviewBalances()
	
	Dim tableobj, bFound
	Dim columncount,custid,endtime,i,invoiceid,invd1,itemid ,nError ,recordCount ,rowNumber ,starttime ,statsss,statsssidf,successtime,tcObjective

	bFound = FALSE
	
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&" ", false 

If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Balances</span>").Exist(50) Then
            WriteToReport micPass, "Account Overview Page loaded successfully", "Account Overview Page loaded successfully", false
        Else
        WriteToReport micFail, "Account Overview Page not loaded", "Account Overview Page loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
        setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
     setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
     wait 3   
    '''''''''''''setting invoice'''''
    recordCount = ccoverbalcc((GlobalDictionary("BusinessUnit")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
	Else
        GlobalDictionary("dataAvailable") = True
custid=recordCount(1)
        setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
	End if
     
btn_click  getObjectInfoFromXML("Search_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")
wait 3

	If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Balances</span>").Exist(50) Then
      WriteToReport micPass, "Balances tabbed Page loaded successfully", "Balances tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Balances tabbed Page not loaded", "Balances tabbed Page loading failed, so failing the test case", true
        Exit Function
	End if
       
click_Link  getObjectInfoFromXML("linkclick_test1_checked_WebEdit111", objectsFile, "Value"),("Balance Link Clicked")
wait 2
	If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Item List</span>").Exist(50) Then
   WriteToReport micPass, "Customer Item Inquiry Page loaded successfully", "Customer Item Inquiry Page loaded successfully", false
        Else
        WriteToReport micFail, "Customer Item Inquiry Page not loaded", "Customer Item Inquiry Page loading failed, so failing the test case", true         
     Exit Function
	End if

	itemid = trim(recordCount(2))

	set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","html tag:=TABLE")
 
If tableobj.Exist(60) Then
	rowNumber=getRownumberfromWebTable (tableobj,itemid,3)
tableobj.ChildItem(rowNumber,2,"Webcheckbox",0).Click
Call WriteToReport (micPass,"Checkbox next to item ID "&itemid&" for Customer ID "&custid&" is selected Successfully","Checkbox next to item ID "&itemid&" is selected Successfully", True)
	Else
   WriteToReport micFail, "search results", "no results displayed", true  
End If

 set tableobj = nothing
webList_select getObjectInfoFromXML("opt1_sng1_new1_WebEdit111", objectsFile, "Value"),"Pay by Credit Card",("Pay by Credit Card option selected from Weblist")
wait 2
btn_click  getObjectInfoFromXML("gosec_Btn_WebEdit111", objectsFile, "Value"),("Go Button Clicked")
wait 5
if Browser("creationtime:=0").Page("index:=1").Link("html id:=HYPERLINK_LABEL").Exist(50) Then
   WriteToReport micPass, "Credit Card Details Page loaded successfully", "Credit Card Details Page loaded successfully", false
        Else
        WriteToReport micFail, "Credit Card Details Page not loaded", "Credit Card Details Page loading failed, so failing the test case", true         
     Exit Function
	end if

webList_select getObjectInfoFromXML("CCType_WebList", objectsFile, "Value"),GlobalDictionary("cctyp"),(""&GlobalDictionary("cctyp")&" is selected from Credit Card Type Drop Down")

setValue_WebEdit getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Value"),GlobalDictionary("ccnum"),false, getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Value"),GlobalDictionary("expmnt"),false, getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Value"),GlobalDictionary("expyr"),false, getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Value"),GlobalDictionary("ccfstname"),false, getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Value"),GlobalDictionary("cclstname"),false, getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Value"),GlobalDictionary("emailadd"),false, getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Value"),GlobalDictionary("phnum"),false, getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Description")

click_Link  getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Value"),("Expand all link Clicked")
wait 2
webList_select getObjectInfoFromXML("CCAction_WebList", objectsFile, "Value"),"Authorize and Settle Later",("Authorize and Settle Later selected from Credit Card Action Drop Down")

wait 2
btn_click  getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Value"),("Save Button Clicked")

    'Check for expired Credit Card and fail if found
   If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg").Exist(10) Then
   		nError = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg").GetROProperty("innertext")
		Call WriteToReport (micFail, "CreditCardErrro",nError,TRUE)		
   		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK").Click
   		Exit Function   
   End If
	
if arcreditcardprocessing() then
		If NOT getCDWCCStatus() then
         WriteToReport micFail, "CDWCC process", "Failing testcase as CDWCC did not run into success or warning with posted", true
         Exit function
		End if
	Else
     WriteToReport micFail, " processes", "Failing testcase as CO or Auth did not run into success or warning with posted", true
         Exit function   
	End if

	login(GlobalDictionary("SignInUser")) 

	starttime=Timer

	For i = 1 to 20

		If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
			If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Balances</span>").Exist(60) Then
				WriteToReport micPass, "Account Overview Page loaded successfully", "Account Overview Page loaded successfully", false
			Else
				WriteToReport micFail, "Account Overview Page not loaded", "Account Overview Page loading failed, so failing the test case", true
				Exit Function
			End If
    
			setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
			setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
     
			setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description") 
   
			wait 2 
			btn_click  getObjectInfoFromXML("Search_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")
			wait 3
			   
			If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Balances</span>").Exist(50) Then
				WriteToReport micPass, "Balances tabbed Page loaded successfully", "Balances tabbed Page loaded successfully", false
			Else
				WriteToReport micFail, "Balances tabbed Page not loaded", "Balances tabbed Page loading failed, so failing the test case", true
				Exit Function
			End if

			click_Link  getObjectInfoFromXML("linkclick_test1_checked_WebEdit111", objectsFile, "Value"),("Balance Link Clicked")

			If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Item List</span>").Exist(50) Then
				WriteToReport micPass, "Customer Item Inquiry Floating tabbed page loaded successfully", "Customer Item Inquiry Floating tabbed page loaded successfully", false
			Else
				WriteToReport micFail, "Customer Item Inquiry Floating tabbed page not loaded", "Customer Item Inquiry Floating tabbed page loading failed, so failing the test case", true
				Exit Function
			End if

			webList_select getObjectInfoFromXML("rdsd_1206", objectsFile, "Value"),"All",("All is selected from Status Drop Down")

			btn_click  getObjectInfoFromXML("srchbtngosec_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")

			set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","html tag:=TABLE")
			If tableobj.Exist(60) Then
				If Browser("creationtime:=0").Page("index:=1").Link("innertext:=View All").Exist(5) Then
					Browser("creationtime:=0").Page("index:=1").Link("innertext:=View All").Click
					wait 5
				End If
				Browser("creationtime:=0").Page("index:=1").Link("innertext:="&itemid).highlight
				Browser("creationtime:=0").Page("index:=1").Link("innertext:="&itemid).click
				Call WriteToReport (micPass,"Link with to item ID "&itemid&" for Customer ID "&custid&" is selected Successfully","link with item ID "&itemid&" is selected Successfully", True)
			End If

			If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Detail 1</span>").Exist(50) Then
				WriteToReport micPass, "Item Maintenance Floating tabbed page loaded successfully", "Item Maintenance Floating tabbed page loaded successfully", false
			Else
				WriteToReport micFail, "Item Maintenance Floating tabbed page not loaded", "Item Maintenance Floating tabbed page loading failed, so failing the test case", true
				Exit Function
			End if

			Set statsss = eval(getObjectInfoFromXML("Attac_staus_item_1206", objectsFile, "Value"))
			statsssidf =statsss.getROProperty("innertext")
   
			If statsssidf = "Closed" then
				bFound = TRUE
				Exit For
			End if

		End if
		
	Next
	
	If bFound = TRUE Then
		WriteToReport micPass, "Status of Item "&itemid&" and Customer ID "&custid&"  selected in Item Maintenance Floating tabbed Page is "&statsssidf&"  as expected", "Status of Item Value is Validated successfully", false	
	Else	
		WriteToReport micFail, "Status of Item "&itemid&" and Customer ID "&custid&" selected in Item Maintenance Floating tabbed Page is "&statsssidf&"  not as expected", "Status of Item Value is Validation Failed", false
	End If	
	endtime=Timer

	successtime = endtime - starttime
	Reporter.ReportEvent micInfo, "Elapsed Time to Close", "Timerval: " & successtime

End if

End Function



'**************************************************************************************************************
''' <summary> 
''' Pay Outstanding Item with a credit card in the Item List Page
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'3/19/2018			Eric Trout	   Added For Loop to recheck item for closed status due to process timing.  Also cleaned up tabbing of function
'**************************************************************************************************************
Public Function OutsCCItemlistpage()
	Dim columncount,custid,endtime,i,invoiceid,invd1,itemid,nError,starttime,statsss,statsssidf,successtime,tcObjective,recordCount,rowNumber 
	Dim tableobj

	WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

		''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
		if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Item List</span>").Exist(30) Then
			WriteToReport micPass, "Item List Page loaded successfully", "Item List Page loaded successfully", false
		Else
			WriteToReport micFail, "Item List Page not loaded", "Item List Page loading failed, so failing the test case", true
			Exit Function
		End If

		'''''''''''''setting business unit'    
		setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
	 	wait 3

		'''''''''''''setting invoice'''''
		recordCount = ccoverbalcc((GlobalDictionary("BusinessUnit")))
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
			Exit function
		Else
			GlobalDictionary("dataAvailable") = True
			custid=recordCount(1)
			setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
		End if

		btn_click getObjectInfoFromXML("srchbtngosec_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")
		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Detail 1</span>").Exist(50) Then
	  		WriteToReport micPass, "Item List Tabbed Page loaded successfully", "Item List Tabbed Page loaded successfully", false
		Else
			WriteToReport micFail, "Item List Tabbed Page not loaded", "Item List Tabbed Page loading failed, so failing the test case", true
			Exit Function
		End if

		itemid = trim(recordCount(2))
		wait 5
		set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","html tag:=TABLE")
		If tableobj.Exist(40) Then
			rowNumber=getRownumberfromWebTable (tableobj,itemid,3)
			tableobj.ChildItem(rowNumber,2,"Webcheckbox",0).Click
			Call WriteToReport (micPass,"Checkbox next to item ID "&itemid&" for Customer ID "&custid&" is selected Successfully","Checkbox next to item ID "&itemid&" is selected Successfully", True)
		Else
			WriteToReport micFail, "Items table", "items table is not displayed", true  
		End If

		webList_select getObjectInfoFromXML("opt1_sng1_new1_WebEdit111", objectsFile, "Value"),"Pay by Credit Card",("Pay by Credit Card option selected from Weblist")
		wait 2
		btn_click getObjectInfoFromXML("gosec_Btn_WebEdit111", objectsFile, "Value"),("Go Button Clicked")
		If Browser("creationtime:=0").Page("index:=1").Link("html id:=HYPERLINK_LABEL").Exist(50) Then
			WriteToReport micPass, "Credit Card Details Page loaded successfully", "Credit Card Details Page loaded successfully", false
		Else
			WriteToReport micFail, "Credit Card Details Page not loaded", "Credit Card Details Page loading failed, so failing the test case", true         
			Exit Function
		End if

		webList_select getObjectInfoFromXML("credit_card_type_ccc", objectsFile, "Value"),GlobalDictionary("cctyp"),(""&GlobalDictionary("cctyp")&" is selected from Credit Card Type Drop Down")
		setValue_WebEdit getObjectInfoFromXML("credit_card_number_ccc", objectsFile, "Value"),GlobalDictionary("ccnum"),false, getObjectInfoFromXML("credit_card_number_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("credit_card_month_ccc", objectsFile, "Value"),GlobalDictionary("expmnt"),false, getObjectInfoFromXML("credit_card_month_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("credit_card_year_ccc", objectsFile, "Value"),GlobalDictionary("expyr"),false, getObjectInfoFromXML("credit_card_year_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("first_name_ccc", objectsFile, "Value"),GlobalDictionary("ccfstname"),false, getObjectInfoFromXML("first_name_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("last_name_ccc", objectsFile, "Value"),GlobalDictionary("cclstname"),false, getObjectInfoFromXML("last_name_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("email_address_ccc", objectsFile, "Value"),GlobalDictionary("emailadd"),false, getObjectInfoFromXML("email_address_ccc", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("phone_number_ccc", objectsFile, "Value"),GlobalDictionary("phnum"),false, getObjectInfoFromXML("phone_number_ccc", objectsFile, "Description")
		click_Link  getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Value"),("Expand all link Clicked")
		wait 2
		webList_select getObjectInfoFromXML("CCAction_WebList", objectsFile, "Value"),"Authorize and Settle Later",("Authorize and Settle Later selected from Credit Card Action Drop Down")
		wait 2
		btn_click  getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Value"),("Save Button Clicked")
		wait 2
	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg").Exist(10) Then
			nError = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg").GetROProperty("innertext")
			Call WriteToReport (micFail, "CreditCardErrro",nError,TRUE)		
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK").Click
			Exit Function   
	    End If

		img_click getObjectInfoFromXML("CreditCardclose_IMG_WebEdit111", objectsFile, "Value"), getObjectInfoFromXML("CreditCardclose_IMG_WebEdit111", objectsFile, "Description")
		wait 2
		WriteToReport micDone,"Credit Card Information Page Close Image Clicked","Credit Card Information Page Close Image Clicked",false

		'''''''''''''''''''''''''''''''''''''''''''''''''''''''
		If arcreditcardprocessing() Then	
			If NOT getCDWCCStatus() Then
				WriteToReport micFail, "CDWCC process", "Failing testcase as CDWCC did not run into success or warning with posted", true
				Exit function
			End if
		Else
	 		WriteToReport micFail, " processes", "Failing testcase as CO or Auth did not run into success or warning with posted", true
		 	Exit function   
		End if

		login(GlobalDictionary("SignInUser"))
		starttime=Timer
		For i = 1 to 13
			if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

				''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
				if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Item List</span>").Exist(30) Then
					WriteToReport micPass, "Item List Page loaded successfully", "Item List Page loaded successfully", false
				Else
					WriteToReport micFail, "Item List Page not loaded", "Item List Page loading failed, so failing the test case", true
					Exit Function
				End If

				'''''''''''''setting business unit'    
				setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
				setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
				wait 3

				'''''''''''''setting invoice'''''
				setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
				btn_click getObjectInfoFromXML("srchbtngosec_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")
				wait 10
				webList_select getObjectInfoFromXML("rdsd_1206", objectsFile, "Value"),"All",("All is selected from Status Drop Down")
				btn_click getObjectInfoFromXML("srchbtngosec_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")
				If Browser("creationtime:=0").Page("index:=1").Link("innertext:=View All","visible:=True").Exist(8) Then ' added if view all is active
					 Browser("creationtime:=0").Page("index:=1").Link("innertext:=View All","visible:=True").Click
				End If

				set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","html tag:=TABLE")
				If tableobj.Exist(30) Then
					rowNumber=getRownumberfromWebTable (tableobj,itemid,3)
					tableobj.ChildItem(rowNumber,3,"Link",0).Click
					Call WriteToReport (micPass,"Link with to item ID "&itemid&" for Customer ID "&custid&" is selected Successfully","link with item ID "&itemid&" is selected Successfully", True)
				Else
				   Call WriteToReport (micFail,"Link with to item ID "&itemid&" for Customer ID "&custid&" is not selected Successfully","link with item ID "&itemid&" is not selected Successfully", True)
				End If

				If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Detail 1</span>").Exist(50) Then
					WriteToReport micPass, "Item Maintenance Floating tabbed page loaded successfully", "Item Maintenance Floating tabbed page loaded successfully", false
				Else
					WriteToReport micFail, "Item Maintenance Floating tabbed page not loaded", "Item Maintenance Floating tabbed page loading failed, so failing the test case", true
					Exit Function
				End If

				Set statsss = eval(getObjectInfoFromXML("Attac_staus_item_1206", objectsFile, "Value"))
				statsssidf =statsss.getROProperty("innertext")
				If statsssidf = "Closed" Then
					WriteToReport micPass, "Status of Item "&itemid&" and Customer ID "&custid&"  selected in Item Maintenance Floating tabbed Page is "&statsssidf&"  as expected", "Status of Item Value is Validated successfully", false
				Else
					If i = 13 Then
						WriteToReport micFail, "Status of Item "&itemid&" and Customer ID "&custid&" selected in Item Maintenance Floating tabbed Page is "&statsssidf&"  not as expected", "Status of Item Value is Validation Failed", false
					Else
						WriteToReport micDone, "Status of Item "&itemid&" and Customer ID "&custid&" selected in Item Maintenance Floating tabbed Page is "&statsssidf, "Recheck.", false
					End If
				End if
			End If	
		Next

		endtime=Timer
		successtime = endtime - starttime
		Reporter.ReportEvent micInfo, "Elapsed Time to Close", "Timerval: " & successtime
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Pay Outstanding Item via CC - View/Update Item Details
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'03/16/2018			Eric Trout		Added Loop to check if object closes due to timing for job to close item, also cleaned up function for better readability
'**************************************************************************************************************
Public Function OutsCCViewUpdatepage()

	Dim columncount,custid,endtime,i,invd1,invoiceid,itemid,nError
	Dim recordCount,rowNumber,starttime,statsssidf,statsss,successtime,tcObjective
	Dim tableobj,searchBtnObj, bFound
	
	bFound = FALSE

WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''

	If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
            WriteToReport micPass, "View/Update Item Details Page loaded successfully", "View/Update Item Details Page loaded successfully", false
    Else
        WriteToReport micFail, "View/Update Item Details Page not loaded", "View/Update Item Details Page loading failed, so failing the test case", true
        Exit Function
	End If
        
        '''''''''''''setting business unit'    
     setValue_WebEdit getObjectInfoFromXML("busin111_cc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("busin111_cc4_WebEdit111", objectsFile, "Description")

    '''''''''''''setting invoice'''''
    recordCount = ccoverbalcc((GlobalDictionary("BusinessUnit")))
	If IsArrayEmpty(recordCount) Then
		GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
        Exit function
	Else
        GlobalDictionary("dataAvailable") = True
		custid=trim(recordCount(1))
		itemid=trim(recordCount(2))		
        setValue_WebEdit getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Value"),custid,false, getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Description")
        setValue_WebEdit getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Value"),itemid,false, getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Description")
	End if
     
	btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")

	If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Detail 1</span>").Exist(30) Then
      WriteToReport micPass, "Detail 1 Tabbed Page loaded successfully", "Detail 1 Tabbed Page loaded successfully", false
    Else
        WriteToReport micFail, "Detail 1 Tabbed Page not loaded", "Detail 1 Tabbed Page loading failed, so failing the test case", true
        Exit Function
	End if

	click_Link  getObjectInfoFromXML("linkclick_paybycc11_WebEdit111", objectsFile, "Value"),("Pay By Credit Card link Clicked")
	 
	If isObjExistNOReport(getObjectInfoFromXML("futuree_date_bbtn", objectsFile, "Value"), getObjectInfoFromXML("futuree_date_bbtn", objectsFile, "Description")) = True Then
		btn_click  getObjectInfoFromXML("futuree_date_bbtn", objectsFile, "Value"),("Future date message Button Clicked")  
	End If
 
	If Browser("creationtime:=0").Page("index:=1").Link("html id:=HYPERLINK_LABEL").Exist(30) Then
		WriteToReport micPass, "Credit Card Details Page loaded successfully", "Credit Card Details Page loaded successfully", false
	Else
        WriteToReport micFail, "Credit Card Details Page not loaded", "Credit Card Details Page loading failed, so failing the test case", true         
		Exit Function
	End if

    webList_select getObjectInfoFromXML("credit_card_type_ccc", objectsFile, "Value"),GlobalDictionary("cctyp"),(""&GlobalDictionary("cctyp")&" is selected from Credit Card Type Drop Down")

    setValue_WebEdit getObjectInfoFromXML("credit_card_number_ccc", objectsFile, "Value"),GlobalDictionary("ccnum"),false, getObjectInfoFromXML("credit_card_number_ccc", objectsFile, "Description")

    setValue_WebEdit getObjectInfoFromXML("credit_card_month_ccc", objectsFile, "Value"),GlobalDictionary("expmnt"),false, getObjectInfoFromXML("credit_card_month_ccc", objectsFile, "Description")

    setValue_WebEdit getObjectInfoFromXML("credit_card_year_ccc", objectsFile, "Value"),GlobalDictionary("expyr"),false, getObjectInfoFromXML("credit_card_year_ccc", objectsFile, "Description")

    setValue_WebEdit getObjectInfoFromXML("first_name_ccc", objectsFile, "Value"),GlobalDictionary("ccfstname"),false, getObjectInfoFromXML("first_name_ccc", objectsFile, "Description")

    setValue_WebEdit getObjectInfoFromXML("last_name_ccc", objectsFile, "Value"),GlobalDictionary("cclstname"),false, getObjectInfoFromXML("last_name_ccc", objectsFile, "Description")

    setValue_WebEdit getObjectInfoFromXML("email_address_ccc", objectsFile, "Value"),GlobalDictionary("emailadd"),false, getObjectInfoFromXML("email_address_ccc", objectsFile, "Description")

    setValue_WebEdit getObjectInfoFromXML("phone_number_ccc", objectsFile, "Value"),GlobalDictionary("phnum"),false, getObjectInfoFromXML("phone_number_ccc", objectsFile, "Description")

    click_Link  getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Value"),("Expand all link Clicked")

    webList_select getObjectInfoFromXML("CCAction_WebList", objectsFile, "Value"),"Authorize and Settle Later",("Authorize and Settle Later selected from Credit Card Action Drop Down")

    btn_click  getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Value"),("Save Button Clicked")
      
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg").Exist(10) Then
		nError = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=alertmsg").GetROProperty("innertext")
		Call WriteToReport (micFail, "CreditCardErrro",nError,TRUE)		
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK").Click
		Exit Function   
	End If
	
	If Browser("creationtime:=0").Page("index:=1").Link("innertext:=Return to View/Update Item Details","index:=1").Exist(50) Then
		Browser("creationtime:=0").Page("index:=1").Link("innertext:=Return to View/Update Item Details","index:=1").Click
		Else
		WriteToReport micFail, "View Update Item Details link", "View Update Item link is not clicked ", true 
	End If
       
''''''''''''''''''''''''
	If arcreditcardprocessing() Then
    
		If NOT getCDWCCStatus() Then
			WriteToReport micFail, "CDWCC process", "Failing testcase as CDWCC did not run into success or warning with posted", true
			Exit function
		End if
    Else
		WriteToReport micFail, " processes", "Failing testcase as CO or Auth did not run into success or warning with posted", true
         Exit function   
	End if

	login(GlobalDictionary("SignInUser")) 

	starttime=Timer
	
	For i = 1 to 25
	
		If SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''

			If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
				WriteToReport micPass, "View Update Item Details Page loaded successfully", "View Update Item DetailsPage loaded successfully", false
			Else
				WriteToReport micFail, "View Update Item Details Page not loaded", "View Update Item Details Page loading failed, so failing the test case", true
				Exit Function 
			End If
    
			setValue_WebEdit getObjectInfoFromXML("busin111_cc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("busin111_cc4_WebEdit111", objectsFile, "Description")
   
			setValue_WebEdit getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Value"),custid,false, getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Description")
   
			setValue_WebEdit getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Value"),itemid,false, getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Description")
 
			wait 2 
			btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"),("Search Button Clicked")
			wait 3
			
			If Browser("creationtime:=0").Page("index:=1").Link("html id:=pthnavbccrefanc_EP_ITEM_MAINTAIN_GBL1").Exist(60) Then
				WriteToReport micPass, "Detail 1 Tabbed Subsection loaded successfully", "Detail 1 Tabbed Subsection loaded successfully", false
			Else
				Set searchBtnObj = eval(getObjectInfoFromXML("Search_button", objectsFile, "Value"))
			   If searchBtnObj.exist(10) Then
				    searchBtnObj.click 
					If Browser("creationtime:=0").Page("index:=1").Link("html id:=pthnavbccrefanc_EP_ITEM_MAINTAIN_GBL1").Exist(60) Then
						WriteToReport micPass, "Detail 1 Tabbed Subsection loaded successfully", "Detail 1 Tabbed Subsection loaded successfully", false
					Else
						WriteToReport micFail, "Detail 1 Tabbed Subsection not loaded", "Detail 1 Tabbed Subsection loading failed, so failing the test case", true
						Exit Function 
					End if 
				End If 
			End If
           
			Set statsss = eval(getObjectInfoFromXML("Attac_staus_item_1206", objectsFile, "Value"))
			statsssidf =statsss.getROProperty("innertext")
   
			If statsssidf = "Closed" then
				bFound = TRUE
				Exit For
			End if

		End if
	Next

	If bFound = TRUE Then
		WriteToReport micPass, "Status of Item selected in Detail 1 Tabbed Subsection is "&statsssidf&"  as expected", "Status of Item Value is Validated successfully", false
	Else
		WriteToReport micFail, "Status of Item selected in Detail 1 Tabbed Subsection is "&statsssidf&"  not as expected", "Status of Item Value is Validation Failed", false
	End If
	
	endtime=Timer
	successtime = endtime - starttime
	Reporter.ReportEvent micInfo, "Elapsed Time to Close", "Timerval: " & successtime

End if

End Function



'**************************************************************************************************************
''' <summary> 
'''Make Conversation Text Box smaller within the Conversation Page
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function MakeConversationTextBoxsmaller()
	Dim tcObjective,recordCount,invoiceid,invd1,custid,itemid,subj,tableobj,rowNumber,columncount,depositunit

WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
        if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist Then
            WriteToReport micPass, "Update Conversations Page loaded successfully", "Update Conversations Page loaded successfully", false
          Else
	        WriteToReport micFail, "Update Conversations Page not loaded", "Update Conversations Page Loading failed, so failing the test case", true
	        Exit Function
        
        End If
        '''''''''''''setting business unit'    

setValue_WebEdit getObjectInfoFromXML("set_id1212", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("set_id1212", objectsFile, "Description")
     setValue_WebEdit getObjectInfoFromXML("business_unit1212", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("business_unit1212", objectsFile, "Description")
  
    '''''''''''''setting invoice'''''
btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
wait 2

click_Link  getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"),("Under Search Results a Link is Clicked for which Number of Entries Coulums value is greater than one")

wait 2
If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_DESCRLONG\$0").Exist(30) Then 
            WriteToReport micPass, "Multiple text boxes for comments are visble at the same time", "Multiple text boxes for comments visibility validated successfully", false
        Else
        WriteToReport micFail, "Multiple text boxes for comments are visble at the same time", "Multiple text boxes for comments are not visble at the same time  failed, so failing the test case", true
        Exit Function

End If




End If
End Function




'**************************************************************************************************************
''' <summary> 
''' Collections Workbench - Tie to New Conversation
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function CollectionsWorkbenchTietoNewConversation()
	Dim tcObjective,recordCount,bFlag,tableobj,rowNumber,columncount,depositunit,depositunitadd,dpttifj,dpttifjadd,ctdhju,ctdhjuadd,itmadd,itm,selkamt,selkamtadd,pendg,pendgamt,ctdhjuaddlf,busnbbl,busnbblid,custbbl,custbblid,desbbl,desbblid,sbjbbl,sbjbblid,invoiceid,invd1,custid,itemid
'tcObjective="Review Credit Card details"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"" role=""heading"" aria-level=""1"">Collections Workbench</span>").Exist(30) Then
            WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", false
        Else
        WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
     setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")


  
   wait 3   
    '''''''''''''setting invoice'''''
  
    recordCount = depositid8003((GlobalDictionary("BusinessUnit")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
custid=Trim(recordCount(1))
itemid=Trim(recordCount(2))
        
        setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
       
End If
btn_click  getObjectInfoFromXML("Search_Btn_nofrmm", objectsFile, "Value"),("Search Button Clicked")
wait 3

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Items</span>").Exist(30) Then
      WriteToReport micPass, "Items Tabbed Page loaded successfully", "Items Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Items Tabbed Page not loaded", "Items Tabbed Page loading failed, so failing the test case", true
        Exit Function
       
End If

 	set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","html tag:=TABLE")
 	If tableobj.Exist(30) Then 'added if condition so we can avoid run error table does not exist 06/03 venu'
 		rowNumber=getRownumberfromWebTable (tableobj,itemid,3)
        tableobj.ChildItem(rowNumber,2,"Webcheckbox",0).Click
        Call WriteToReport (micPass,"Checkbox next to item ID "&itemid&" for Customer ID "&custid&" is selected Successfully","Checkbox next to item ID "&itemid&" is selected Successfully", True)
 	else
 	    WriteToReport micFail, "Items Table", "Items Table is not displayed , so failing the test case", true
        Exit Function
 	End If

 wait 2
 

webList_select getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Value"),"Tie to a New Conversation",("Tie to a New Conversation is selected from Item Action weblist")
 wait 2
 
 btn_click  getObjectInfoFromXML("Go1_Button", objectsFile, "Value"),("GO Button Clicked")
wait 3

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Conversations</span>").Exist(30) Then
      WriteToReport micPass, "Conversations floating Tabbed Page loaded successfully", "Conversations floating Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Conversations floating Tabbed Page not loaded", "Conversations floating Tabbed Page loading failed, so failing the test case", true
        Exit Function
       
End If

wait 2
setValue_WebEdit getObjectInfoFromXML("Description_TabWebEdit111", objectsFile, "Value"),GlobalDictionary("desc"),false, getObjectInfoFromXML("Description_Tab", objectsFile, "Description")

wait 2
setValue_WebEdit getObjectInfoFromXML("Subject_TabWebEdit111", objectsFile, "Value"),GlobalDictionary("subject"),false, getObjectInfoFromXML("Subject_Tab", objectsFile, "Description")


wait 2
setValue_WebEdit getObjectInfoFromXML("Comments_BoxWebEdit111", objectsFile, "Value"),GlobalDictionary("Comment"),false, getObjectInfoFromXML("Comments_Box", objectsFile, "Description")
 wait 2
 
 btn_click  getObjectInfoFromXML("Ok_Btn_WebEdit111", objectsFile, "Value"),("OK Button Clicked")

WriteToReport micDone,"Credit Card Information Page Close Image Clicked","Credit Card Information Page Close Image Clicked",false
wait 2

Set depositunit = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_CONVR_WRK_CONVER_SUBJECT\$"&rowNumber-1)
depositunitadd =depositunit.getROProperty("innertext")

Set dpttifj =Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_BUSINESS_UNIT\$"&rowNumber-1)
dpttifjadd =dpttifj.getROProperty("innertext")

Set ctdhju= Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_CUST_ID\$"&rowNumber-1)
ctdhjuadd =ctdhju.getROProperty("innertext")


Set itm= Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(itemid))
itmadd =itm.getROProperty("innertext")

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Items</span>").Exist(30) Then
      WriteToReport micPass, "Items tab subsection loaded successfully", "Items tab subsection loaded successfully", false
        Else
        WriteToReport micFail, "Items tab subsection not loaded", "Items tab subsection loading failed, so failing the test case", true
        Exit Function
       
End If

if dpttifjadd = GlobalDictionary("BusinessUnit") then
            WriteToReport micPass, "Business Unit "&dpttifjadd&" under Details 1 Tab in Collection Workbench page  matches with the Business Unit value "&GlobalDictionary("BusinessUnit")&" from Conversations Tabbed Page", "Business Unit Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit "&dpttifjadd&" under Details 1 Tab in Collection Workbench page  does not match with the Business Unit value "&GlobalDictionary("BusinessUnit")&" from Conversations Tabbed Page", "Business Unit Value Validation failed", false
        End If


if ctdhjuadd = custid then
            WriteToReport micPass, "Customer ID "&ctdhjuadd&" under Details 1 Tab in Collection Workbench page  matches with the Customer ID value "&custid&" from Conversations Tabbed Page", "Customer ID Value is Validated successfully", false
        Else
            WriteToReport micFail, "Customer ID "&ctdhjuadd&" under Details 1 Tab in Collection Workbench page  does not match with the Customer ID value "&custid&" from Conversations Tabbed Page", "Customer ID Value Validation failed", false
        End If

if itmadd = itemid then
            WriteToReport micPass, "Item "&itmadd&" under Details 1 Tab in Collection Workbench page  matches with the Item value "&itemid&" from Conversations Tabbed Page", "Item Value is Validated successfully", false
        Else
            WriteToReport micFail, "Item "&itmadd&" under Details 1 Tab in Collection Workbench page  does not match with the Item value "&itemid&" from Conversations Tabbed Page", "Item Value Validation failed", false
        End If


if depositunitadd = GlobalDictionary("subject") then
            WriteToReport micPass, "Subject "&depositunitadd&" under Details 1 Tab in Collection Workbench page  matches with the subject value "&GlobalDictionary("subject")&" from Conversations Tabbed Page", "Subject Value is Validated successfully", false
        Else
            WriteToReport micFail, "Subject "&depositunitadd&" under Details 1 Tab in Collection Workbench page  does not match with the subject value "&GlobalDictionary("subject")&" from Conversations Tabbed Page", "Subject Value Validation failed", false
        End If

If Browser("creationtime:=0").Page("index:=1").image("file name:=PS_COMMENTS_ICN_1\.gif","name:=CONVERSATION\$IMG\$"&rowNumber-1).exist Then
			Call WriteToReport (micPass,"Conversation Exists Icon Exists","Conversation Exists Icon Validated Successfully", True)
        Else
            Call WriteToReport (micFail, "Conversation Exists Icon Does not Exists","Conversation Exists Icon Not Validated Successfully", True)
		
			End If

End If
End Function




'**************************************************************************************************************
''' <summary> 
''' Collections Workbench - Tie to Last Conversation
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function CollectionsWorkbenchTietoLastConversation()
	Dim tcObjective,recordCount,bFlag,tableobj,rowNumber,columncount,depositunit,depositunitadd,dpttifj,dpttifjadd,ctdhju,ctdhjuadd,itmadd,itm,selkamt,selkamtadd,pendg,pendgamt,ctdhjuaddlf,busnbbl,busnbblid,custbbl,custbblid,desbbl,desbblid,sbjbbl,sbjbblid,invoiceid,invd1,custid,itemid,timstkp,timstkpidd,timestampeddd,timestampedddid
'tcObjective="Review Credit Card details"
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"" role=""heading"" aria-level=""1"">Collections Workbench</span>").Exist(30) Then
            WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", false
        Else
        WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
     setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")


  
   wait 3  
Dim uniqueCustID

uniqueCustID = dbGetUniqueCustIDConv(GlobalDictionary("BusinessUnit")) ' 08/25 to get unique cust id
    '''''''''''''setting invoice'''''
   
    recordCount = depositid8003C(uniqueCustID,(GlobalDictionary("BusinessUnit")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
custid=Trim(recordCount(1))
itemid=Trim(recordCount(2))
End If        
        setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
       

btn_click  getObjectInfoFromXML("Search_Btn_nofrmm", objectsFile, "Value"),("Search Button Clicked")
wait 3

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Items</span>").Exist(30) Then
      WriteToReport micPass, "Items Tabbed Page loaded successfully", "Items Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Items Tabbed Page not loaded", "Items Tabbed Page loading failed, so failing the test case", true
        Exit Function
       
End If

 
set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","html tag:=TABLE")
rowNumber=getRownumberfromWebTable (tableobj,itemid,3)

tableobj.ChildItem(rowNumber,2,"Webcheckbox",0).Click

Dim subjectVal

subjectVal = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_CONVR_WRK_CONVER_SUBJECT\$"&rowNumber-1).getroproperty("innertext")

Call WriteToReport (micPass,"Checkbox next to item ID "&itemid&" for Customer ID "&custid&" is selected Successfully","Checkbox next to item ID "&itemid&" is selected Successfully", True)
 wait 2
 
webList_select getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Value"),"Tie to the Last Conversation",("Tie to the Last Conversation is selected from Item Action weblist")
 wait 2
 
 btn_click  getObjectInfoFromXML("Go1_Button", objectsFile, "Value"),("GO Button Clicked")
wait 3

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Conversations</span>").Exist(30) Then
      WriteToReport micPass, "Conversations floating Tabbed Page loaded successfully", "Conversations floating Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Conversations floating Tabbed Page not loaded", "Conversations floating Tabbed Page loading failed, so failing the test case", true
        Exit Function
       
End If

Set timstkp = eval(getObjectInfoFromXML("timestamp_WebElement_1206", objectsFile, "Value"))
timstkpidd =timstkp.getROProperty("innertext")


 
 btn_click  getObjectInfoFromXML("Ok_Btn_WebEdit111", objectsFile, "Value"),("OK Button Clicked")

WriteToReport micDone,"Credit Card Information Page Close Image Clicked","Credit Card Information Page Close Image Clicked",false
wait 2

Set depositunit = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_CONVR_WRK_CONVER_SUBJECT\$"&rowNumber-1)
depositunitadd =depositunit.getROProperty("innertext")

Set dpttifj = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_BUSINESS_UNIT\$"&rowNumber-1)
dpttifjadd =dpttifj.getROProperty("innertext")

Set ctdhju= Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_CUST_ID\$"&rowNumber-1)
ctdhjuadd =ctdhju.getROProperty("innertext")


Set itm= Browser("creationtime:=0").Page("index:=1").Link("html id:=ITEMS\$"&rowNumber-1)
itmadd =itm.getROProperty("innertext")

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Items</span>").Exist(30) Then
      WriteToReport micPass, "Items tab subsection loaded successfully", "Items tab subsection loaded successfully", false
        Else
        WriteToReport micFail, "Items tab subsection not loaded", "Items tab subsection loading failed, so failing the test case", true
        Exit Function
       
End If

if dpttifjadd = GlobalDictionary("BusinessUnit") then
            WriteToReport micPass, "Business Unit "&dpttifjadd&" under Details 1 Tab in Collection Workbench page  matches with the Business Unit value "&GlobalDictionary("BusinessUnit")&" from Conversations Tabbed Page", "Business Unit Value is Validated successfully", false
        Else
            WriteToReport micFail, "Business Unit "&dpttifjadd&" under Details 1 Tab in Collection Workbench page  does not match with the Business Unit value "&GlobalDictionary("BusinessUnit")&" from Conversations Tabbed Page", "Business Unit Value Validation failed", false
        End If


if ctdhjuadd = custid then
            WriteToReport micPass, "Customer ID "&ctdhjuadd&" under Details 1 Tab in Collection Workbench page  matches with the Customer ID value "&custid&" from Conversations Tabbed Page", "Customer ID Value is Validated successfully", false
        Else
            WriteToReport micFail, "Customer ID "&ctdhjuadd&" under Details 1 Tab in Collection Workbench page  does not match with the Customer ID value "&custid&" from Conversations Tabbed Page", "Customer ID Value Validation failed", false
        End If



if itmadd = itemid then
            WriteToReport micPass, "Item "&itmadd&" under Details 1 Tab in Collection Workbench page  matches with the Item value "&itemid&" from Conversations Tabbed Page", "Item Value is Validated successfully", false
        Else
            WriteToReport micFail, "Item "&itmadd&" under Details 1 Tab in Collection Workbench page  does not match with the Item value "&itemid&" from Conversations Tabbed Page", "Item Value Validation failed", false
        End If


if Trim(depositunitadd) = Trim(subjectVal) then
            WriteToReport micPass, "Subject "&depositunitadd&" under Details 1 Tab in Collection Workbench page  matches with the subject value "&subjectVal&" from Conversations Tabbed Page", "Subject Value is Validated successfully", false
        Else
            WriteToReport micFail, "Subject "&depositunitadd&" under Details 1 Tab in Collection Workbench page  does not match with the subject value "&subjectVal&" from Conversations Tabbed Page", "Subject Value Validation failed", false
        End If

if Browser("creationtime:=0").Page("index:=1").image("file name:=PS_COMMENTS_ICN_1\.gif","name:=CONVERSATION\$IMG\$"&rowNumber-1).exist(10) then
   Browser("creationtime:=0").Page("index:=1").image("file name:=PS_COMMENTS_ICN_1\.gif","name:=CONVERSATION\$IMG\$"&rowNumber-1).click
  else
     WriteToReport micFail, "conversation icon", "conversation icon is nod displayed", true
End If


End If
End Function


'**************************************************************************************************************
''' <summary> 
'''Indicate Customer Promise to Pay and  Review Needed
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'18Sept2017         Eric Trout     Updated how customer id final is pulled due to length changing 
'12July2018			Eric Trout	   Updated Find
'**************************************************************************************************************
Public Function IndicateCustomerPromisetoPayReview()
    Dim tcObjective,recordCount,bFlag,tableobj,businid,busin,customer,customerid,customeridfnl,promisedate,promisedateid
    Dim SystemDate,Date1,month1,year1,Converted_date,promisestatus,promisestatusid,promiseamount,promiseamountid,promiseamountidlng,collectorqt,colle,colleiddd,dateese,customeridfnl17,promisedateidfnl,invoiceid,invd1,custid,itemid,descriptionVal,uyuiyg,sid,sidsss,sidssdsds,sidssgrss,rowNumber,custshg
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
            WriteToReport micPass, "View/Update Conversations Page loaded successfully", "View/Update Conversations Page loaded successfully", false
        Else
        WriteToReport micFail, "View/Update Conversations Page not loaded", "View/Update Conversations Page Loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
     element_dblClick  getObjectInfoFromXML("AddNewValue_WebElementchkboxWebEdit111", objectsFile, "Value"),("Add a New Value Tab Clicked")
wait 3

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Add a New Value</span>").Exist(30) Then
      WriteToReport micPass, "Add a New Value Tabbed Page loaded successfully", "Add a New Value Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Add a New Value Tabbed Page not loaded", "Add a New Value Tabbed Page loading failed, so failing the test case", true
        Exit Function
       End If
     setValue_WebEdit getObjectInfoFromXML("setid11_cc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("setid11_cc4_WebEdit111", objectsFile, "Description")
     
     setValue_WebEdit getObjectInfoFromXML("businessunitid11_cc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("businessunitid11_cc4_WebEdit111", objectsFile, "Description")

     wait 3   
    '''''''''''''setting invoice'''''
  
    recordCount = ccoverbalccPromisetoPay((GlobalDictionary("BusinessUnit")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        End If
custid=Trim(recordCount(1))

collectorqt=Trim(recordCount(4))
        
        setValue_WebEdit getObjectInfoFromXML("customeriid11_cc4_WebEdit111", objectsFile, "Value"),custid,false, getObjectInfoFromXML("customeriid11_cc4_WebEdit111", objectsFile, "Description")
     
btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("ADD Button Clicked")   


wait 3
setValue_WebEdit getObjectInfoFromXML("Description_TabWebEdit111", objectsFile, "Value"),GlobalDictionary("desc"),false, getObjectInfoFromXML("Description_Tab", objectsFile, "Description")

wait 2
setValue_WebEdit getObjectInfoFromXML("Subject_TabWebEdit111", objectsFile, "Value"),GlobalDictionary("subject"),false, getObjectInfoFromXML("Subject_Tab", objectsFile, "Description")

wait 2
setValue_WebEdit getObjectInfoFromXML("Comments_BoxWebEdit111", objectsFile, "Value"),GlobalDictionary("Comment"),false, getObjectInfoFromXML("Comments_Box", objectsFile, "Description")

wait 2
check_CheckBox getObjectInfoFromXML("Promisetopay_chkboxWebEdit111", objectsFile, "Value"),("Promise of Payment Check box Checked")
wait 2

dateese= Date

descriptionVal=(getRandomNumber(5))

'Store for reference later
uyuiyg=right(FormatCurrency(descriptionVal),9)

setValue_WebEdit getObjectInfoFromXML("PromiseDate_Fieldcc4_WebEdit111", objectsFile, "Value"),dateese,false, getObjectInfoFromXML("PromiseDate_Fieldcc4_WebEdit111", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("PromiseDate_amount_Fieldcc4_WebEdit111", objectsFile, "Value"),descriptionVal,false, getObjectInfoFromXML("PromiseDate_amount_Fieldcc4_WebEdit111", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("operid_amount_Fieldcc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("SignInUser"),false, getObjectInfoFromXML("operid_amount_Fieldcc4_WebEdit111", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("review_PromiseDate_Fieldcc4_WebEdit111", objectsFile, "Value"),Date,false, getObjectInfoFromXML("review_PromiseDate_Fieldcc4_WebEdit111", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("review_Action_Fieldcc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("action"),false, getObjectInfoFromXML("review_Action_Fieldcc4_WebEdit111", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("review_PromiseDate_userid_WebEdit111", objectsFile, "Value"),GlobalDictionary("SignInUser"),false, getObjectInfoFromXML("review_PromiseDate_userid_WebEdit111", objectsFile, "Description")


btn_click  getObjectInfoFromXML("Ok_Btn_WebEdit111", objectsFile, "Value"),("Save Button Clicked")

if SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Items</span>").Exist(30) Then
            WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", false
        Else
        WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page Loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
   setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
     setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
     wait 3   
    '''''''''''''setting invoice'''''
      
        
        setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
     

btn_click  getObjectInfoFromXML("Search_Btn_nofrmm", objectsFile, "Value"),("Search Button Clicked")
wait 3

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Detail 1</span>").Exist(30) Then
      WriteToReport micPass, "Collections Workbench Tabbed Page loaded successfully", "Collections Workbench Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Collections Workbench Tabbed Page not loaded", "Collections Workbench Tabbed Page loading failed, so failing the test case", true
        Exit Function
 End If

element_dblClick  getObjectInfoFromXML("Conversations_TabWebEdit111", objectsFile, "Value"),("Conversation Tab Clicked")
wait 2
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Detail 1</span>").Exist(30) Then
      WriteToReport micPass, "Conversation tab subsection loaded successfully", "Conversation tab subsection loaded successfully", false
        Else
        WriteToReport micFail, "Conversation tab subsection not loaded successfully", "Conversation tab subsection loading failed", true
       
 End If
wait 10

If Browser("creationtime:=0").Page("index:=1").Link("html id:=CWB_CONVR_WRK_PROMISE_INQ_PB").Exist(30) Then
	Browser("creationtime:=0").Page("index:=1").Link("html id:=CWB_CONVR_WRK_PROMISE_INQ_PB").Click
End If
'btn_click  getObjectInfoFromXML("promiseinquiry_link11", objectsFile, "Value"),("Promises Inquiry Link Clicked")
wait 10
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"" role=""heading"" aria-level=""1"">Promise Date Inquiry</span>").Exist(30) Then
      WriteToReport micPass, "Promises Inquiry Link floating Tabbed Page loaded successfully", "Promises Inquiry floating Link Tabbed Page loaded successfully", false
  Else
      WriteToReport micFail, "Promises Inquiry Link floating Tabbed Page not loaded", "Promises Inquiry Link floating Tabbed Page loading failed", true
       
 End If
 wait 2
 setValue_WebEdit getObjectInfoFromXML("setid_prominq", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("setid_prominq", objectsFile, "Description")
     setValue_WebEdit getObjectInfoFromXML("businuin_prominq", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("businuin_prominq", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("custid_prominq", objectsFile, "Value"),custid,false, getObjectInfoFromXML("custid_prominq", objectsFile, "Description")
     
Verify_ClickRadioBtn getObjectInfoFromXML("showall_prominq", objectsFile, "Value"), getObjectInfoFromXML("showall_prominq", objectsFile, "Description"),"ALL"
btn_click  getObjectInfoFromXML("Search_Btn_nofrmm_prominq", objectsFile, "Value"),("Search Button Clicked")

If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrCWB_PDINQALL_VW\$0","html tag:=TABLE").Exist(45) Then
	set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrCWB_PDINQALL_VW\$0","html tag:=TABLE")
	rowNumber=getRownumberfromWebTable (tableobj,uyuiyg,5)
    'Fails and exits if rowNumber is false
    If rowNumber = False Then
        WriteToReport micFail, "Results", "["&uyuiug&"]" & " was not found in the grid.", true
        Exit function  
    End If
	sid=tableobj.ChildItem(rowNumber,2,"WebElement",0).getROProperty("innertext")
	sidsss=tableobj.ChildItem(rowNumber,3,"WebElement",0).getROProperty("innertext")
	sidssdsds=tableobj.ChildItem(rowNumber,4,"WebElement",0).getROProperty("innertext")
	sidssgrss=tableobj.ChildItem(rowNumber,9,"WebElement",0).getROProperty("innertext")
	 custshg=tableobj.ChildItem(rowNumber,5,"WebElement",0).getROProperty("innertext") 
    sid =  split(sid,"-")
	customeridfnl = Trim(sid(0))
    customeridfnl17 = Trim(sid(0))
	promisedateidfnl=right(sidsss,10)

else
     WriteToReport micFail, "Results grid", "Results grid not displayed", true
     Exit function 
End If


SystemDate = Date

Date1 = Datepart("d",SystemDate)
month1 = Datepart("m",SystemDate)
year1 = Datepart("yyyy",SystemDate)

If len(Date1) = 1 then
Date1 = "0" & Date1
Else
Date1 = Date1
End If

If len(month1) = 1 then
month1 = "0" & month1
Else
month1 = month1
End If
Converted_date = month1 & "/" & Date1 & "/" & year1

If GlobalDictionary("BusinessUnit") <> "00017" Then
      if Trim(customeridfnl17) = Trim(custid) then
            WriteToReport micPass, "Customer ID "&customeridfnl17&" in  Promise Date Conversation Floating Tabbed page  matches with the Customer ID "&customeridfnl17&" from View/Update Conversations Page", "Item Value is Validated successfully", false
        Else
            WriteToReport micFail, "Customer ID "&customeridfnl17&" in  Promise Date Conversation Floating Tabbed page does not matches with the Customer ID "&customeridfnl17&" from View/Update Conversations Page", "Item Value Validation failed", false
        End If
 If Trim(sidsss) = Trim(Converted_date) Then
              WriteToReport micPass, "Promise Date "&sidsss&" In Promise Date Conversation Floating Tabbed page match with Promise Date "&Converted_date&" from View/Update Conversations Page", "Promise Date Value Validated successfully", false
        Else
            WriteToReport micFail, "Promise Date "&sidsss&" In Promise Date Conversation Floating Tabbed page does not match with Promise Date "&Converted_date&" from View/Update Conversations Page", "Promise Date Value NOT Validated successfully", false
        End If

 'If  Trim(uyuiyg) = Trim(custshg) Then
 If FormatCurrency(uyuiyg, 3) = FormatCurrency(custshg, 3) Then
              WriteToReport micPass, "Promise Amount "&uyuiyg&" In Promise Date Conversation Floating Tabbed page match with Promise Amount "&custshg&" from View/Update Conversations Page", "Promise Amount Value  Validated successfully", false
        Else
            WriteToReport micFail, "Promise Amount "&promiseamountidlng&" In Promise Date Conversation Floating Tabbed page does not match with Promise Amount "&custshg&" from View/Update Conversations Page", "Promise Amount Value NOT Validated successfully", false
        End If

If  Trim(collectorqt) = Trim(sidssgrss) Then
              WriteToReport micPass, "Collector "&collectorqt&" In Promise Date Conversation Tabbed page match with Collector "&sidssgrss&" from SQL Query", "Collector Value  Validated successfully", false
        Else
            WriteToReport micFail, "Collector "&sidssgrss&" In Promise Date Conversation Tabbed page does not match with Collector "&sidssgrss&" from SQL Query", "Collector Value NOT Validated successfully", false
        End If
 If  Trim(sidssdsds) = "Open" Then
              WriteToReport micPass, "Status "&sidssdsds&" value In Promise Date Conversation Tabbed page is OPEN as expected", "Status Value  Validated successfully", false
        Else
            WriteToReport micFail, "Status "&sidssdsds&" value In Promise Date Conversation Tabbed page is not OPEN as expected", "Status Value NOT Validated successfully", false
        End If

Else

      if Trim(customeridfnl17) = Trim(custid) then
            WriteToReport micPass, "Customer ID "&customeridfnl17&" in  Promise Date Conversation Floating Tabbed page  matches with the Customer ID "&custid&" from View/Update Conversations Page", "Item Value is Validated successfully", false
        Else
            WriteToReport micFail, "Customer ID "&customeridfnl17&" in  Promise Date Conversation Floating Tabbed page does not matches with the Customer ID "&custid&" from View/Update Conversations Page", "Item Value Validation failed", false
        End If
  If Trim(sidsss) = Trim(Converted_date) Then
              WriteToReport micPass, "Promise Date "&sidsss&" In Promise Date Conversation Floating Tabbed page match with Promise Date "&Converted_date&" from View/Update Conversations Page", "Promise Date Value Validated successfully", false
        Else
            WriteToReport micFail, "Promise Date "&sidsss&" In Promise Date Conversation Floating Tabbed page does not match with Promise Date "&Converted_date&" from View/Update Conversations Page", "Promise Date Value NOT Validated successfully", false
        End If

 If  Trim(uyuiyg) = Trim(uyuiyg) Then
              WriteToReport micPass, "Promise Amount "&uyuiyg&" In Promise Date Conversation Floating Tabbed page match with Promise Amount "&uyuiyg&" from View/Update Conversations Page", "Promise Amount Value  Validated successfully", false
        Else
            WriteToReport micFail, "Promise Amount "&uyuiyg&" In Promise Date Conversation Floating Tabbed page does not match with Promise Amount "&uyuiyg&" from View/Update Conversations Page", "Promise Amount Value NOT Validated successfully", false
        End If

If  Trim(collectorqt) = Trim(sidssgrss) Then
              WriteToReport micPass, "Collector "&collectorqt&" In Promise Date Conversation Tabbed page match with Collector "&sidssgrss&" from SQL Query", "Collector Value  Validated successfully", false
        Else
            WriteToReport micFail, "Collector "&collectorqt&" In Promise Date Conversation Tabbed page does not match with Collector "&sidssgrss&" from SQL Query", "Collector Value NOT Validated successfully", false
        End If
 If  Trim(sidssdsds) = "Open" Then
              WriteToReport micPass, "Status "&sidssdsds&" value In Promise Date Conversation Tabbed page is OPEN as expected", "Status Value  Validated successfully", false
        Else
            WriteToReport micFail, "Status "&sidssdsds&" value In Promise Date Conversation Tabbed page is not OPEN as expected", "Status Value NOT Validated successfully", false
        End If
End If

wait 2
 img_click  getObjectInfoFromXML("CreditCardclose_IMG_WebEdit111", objectsFile, "Value"), getObjectInfoFromXML("CreditCardclose_IMG_WebEdit111", objectsFile, "Description")
wait 2
       WriteToReport micDone,"Credit Card Information Page Close Image Clicked","Credit Card Information Page Close Image Clicked",false
wait 2
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Items</span>").Exist(30) Then
            WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", false
        Else
        WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page Loading failed", true
       End If
        

End If

End If                                                                                                                                                                                                                                                                                                                                                                                                                                

End Function


'**************************************************************************************************************
''' <summary> 
'''Display the Contact Email ID along with the Name when a Contact is selected within the Conversation Page.
''' </summary>
''' <author>Swetha Ravoori</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function DisplayEmailalongwithNameContactselected()
	Dim tcObjective,recordCount,bFlag,tableobj,businid,busin,customer,customerid,customeridfnl,promisedate,promisedateid,promisestatus,promisestatusid,promiseamount,promiseamountid,promiseamountidlng,collectorqt,colle,colleiddd,dateese,customeridfnl17,promisedateidfnl,invoiceid,invd1,custid,itemid
WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
            WriteToReport micPass, "View/Update Conversations Page loaded successfully", "View/Update Conversations Page loaded successfully", false
        Else
        WriteToReport micFail, "View/Update Conversations Page not loaded", "View/Update Conversations Page Loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
     element_dblClick  getObjectInfoFromXML("AddNewValue_WebElementchkboxWebEdit111", objectsFile, "Value"),("Add a New Value Tab Clicked")
wait 3

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Add a New Value</span>").Exist(30) Then
      WriteToReport micPass, "Add a New Value Tabbed Page loaded successfully", "Add a New Value Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Add a New Value Tabbed Page not loaded", "Add a New Value Tabbed Page loading failed, so failing the test case", true
        Exit Function
       End If
     setValue_WebEdit getObjectInfoFromXML("setid11_cc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("setid11_cc4_WebEdit111", objectsFile, "Description")
     
     setValue_WebEdit getObjectInfoFromXML("businessunitid11_cc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("businessunitid11_cc4_WebEdit111", objectsFile, "Description")

     wait 3   
    '''''''''''''setting invoice'''''
        
    recordCount = contactnamedata1207((GlobalDictionary("BusinessUnit")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        End If
custid=Trim(recordCount(1))

collectorqt=Trim(recordCount(2))
promiseamount=right(recordCount(2),7)

dateese=right(recordCount(2),5)
        
        setValue_WebEdit getObjectInfoFromXML("customeriid11_cc4_WebEdit111", objectsFile, "Value"),custid,false, getObjectInfoFromXML("customeriid11_cc4_WebEdit111", objectsFile, "Description")
     
btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("ADD Button Clicked")   

if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Conversations</span>").Exist(30) Then
      WriteToReport micPass, "Conversations Tabbed Page loaded successfully", "Conversations Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Conversations Tabbed Page not loaded", "Conversations Tabbed Page loading failed, so failing the test case", true
        Exit Function
       End If
wait 3
setValue_WebEdit getObjectInfoFromXML("Description_TabWebEdit111", objectsFile, "Value"),GlobalDictionary("desc"),false, getObjectInfoFromXML("Description_Tab", objectsFile, "Description")


wait 2
setValue_WebEdit getObjectInfoFromXML("Comments_BoxWebEdit111", objectsFile, "Value"),GlobalDictionary("Comment"),false, getObjectInfoFromXML("Comments_Box", objectsFile, "Description")


wait 2
img_click  getObjectInfoFromXML("creditcardfff_actionff", objectsFile, "Value"), getObjectInfoFromXML("creditcardfff_actionff", objectsFile, "Description")



If GlobalDictionary("BusinessUnit") <> "00017" Then

setValue_WebEdit getObjectInfoFromXML("custmid345", objectsFile, "Value"),promiseamount,false, getObjectInfoFromXML("custmid345", objectsFile, "Description")

Else
setValue_WebEdit getObjectInfoFromXML("custmid345", objectsFile, "Value"),dateese,false, getObjectInfoFromXML("custmid345", objectsFile, "Description")
End If
btn_click  getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"),("Link Clicked")

btn_click  getObjectInfoFromXML("Ok_Btn_WebEdit111", objectsFile, "Value"),("Save Button Clicked")


 Set promisedate = eval(getObjectInfoFromXML("emailddd_id_15008", objectsFile, "Value"))
    promisedateid =promisedate.getROProperty("innertext")

   
   Set promisestatus= eval(getObjectInfoFromXML("telenum_id_15008", objectsFile, "Value"))
   promisestatusid =promisestatus.getROProperty("innertext")



If IsObjectExist(getObjectInfoFromXML("emailddd_id_15008", objectsFile, "Value"), getObjectInfoFromXML("emailddd_id_15008", objectsFile, "Description")) = True Then
		
		  WriteToReport micPass, "Email ID Field is visible and the value is "&promisedateid&" In Conversation Tabbed page ", "Email ID Value  Validated successfully", false
        Else
            WriteToReport micFail, "Email ID Field is not visible and the value is "&promisedateid&" In Conversation Tabbed page ", "Email ID Value not Validated successfully", false
        End If
	If IsObjectExist(getObjectInfoFromXML("telenum_id_15008", objectsFile, "Value"), getObjectInfoFromXML("telenum_id_15008", objectsFile, "Description")) = True Then
		
		  WriteToReport micPass, "Telephone Number Field is visible and the value is "&promisestatusid&" In Conversation Tabbed page ", "Telephone Number Value  Validated successfully", false
        Else
            WriteToReport micFail, "Telephone Number Field is not visible and the value is "&promisestatusid&" In Conversation Tabbed page ", "Telephone Number Value not Validated successfully", false
        End If	

End If

End Function





'**************************************************************************************************************
''' <summary> 
''' Apply Payment - PS and AS400 Invoice manually created
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function ApplyPaymentPSAS400created()
    Dim tcObjective,recordCount,bFlag,tableobj,amnt,amntid,selamt,selamtid,remamt,remamtid,customridd,customr,amtted,amttedidd,vari,patis,patisd,patisls,patislsd,loginPage,userBox,sUserName,tiedSupplierID
    
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", " " & GlobalDictionary("TestObjective") & "  ", False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an existing payment</span>").Exist(30) Then
			WriteToReport micPass, "Create Worksheet Page loaded successfully", "Create Worksheet Page loaded successfully", False
		Else
			WriteToReport micFail, "Create Worksheet Page not loaded", "Create Worksheet Page loading failed, so failing the test case", True
			Exit Function
		End If
	Else
		Exit Function 
	End If

	If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an existing payment</span>").Exist(60) Then
		WriteToReport micPass, "Create Worksheet Page loaded successfully", "Create Worksheet Page loaded successfully", false
	Else
		WriteToReport micFail, "Create Worksheet Page not loaded", "Create Worksheet Page loading failed, so failing the test case", true
		Exit Function
	End If
        
   
    '''''''''''''setting business unit'
	setValue_WebEdit getObjectInfoFromXML("setid_delete", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("setid_delete", objectsFile, "Description")
	Wait 3
	'btn_click getObjectInfoFromXML("serch_delete_ccc", objectsFile, "Value"),("Search Button Clicked")
	Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
	Wait 3

'''''comment: if seach returned only one record, search results table won't be displayed and it navigates to payment worksheet selection page
'If NOT(Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=View All").Exist(5)) AND Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"" id=""PAYMENT_WRK_PAGETITLE"" role=""heading"" aria-level=""1"">Payment Worksheet Selection</span>").Exist(30)  Then
'If Browser("creationtime:=0").Page("title:=Create Worksheet").WebElement("class:=titletext", "innerthtml:=Payment Worksheet Selection").Exist(30)   Then
	If Browser("creationtime:=0").Page("title:=Create Worksheet").WebButton("name:=Return to Search").Exist(10) Then
		WriteToReport micPass, "search button returns only one record", "Successfully navigated to Payment Worksheet Selection Page", false
	else
		WriteToReport micPass, "search button returns more than one record", "Click link to navigate to Payment Worksheet Selection Page", false
		click_Link  getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"),("First Link from search Results Clicked")
		if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Payment Worksheet Selection","index:=1").Exist(30) Then
			WriteToReport micPass, "Payment Worksheet Selection Page loaded successfully", "Payment Worksheet Selection Page loaded successfully", false
		Else
			WriteToReport micFail, "Payment Worksheet Selection Page not loaded", "Payment Worksheet Selection Page loading failed, so failing the test case", true
			Exit Function
		End If
	End If

	Dim paymentAmountVal
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_WRK_PAY_AMT_CUR_LBL").Exist(10) Then
		paymentAmountVal = split(Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_WRK_PAY_AMT_CUR_LBL").GetROProperty("innertext")," ")(0)
	End If

	Set patis = eval(getObjectInfoFromXML("patid_id_15008", objectsFile, "Value"))
	If patis.Exist (10) Then
		patisd =patis.getROProperty("innertext")
	else
	   WriteToReport micFail, "Payment Page not loaded", "Unable to locate patid_id_15008", true
	End If

Set amtted = eval(getObjectInfoFromXML("paymntamtt_id_15008", objectsFile, "Value"))
amttedidd =amtted.getROProperty("innertext")
vari = LEFT(amttedidd, (LEN(amttedidd)-4))
Set customr = eval(getObjectInfoFromXML("custmid_id_15008", objectsFile, "Value"))
customridd =customr.getROProperty("default value")
'If Browser("creationtime:=0").Page("index:=1").WebButton("class:=PSPUSHBUTTONDISABLED","html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
   'btn_click getObjectInfoFromXML("save_cccc", objectsFile, "Value"),("Save Button Clicked")
   Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Click
Else   
    btn_click getObjectInfoFromXML("Build1_Button_1206", objectsFile, "Value"),("Build Button Clicked")
    btn_click getObjectInfoFromXML("okbtnerr_lin", objectsFile, "Value"),("OK Button Clicked to a Warning Message")
     if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_WRK_PAGETITLE").Exist(30) Then
      WriteToReport micPass, "Payment Worksheet Application Page loaded successfully", "Payment Worksheet Application Page loaded successfully", false
        Else
        WriteToReport micFail, "Payment Worksheet Application Page not loaded", "Payment Worksheet Application Page loading failed, so failing the test case", true
        Exit Function
       End If

       WebList_select getObjectInfoFromXML("type_pay_an_item_ccc", objectsFile, "Value"),"Pay An Item",("Pay An Item is selected from the weblist")
        'making sure that the checkbox is checked for the selected pay amt 
        Dim lineNumber
        'For lineNumber = 0 To Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblPAYMENT_ITEM\$0").GetROProperty("rows")
	        'lineNumber = Right(Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&Trim(paymentAmountVal)).getroproperty("html id"),1)
	        lineNumber = Right(Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_WRK_PAY_AMT\$0").getroproperty("html id"),1)
	        If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:="&"PAYMENT_ITEM_ITEM_SELECTED\$"&lineNumber).getroproperty("checked") = 0 Then
	        	Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:="&"PAYMENT_ITEM_ITEM_SELECTED\$"&lineNumber).click()
	        	'Exit For
	        End If
		'Next
		
      Set amnt = eval(getObjectInfoFromXML("amt_bld_2106", objectsFile, "Value"))
      amntid =amnt.getROProperty("innertext")
        Set selamt = eval(getObjectInfoFromXML("selectedamt_bld_2106", objectsFile, "Value"))
       selamtid =selamt.getROProperty("innertext")
       Set remamt= eval(getObjectInfoFromXML("remainingamt_bld_2106", objectsFile, "Value"))
         remamtid =remamt.getROProperty("innertext")
      if amntid = selamtid then
            WriteToReport micPass, "Amount Object Value "&amntid&" Under balance subsection matches with the Selected Object Value "&selamtid&" Under balance subsection", "Amount and Selected Values are Validated successfully", false
        Else
            WriteToReport micFail, "Amount Object Value "&amntid&" Under balance subsection Does Not matches with the Selected Object Value "&selamtid&" Under balance subsection", "Amount and Selected Values Validation failed", false
        End If

       if remamtid = "0.00" then
            WriteToReport micPass, "Remaining Object Value "&remamtid&" Under balance subsection is Zero as expected", "Remaining Value is Validated successfully", false
        Else
            WriteToReport micFail, "Remaining Object Value "&remamtid&" Under balance subsection is Not Zero as expected", "Remaining Value Validation failed", false
        End If

        setValue_WebEdit getObjectInfoFromXML("Type_CCC", objectsFile, "Value"),GlobalDictionary("pye"),false, getObjectInfoFromXML("Type_CCC", objectsFile, "Description")
        'btn_click getObjectInfoFromXML("save_cccc", objectsFile, "Value"),("Save Button Clicked")
        Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Click
        If Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICOK").Exist(20) Then
        	Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICOK").Click
        End If

	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
        if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an existing payment</span>").Exist(50) Then
            WriteToReport micPass, "Create Worksheet Page loaded successfully", "Create Worksheet Page loaded successfully", false
          Else
	        Browser("creationtime:=0").Page("index:=1").Link("innertext:=Create Worksheet","index:=3").Click
	         if NOT(Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an existing payment</span>").Exist(30)) Then
	            Call  WriteToReport(micFail, "Create Worksheet Page not loaded", "Create Worksheet Page loading failed, so failing the test case", True)
	            Exit Function
	          End If
        End If
        
        '''''''''''''setting business unit'
	setValue_WebEdit getObjectInfoFromXML("setid_delete", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("setid_delete", objectsFile, "Description")
	wait 3
	'btn_click getObjectInfoFromXML("serch_delete_ccc", objectsFile, "Value"),("Search Button Clicked")
	Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
	wait 5

'If NOT(Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=View All").Exist(10)) AND Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"" id=""PAYMENT_WRK_PAGETITLE"" role=""heading"" aria-level=""1"">Payment Worksheet Selection</span>").Exist(30)  Then
'If Browser("creationtime:=0").Page("title:=Create Worksheet").WebElement("class:=titletext", "innerthtml:=Payment Worksheet Selection").Exist(30)   Then
If Browser("creationtime:=0").Page("title:=Create Worksheet").WebButton("name:=Return to Search").Exist(10)   Then
	WriteToReport micPass, "search button returns only one record", "since search returns only one record, it directly successfully navigated to Payment Worksheet Selection Page", false
else
        click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"),("First Link from search Results Clicked")
		 if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Payment Worksheet Selection","index:=1").Exist(30) Then
		      WriteToReport micPass, "Payment Worksheet Selection Page loaded successfully", "Payment Worksheet Selection Page loaded successfully", false
		 Else
		        WriteToReport micFail, "Payment Worksheet Selection Page not loaded", "Payment Worksheet Selection Page loading failed, so failing the test case", true
		        Exit Function
		 End If
End If

click_Link getObjectInfoFromXML("worksheet_action_delete_ccc", objectsFile, "Value"),("Worksheet ACtion Link Clicked")
wait 2
End If

	''''''''''''''''''''''''''&*%^%^%^%^*(^*(*('''''''''''''
	login(GlobalDictionary("SignInUser")) 
	if SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True then
	
		''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
		wait 3
       	if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span><abbr class=""PTUNDERLINE"">A</abbr>dd a New Value</span>").Exist(30) Then
            WriteToReport micPass, "Request Receivables Update page loaded successfully", "Request Receivables Update page loaded successfully", false
        Else
	        WriteToReport micFail, "Request Receivables Update Page not loaded", "Request Receivables Update page loading failed, so failing the test case", true
	        Exit Function
        End If

        '''''''''''''setting business unit'    
	    setValue_WebEdit getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Value"),GlobalDictionary("runcntrl"),false, getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Description")    
		'btn_click getObjectInfoFromXML("serch_delete_ccc", objectsFile, "Value"),("Search Button Clicked")
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
		wait 3
		if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(30) Then
      		WriteToReport micPass, "Receivable Update Request tabbed page loaded successfully", "Receivable Update Request tabbed page loaded successfully", false
        Else
	        WriteToReport micFail, "Receivable Update Request tabbed page not loaded", "Receivable Update Request tabbed page loading failed, so failing the test case", true
	        Exit Function
		End If
    
		setValue_WebEdit getObjectInfoFromXML("grp_unit_1504", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("grp_unit_1504", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("acct_from_dt_1504", objectsFile, "Value"),GlobalDictionary("AccountingDateFrom"),false, getObjectInfoFromXML("acct_from_dt_1504", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("acct_to_dt_1504", objectsFile, "Value"),GlobalDictionary("AccountingDateTo"),false, getObjectInfoFromXML("acct_to_dt_1504", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"),("Run Button Clicked")
		wait 5
		check_CheckBox getObjectInfoFromXML("FinalizeandPrint_CHKBOX", objectsFile, "Value"),("Checkbox with CDW_ARWSPOST as Process Name is checked")
		wait 2
		'btn_click getObjectInfoFromXML("okbtn_lin", objectsFile, "Value"),("OK Button Clicked")
		Browser("title:=Request Receivables Update").Page("title:=Request Receivables Update").PSFrame("title:=Process Scheduler Request").WebButton("html id:=#ICSave").Click
		wait 5
		Dim processInstance
		processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
		click_Link getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"),("Process Monitor Link Clicked")
		wait 2
        if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","innerhtml:=Process List").Exist(30) Then
            WriteToReport micPass, "Process Monitor Page loaded successfully", "Process Monitor Page loaded successfully", false
        Else
            WriteToReport micFail, "Process Monitor Page not loaded", "Process Monitor Page loading failed, so failing the test case", true
        End If

		wait 2
		Dim runStatus
		runStatus = getStatus(split(processInstance,":")(1),GlobalDictionary("SignInUser"))
		
		''''''''''''''''''''''''''&*%^%^%^%^*(^*(*('''''''''''''
		if SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True then
		
			''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
			wait 3
			if Browser("creationtime:=0").Page("index:=1").Link("html id:=pthnavbccrefanc_EP_ITEM_OPEN_QUERY_GBL","innerhtml:=Account Overview","index:=0").Exist Then
	            WriteToReport micPass, "Account Overview Page loaded successfully", "Account Overview Page loaded successfully", false
	        Else
		        WriteToReport micFail, "Account Overview Page not loaded", "Account Overview Page loading failed, so failing the test case", true
		        Exit Function 
	        End If

			setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),customridd,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
			wait 2 
			btn_click getObjectInfoFromXML("Search_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")
			wait 3
    		if Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&customridd).exist(15) then
	            WriteToReport micPass, "Item selected in Create Worksheet Page "&customridd&"  matches with the item on Balance tab under Account Overview Page "&customridd&" from Conversations Tabbed Page", "Item Value is Validated successfully", false
	        Else
	            WriteToReport micFail, "Item selected in Create Worksheet Page "&customridd&"  Does not match with the item on Balance  Sub under Account Overview Page "&customridd&" from Conversations Tabbed Page", "Item Value Validation failed", false
	        End If
    	End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Review Conversation
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'26Apr2018			Eric Trout		Updated to filter Conversations so correct one is located.
'**************************************************************************************************************
Public Function ReviewConversationCollectionsWorkbench()
	Dim tcObjective, recordCount, bFlag, tableobj
	Dim subjt, convsubjt, convsubtpk, subtpk, convprommade, prommade, convpromdate, promdate, flowact, convflowact, flowuserid, convflowuserid, flowletter, convflowletter
	Dim refamted, conrelamount, convcurr, revprdate, convrevprdate, key1, convkey1, key2, convkey2, key3, convkey3, contac, convcont, timestamp, convtimestap, convcucophjy, convrevewneed, revewneed, cucophjy, biun
	Dim convdateee,converdat,convdatefinal
	Dim amonter,amonterid

	'tcObjective="Review Credit Card details"
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", " " & GlobalDictionary("TestObjective") & "  ", False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then

		''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
		Wait 3
		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span class=""PAPAGETITLE"" role=""heading"" aria-level=""1"">Collections Workbench</span>").Exist(60) Then
        	WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", False
        Else
        	WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", True
        	Exit Function
        End If

        '''''''''''''setting business unit'    
     	setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"), GlobalDictionary("SetID"), False, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
		biun=GlobalDictionary("BusinessUnit")
		Wait 3

		'''''''''''''setting invoice'''''
		Dim invoiceid,invd1,custid,itemid
		recordCount = revconvvee123((GlobalDictionary("BusinessUnit")))
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			custid=Trim(recordCount(2))

			'itemid=Trim(recordCount(2))	        
	        setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"), custid, False, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
       	End If

		btn_click getObjectInfoFromXML("Search_Btn_nofrmm", objectsFile, "Value"), ("Search Button Clicked")
		Wait 3
		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Items</span>").Exist(30) Then
			WriteToReport micPass, "Items Tabbed subsection loaded successfully", "Items Tabbed subsection loaded successfully", False
		Else
			WriteToReport micFail, "Items Tabbed subsection not loaded", "Items Tabbed subsection loading failed, so failing the test case", True
	        Exit Function
		End If

		element_Click getObjectInfoFromXML("Conversations_TabWebEdit111", objectsFile, "Value"),("Conversation Tabbed subsection Clicked ")
		Wait 2
		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Detail 1</span>").Exist(30) Then
			WriteToReport micPass, "Conversation Tabbed subsection loaded successfully", "Conversation Tabbed subsection loaded successfully", False
		Else
			WriteToReport micFail, "Conversation Tabbed subsection not loaded", "Conversation Tabbed subsection loading failed, so failing the test case", True
			Exit Function
		End If
		'*****Add code to use filter
		'Click Filter Conversatinos
		Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").Link("html id:=CWB_CONVR_WRK_FILTER_PB").click
		
		Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_0").WebEdit("html id:=CWB_FLTCONV_WRK_CONVER_SUBJECT").Set Trim((recordCount(6))) 
	
		'If Promise Status is N then fill in None
		If Trim((recordCount(8))) = "N" Then
			Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_0").WebList("html id:=CWB_FLTCONV_WRK_AR_PROMISE_STATUS").Select "None"
		End If
		
		'Click Search
		Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptModFrame_0").WebButton("html id:=CWB_FLTCONV_WRK_SEARCH_PB\$38\$").Click
		
		Set convdateee = eval(getObjectInfoFromXML("dateconvdateee_WebElement_1206", objectsFile, "Value"))
		converdat = convdateee.getROProperty("innertext")
		Set promdate = eval(getObjectInfoFromXML("reveedateconvd_amounttd_1206", objectsFile, "Value"))
		Wait 3
		img_click getObjectInfoFromXML("expdall_image", objectsFile, "Value"), getObjectInfoFromXML("expdall_image", objectsFile, "Description")
		Wait 2
		WriteToReport micDone, "Show All Columns Image Clicked", "Show All Columns Image Clicked", False
		Set subjt = eval(getObjectInfoFromXML("convsubj_1206", objectsFile, "Value"))
		convsubjt = subjt.getROProperty("innertext")
		Set subtpk = eval(getObjectInfoFromXML("subtopic_1206", objectsFile, "Value"))
		convsubtpk = subtpk.getROProperty("innertext")
		Set prommade = eval(getObjectInfoFromXML("prommade_1206", objectsFile, "Value"))
		convprommade = prommade.getROProperty("innertext")
		If Trim(convsubjt) = Trim((recordCount(6))) Then
			WriteToReport micPass, "Subject Value " & chr(34) & " " & Trim(convsubjt) & " " & chr(34) & " In Conversation floating Tabbed page match with Subject " & chr(34) & " " & Trim(recordCount(5)) & " " & chr(34) & " from SQL Query", "Subject Value  Validated successfully", False
		Else
			WriteToReport micFail, "Subject " & Trim(convsubjt) & " In Conversation floating Tabbed page does not match with Subject " & Trim(recordCount(1)) & " from SQL Query", "Subject Value NOT Validated successfully", True
		End If

		If Trim(convsubtpk) = Trim((recordCount(7))) Then
        	WriteToReport micPass, "Sub-Topic Value " & chr(34) & " " & Trim(convsubtpk) & " " & chr(34) & " In Conversation floating Tabbed page match with Sub-Topic " & chr(34) & " " & Trim(recordCount(6)) & " " & chr(34) & " from SQL Query", "Sub-Topic Value Validated successfully", False
        Else
            WriteToReport micFail, "Sub-Topic " & Trim(convsubtpk) & " In Conversation floating Tabbed page does not match with Sub-Topic " & Trim(recordCount(5)) & " from SQL Query", "Sub-Topic Value NOT Validated successfully", True
        End If

		If Trim(convprommade) = Trim((convprommade)) Then
			WriteToReport micPass, "promise Made Value " & chr(34) & " " & Trim(convprommade) & " " & chr(34) & " In Conversation floating Tabbed page match with promise Made " & chr(34) & " " & Trim(recordCount(8)) & " " & chr(34) & " from SQL Query", "promise Made Value Validated successfully", False
        Else
            WriteToReport micFail, "promise Made " & Trim(convprommade) & " In Conversation floating Tabbed page does not match with promise Made " & Trim(recordCount(54)) & " from SQL Query", "promise Made Value NOT Validated successfully", True
        End If

	   	img_click getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Value"), getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Description")
		Wait 2
 		WriteToReport micDone, "More Info Image Clicked", "More Info Image Clicked", False

		With Browser("title:=Collections Workbench").Page("title:=Collections Workbench")
			'Set promdate = eval(getObjectInfoFromXML("Date_Field_1206", objectsFile, "Value"))
			Set promdate = .WebEdit("html id:=CUST_CONVER_HDR_REVIEW_NEXT_DT")
			convpromdate = promdate.getROProperty("default value")

			'Set revewneed = eval(getObjectInfoFromXML("reveedateconvdateee_WebElement_1206", objectsFile, "Value"))
			Set revewneed = .WebEdit("html id:=CONVR_WRK_REVIEW_DAYS")
			convrevewneed = revewneed.getROProperty("default value")

			'Set flowact = eval(getObjectInfoFromXML("FollowupAction_Webedit_120", objectsFile, "Value"))
			Set flowact = .WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_ACTION")
			convflowact = flowact.getROProperty("default value")

			'Set flowuserid = eval(getObjectInfoFromXML("FollowupuserID_Webedit_120", objectsFile, "Value"))
			Set flowuserid = .WebEdit("html id:=CUST_CONVER_HDR_FOLLOW_UP_OPRID")
			convflowuserid = flowuserid.getROProperty("default value")

			'Set flowletter= eval(getObjectInfoFromXML("FollowupLetter_Webedit_120", objectsFile, "Value"))
			Set flowletter = .WebEdit("html id:=CUST_CONVER_HDR_LETTER_CD")
			convflowletter = flowletter.getROProperty("default value")

			'Set refamted= eval(getObjectInfoFromXML("ReferencetotalsAmt_Webedit_120", objectsFile, "Value"))
			Set refamted = .WebEdit("html id:=CUST_CONVER_HDR_PROMISE_AMT")
			conrelamount = refamted.getROProperty("default value")

			'Set cucophjy= eval(getObjectInfoFromXML("ReferencetotalsCurrency_Webedit_120", objectsFile, "Value"))
			Set cucophjy = .WebEdit("html id:=CUST_CONVER_HDR_CURRENCY_CD")
			convcucophjy = cucophjy.getROProperty("default value")

			'Set revprdate= eval(getObjectInfoFromXML("ReferencetotalsDate_Webedit_120", objectsFile, "Value"))
			Set revprdate = .WebEdit("html id:=CUST_CONVER_HDR_PROMISE_DT")
			convrevprdate =revprdate.getROProperty("default value")

			'Set key1= eval(getObjectInfoFromXML("Keyword1_Webedit_120", objectsFile, "Value"))
			Set key1 = .WebEdit("html id:=CUST_CONVER_HDR_KEYWORD1")
			convkey1 = key1.getROProperty("default value")

			'Set key2= eval(getObjectInfoFromXML("Keyword2_Webedit_120", objectsFile, "Value"))
			Set key2 = .WebEdit("html id:=CUST_CONVER_HDR_KEYWORD2")
			convkey2 = key2.getROProperty("default value")

			'Set key3= eval(getObjectInfoFromXML("Keyword3_Webedit_1206", objectsFile, "Value"))
			Set key3 = .WebEdit("html id:=CUST_CONVER_HDR_KEYWORD3")
			convkey3 = key3.getROProperty("default value")

			'Set contac= eval(getObjectInfoFromXML("ContactID_Conver_WebElement_1206", objectsFile, "Value"))
			Set contac = .WebElement("html id:=win0divCUST_CONVER_EMAILID\$0")
			convcont = contac.getROProperty("default value")

			'Set timestamp= eval(getObjectInfoFromXML("timestamp_WebElement_1206", objectsFile, "Value"))
			Set timestamp = .WebElement("html id:=CUST_CONVER_CONVER_DTTM\$0")
			convtimestap = timestamp.getROProperty("default value")
		End With

		If Trim(convsubjt) = Trim((recordCount(6))) Then
        	WriteToReport micPass, "Subject Value "&chr(34)&" "&Trim(convsubjt)&" "&chr(34)&" In Conversation floating Tabbed page match with Subject "&chr(34)&" "&Trim(recordCount(6))&" "&chr(34)&" from SQL Query", "Subject Value  Validated successfully", false
        Else
            WriteToReport micFail, "Subject "&Trim(convsubjt)&" In Conversation floating Tabbed page does not match with Subject "&Trim(recordCount(6))&" from SQL Query", "Subject Value NOT Validated successfully", true
        End If

		If Trim(convsubtpk) = Trim((recordCount(7))) Then
  			WriteToReport micPass, "Sub-Topic Value "&chr(34)&" "&Trim(convsubtpk)&" "&chr(34)&" In Conversation floating Tabbed page match with Sub-Topic "&chr(34)&" "&Trim(recordCount(7))&" "&chr(34)&" from SQL Query", "Sub-Topic Value  Validated successfully", false
        Else
            WriteToReport micFail, "Sub-Topic "&Trim(convsubtpk)&" In Conversation floating Tabbed page does not match with Sub-Topic "&Trim(recordCount(7))&" from SQL Query", "Sub-Topic Value NOT Validated successfully", true
        End If

'		If Trim((recordCount(8))) = Trim((recordCount(9))) then
'              WriteToReport micPass, "promise Made Value "&chr(34)&" "&Trim(convprommade)&" "&chr(34)&" In Conversation floating Tabbed page match with promise Made "&chr(34)&" "&Trim(recordCount(8))&" "&chr(34)&" from SQL Query", "promise Made Value  Validated successfully", false
'        Else
'            WriteToReport micFail, "promise Made "&Trim(convprommade)&" In Conversation floating Tabbed page does not match with promise Made "&Trim(recordCount(54))&" from SQL Query", "promise Made Value NOT Validated successfully", true
'        End If

		If Trim(convpromdate) = Trim((recordCount(9))) Then
        	WriteToReport micPass, "Review Date  Value "&chr(34)&" "&Trim(convpromdate)&" "&chr(34)&" In Conversation floating Tabbed page match with Review Date "&chr(34)&" "&Trim(recordCount(9))&" "&chr(34)&" from SQL Query", "Review Date Value  Validated successfully", false
        Else
            WriteToReport micFail, "Review Date "&Trim(convpromdate)&" In Conversation floating Tabbed page does not match with Review Date "&Trim(recordCount(9))&" from SQL Query", "Review Date  Value NOT Validated successfully", true
        End If

		If Trim(convpromdate) = Trim(convpromdate)   Then
            WriteToReport micPass, "Review needed  Value "&chr(34)&" "&Trim(convpromdate)&" "&chr(34)&" In Conversation floating Tabbed page match with Review needed "&chr(34)&" "&Trim(recordCount(9))&" "&chr(34)&" from SQL Query", "Review needed Value  Validated successfully", false
        Else
            WriteToReport micFail, "Review needed "&Trim(convpromdate)&" In Conversation floating Tabbed page does not match with Review needed "&Trim(recordCount(7))&" from SQL Query", "Review needed  Value NOT Validated successfully", true
        End If

		If Trim(convflowact) = Trim((recordCount(14))) Then
            WriteToReport micPass, "Follow Up Action  Value "&chr(34)&" "&Trim(convflowact)&" "&chr(34)&" In Conversation floating Tabbed page match with Follow Up Action "&chr(34)&" "&Trim(recordCount(14))&" "&chr(34)&" from SQL Query", "Follow Up Action Value  Validated successfully", false
        Else
            WriteToReport micFail, "Follow Up Action "&Trim(convflowact)&" In Conversation floating Tabbed page does not match with Follow Up Action "&Trim(recordCount(14))&" from SQL Query", "Follow Up Action  Value NOT Validated successfully", true
        End If

		If Trim(convflowuserid) = Trim((recordCount(15))) Then
            WriteToReport micPass, "Follow Up User ID  Value "&chr(34)&" "&Trim(convflowuserid)&" "&chr(34)&" In Conversation floating Tabbed page match with Follow Up User ID "&chr(34)&" "&Trim(recordCount(15))&" "&chr(34)&" from SQL Query", "Follow Up User ID Value  Validated successfully", false
        Else
            WriteToReport micFail, "Follow Up User ID "&Trim(convflowuserid)&" In Conversation floating Tabbed page does not match with Follow Up User ID "&Trim(recordCount(15))&" from SQL Query", "Follow Up User ID  Value NOT Validated successfully", true
        End If

		If Trim(convflowletter) = Trim((recordCount(24))) Then
            WriteToReport micPass, "Follow Up Letter  Value "&chr(34)&" "&Trim(convflowletter)&" "&chr(34)&" In Conversation floating Tabbed page match with Follow Up Letter "&chr(34)&" "&Trim(recordCount(24))&" "&chr(34)&" from SQL Query", "Follow Up User Letter Value  Validated successfully", false
        Else
            WriteToReport micFail, "Follow Up Letter "&Trim(convflowletter)&" In Conversation floating Tabbed page does not match with Follow Up Letter  "&Trim(recordCount(24))&" from SQL Query", "Follow Up User Letter  Value NOT Validated successfully", true
        End If

		If CLng((recordCount(4))) = CLng(Replace("" & conrelamount & "",",","")) Then
          	WriteToReport micPass, "Reference Totals Amount Value "&chr(34)&" "&Trim(conrelamount)&" "&chr(34)&" In Conversation floating Tabbed page match with Reference Totals Amount "&chr(34)&" "&Trim(conrelamount)&" "&chr(34)&" from SQL Query", "Reference Totals Amount Value  Validated successfully", false
        Else
            WriteToReport micFail, "Reference Totals Amount "&Trim(conrelamount)&" In Conversation floating Tabbed page does not match with Reference Totals Amount "&Trim(recordCount(4))&" from SQL Query", "Reference Totals Amount Value NOT Validated successfully", true
        End If

		If Trim(convcucophjy) = Trim((recordCount(17))) Then
            WriteToReport micPass, "Reference Totals Currency Value "&chr(34)&" "&Trim(convcucophjy)&" "&chr(34)&" In Conversation floating Tabbed page match with Reference Totals Currency "&chr(34)&" "&Trim(recordCount(17))&" "&chr(34)&" from SQL Query", "Reference Totals Currency Value  Validated successfully", false
        Else
            WriteToReport micFail, "Reference Totals Currency "&Trim(convcucophjy)&" In Conversation floating Tabbed page does not match with Reference Totals Currency "&Trim(recordCount(17))&" from SQL Query", "Reference Totals Currency Value NOT Validated successfully", true
        End If

		If Trim(convrevprdate) = Trim((recordCount(11))) Then
            WriteToReport micPass, "Reference Totals Promise Date Value "&chr(34)&" "&Trim(convrevprdate)&" "&chr(34)&" In Conversation floating Tabbed page match with Reference Totals Promise Date "&chr(34)&" "&Trim(recordCount(11))&" "&chr(34)&" from SQL Query", "Reference Totals Promise Date Value  Validated successfully", false
        Else
            WriteToReport micFail, "Reference Totals Promise Date "&chr(34)&" "&Trim(convrevprdate)&" "&chr(34)&" In Conversation floating Tabbed page does not match with Reference Totals Promise Date "&Trim(recordCount(11))&" from SQL Query", "Reference Totals Promise Date Value NOT Validated successfully", true
        End If

		If Trim(convkey1) = Trim((recordCount(26))) Then
            WriteToReport micPass, "Keyword 1 Value "&chr(34)&" "&Trim(convkey1)&" In Conversation floating Tabbed page match with Keyword 1 "&chr(34)&" "&Trim(recordCount(26))&" "&chr(34)&" from SQL Query", "Keyword 1 Value  Validated successfully", false
        Else
            WriteToReport micFail, "Keyword 1 "&chr(34)&" "&Trim(convkey1)&" "&chr(34)&" In Conversation floating Tabbed page does not match with Keyword 1 "&chr(34)&" "&Trim(recordCount(26))&" "&chr(34)&" from SQL Query", "Keyword 1 Value NOT Validated successfully", true
        End If

		If Trim(convkey2) = Trim((recordCount(27))) Then
            WriteToReport micPass, "Keyword 2 Value "&chr(34)&" "&Trim(convkey2)&" "&chr(34)&" In Conversation floating Tabbed page match with Keyword 2 "&chr(34)&" "&Trim(recordCount(27))&" "&chr(34)&" from SQL Query", "Keyword 2 Value  Validated successfully", false
        Else
            WriteToReport micFail, "Keyword 2 "&Trim(convkey2)&" In Conversation floating Tabbed page does not match with Keyword 2 "&Trim(recordCount(27))&" from SQL Query", "Keyword 2 Value NOT Validated successfully", true
        End If

		If Trim(convkey3) = Trim((recordCount(28))) Then
        	WriteToReport micPass, "Keyword 3 Value "&chr(34)&" "&Trim(convkey2)&" "&chr(34)&" In Conversation floating Tabbed page match with Keyword 3 "&chr(34)&" "&Trim(recordCount(28))&" "&chr(34)&" from SQL Query", "Keyword 3 Value  Validated successfully", false
        Else
            WriteToReport micFail, "Keyword 3 "&Trim(convkey2)&" In Conversation floating Tabbed page does not match with Keyword 3 "&Trim(recordCount(28))&" from SQL Query", "Keyword 3 Value NOT Validated successfully", true
        End If

		Dim tmeesdasd, tmeesdasdid, comnhehyi, comnhehyiid, userdfj, userdfjid
		Set tmeesdasd= eval(getObjectInfoFromXML("timestamp_WebElement_1206", objectsFile, "Value"))
		tmeesdasdid =tmeesdasd.getROProperty("innertext")
		Set comnhehyi= eval(getObjectInfoFromXML("Comments_BoxWebEdit111", objectsFile, "Value"))
		comnhehyiid =comnhehyi.getROProperty("innertext")
		Set userdfj= eval(getObjectInfoFromXML("CreatedBy_Webelement", objectsFile, "Value"))
		userdfjid =userdfj.getROProperty("innertext")
   		If Trim(tmeesdasdid) = Trim(tmeesdasdid) Then
            WriteToReport micPass, "Time Stamp Field Value "&chr(34)&" "&Trim(tmeesdasdid)&" "&chr(34)&" In Conversation floating Tabbed page match with Time Stamp Field "&chr(34)&" "&Trim(recordCount(5))&" "&chr(34)&" from SQL Query", "Time Stamp Field Value  Validated successfully", false
        Else
            WriteToReport micFail, "Time Stamp Field "&Trim(tmeesdasdid)&" In Conversation floating Tabbed page does not match with  Time Stamp "&Trim(recordCount(4))&" from SQL Query", "Time Stamp Field Value NOT Validated successfully", true
        End If

		Dim comments_data
		comments_data = DataTable.Value("DESCRLONG", "revlist"&biun)
 		If Trim(comnhehyiid) = Trim(comments_data) Then
            WriteToReport micPass, "Comments Field Value "&chr(34)&" "&Trim(comnhehyiid)&" "&chr(34)&" In Conversation floating Tabbed page match with Comments Field "&chr(34)&" "&Trim(recordCount(11))&" "&chr(34)&" from SQL Query", "Comments  Field Value  Validated successfully", false
        Else
            WriteToReport micFail, "Comments Field "&Trim(comnhehyiid)&" In Conversation floating Tabbed page does not match with omments Field "&Trim(recordCount(11))&" from SQL Query", "Comments F Field Value NOT Validated successfully", true
        End If

 		If Trim(userdfjid) = Trim((recordCount(20))) Then
            WriteToReport micPass, "Contact ID  Field Value "&chr(34)&" "&Trim(userdfjid)&" "&chr(34)&" In Conversation floating Tabbed page match with Contact ID  Field "&chr(34)&" "&Trim(recordCount(20))&" "&chr(34)&" from SQL Query", "Contact ID   Field Value  Validated successfully", false
        Else
            WriteToReport micFail, "Contact ID  Field "&Trim(userdfjid)&" In Conversation floating Tabbed page does not match with Contact ID  Field "&Trim(recordCount(20))&" from SQL Query", "Contact ID Field Value NOT Validated successfully", true
        End If

		Wait 2
		element_Click getObjectInfoFromXML("Reference_Tab_1206", objectsFile, "Value"),("Reference Tabbed Subsection Clicked")

		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">References</span>").Exist(30) Then
            WriteToReport micPass, "Able to navigate to the Reference Tabbed Subsection and loaded successfully", "References Tabbed Subsection loaded successfully", False
        Else
	        WriteToReport micFail, "References Tabbed Subsection not loaded", "References Tabbed Subsection loading failed, so failing the test case", True
	        Exit Function
        End If

		Wait 2
		Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=<abbr class=""PTUNDERLINE"">A</abbr>ttachments").click
		Wait 2 
		WriteToReport micDone, "Attachments Tabbed Subsection Clicked","Attachments Tabbed Subsection Clicked", False

		If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Attachments</span>").Exist(30) Then
            WriteToReport micPass, "Able to navigate to the Attachments Tabbed Subsection and loaded successfully", "Attachments Tabbed Subsection loaded successfully", False
        Else
	        WriteToReport micFail, "Attachments Tabbed Subsection not loaded", "Attachments Tabbed Subsection loading failed, so failing the test case", True
	        Exit Function
        End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
'''Credit Card Worksheet - Approved CC transactions appear
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function CrdCrdWorksheetApprovedCCtrans()
	Dim tcObjective,recordCount,depositunit,depositunitadd,dpttifj,dpttifjadd,ctdhju,ctdhjuadd,itmadd,itm,selkamt,selkamtadd,pendg,pendgamt,ctdhjuaddlf,statsssidf,statsss

WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist Then
            WriteToReport micPass, "Update Worksheet Page loaded successfully", "Update Worksheet Page loaded successfully", false
        Else
        WriteToReport micFail, "Update Worksheet Page not loaded", "Update Worksheet Page Loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    

setValue_WebEdit getObjectInfoFromXML("setid_delete", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("setid_delete", objectsFile, "Description")
    
     wait 3   
    '''''''''''''setting invoice'''''
       Dim invoiceid,invd1,custid,itemid,subj
    recordCount = depositid1114((GlobalDictionary("BusinessUnit")))
If IsArrayEmpty(recordCount) Then
    GlobalDictionary("dataAvailable") = false
          Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
            Exit function
          else
        GlobalDictionary("dataAvailable") = True
        End If
custid=Trim(recordCount(1))

        
        setValue_WebEdit getObjectInfoFromXML("deposit_id_id1114", objectsFile, "Value"),custid,false, getObjectInfoFromXML("deposit_id_id1114", objectsFile, "Description")
    

btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
wait 2


If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Detail 1</span>").Exist Then 
             WriteToReport micPass, "Credit Card Worksheet Application Page loaded successfully", "Credit Card Worksheet Application Page loaded successfully", false
        Else
        WriteToReport micFail, "Credit Card Worksheet ApplicationPage not loaded", "Credit Card Worksheet Application Page Loading failed, so failing the test case", true
       End If

wait 3


Set depositunit = eval(getObjectInfoFromXML("save_deposit_unit_id1114", objectsFile, "Value"))
depositunitadd =depositunit.getROProperty("innertext")

Set dpttifj = eval(getObjectInfoFromXML("save_deposit_ID_id1114", objectsFile, "Value"))
dpttifjadd =dpttifj.getROProperty("innertext")

Set ctdhju= eval(getObjectInfoFromXML("save_Customer_ID_id1114", objectsFile, "Value"))
ctdhjuadd =ctdhju.getROProperty("innertext")
ctdhjuaddlf=Left(ctdhjuadd,7)

Set itm= eval(getObjectInfoFromXML("save_ITEM_ID_id1114", objectsFile, "Value"))
itmadd =itm.getROProperty("default value")

Set pendg= eval(getObjectInfoFromXML("amt_bld_2106", objectsFile, "Value"))
pendgamt =pendg.getROProperty("innertext")

Set selkamt= eval(getObjectInfoFromXML("remainingamt_bld_2106", objectsFile, "Value"))
selkamtadd =selkamt.getROProperty("innertext")

If pendgamt = selkamtadd Then
	    WriteToReport micPass, "Amount "&pendgamt&" is equal to Remaining Amount "&selkamtadd&" So the Worksheet is Balanced", " Amount  is equal to Remaining Amount  ", false
        Else
        WriteToReport micFail, "Amount "&pendgamt&" is not equal to Remaining Amount "&selkamtadd&"", " Amount is not equal to Remaining Amount  ", true
        
End If
Dim loginPage,userBox,sUserName,tiedSupplierID 


login(GlobalDictionary("SignInUser1")) 


if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist Then
            WriteToReport micPass, "Update Worksheet Page loaded successfully", "Update Worksheet Page loaded successfully", false
        Else
        WriteToReport micFail, "Update Worksheet Page not loaded", "Update Worksheet Page Loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    

setValue_WebEdit getObjectInfoFromXML("setid_delete", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("setid_delete", objectsFile, "Description")
   
   setValue_WebEdit getObjectInfoFromXML("deposit_id_id1114", objectsFile, "Value"),custid,false, getObjectInfoFromXML("deposit_id_id1114", objectsFile, "Description")
    

btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
wait 2


If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Detail 1</span>").Exist Then 
             WriteToReport micPass, "Credit Card Worksheet Application Page loaded successfully", "Credit Card Worksheet Application Page loaded successfully", false
        Else
        WriteToReport micFail, "Credit Card Worksheet ApplicationPage not loaded", "Credit Card Worksheet Application Page Loading failed, so failing the test case", true
       End If

wait 3
     wait 3 

click_Link  getObjectInfoFromXML("worksheet_action_delete_ccc", objectsFile, "Value"),("Worksheet ACtion Link Clicked")
wait 2


If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=REALTIME_WRK_RTM_PROCESS_LIST").Exist Then
    WriteToReport micPass, "Posting Action Value Already posted ", "Payment Action Value Already posted successfully", false
        Else
    WebList_select getObjectInfoFromXML("PostingAction_Weblist", objectsFile, "Value"),"Batch Standard",("Batch Standard is selected from Posting Action weblist")
wait 2    
btn_click  getObjectInfoFromXML("Ok_Button", objectsFile, "Value"),("OK Button Clicked")
 btn_click  getObjectInfoFromXML("okbtnerr_lin", objectsFile, "Value"),("OK Button Clicked to a Warning Message")

End If



End If

''''''''''''''''''''''''''&*%^%^%^%^*(^*(*('''''''''''''
login(GlobalDictionary("SignInUser")) 


if SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span><abbr class=""PTUNDERLINE"">A</abbr>dd a New Value</span>").Exist Then
            WriteToReport micPass, "Request Receivables Update Page loaded successfully", "Request Receivables Update Page loaded successfully", false
        Else
        WriteToReport micFail, "Request Receivables Update Page not loaded", "Request Receivables Update Page loading failed, so failing the test case", true
        Exit Function
        
        End If
        '''''''''''''setting business unit'    
setValue_WebEdit getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Value"),GlobalDictionary("runcntrl"),false, getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Description")    

'btn_click  getObjectInfoFromXML("serch_delete_ccc", objectsFile, "Value"),("Search Button Clicked")
Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
wait 3

 if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist Then
      WriteToReport micPass, "Receivable Update Tabbed Page Request loaded successfully", "Receivable Update Request Tabbed Page loaded successfully", false
        Else
        WriteToReport micFail, "Receivable Update Tabbed Page Requestnot loaded", "Receivable Update Request Tabbed Page loading failed, so failing the test case", true
        Exit Function
       
 End If


    
setValue_WebEdit getObjectInfoFromXML("grp_unit_1504", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("grp_unit_1504", objectsFile, "Description")

setValue_WebEdit getObjectInfoFromXML("acct_from_dt_1504", objectsFile, "Value"),GlobalDictionary("AccountingDateFrom"),false, getObjectInfoFromXML("acct_from_dt_1504", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("acct_to_dt_1504", objectsFile, "Value"),GlobalDictionary("AccountingDateTo"),false, getObjectInfoFromXML("acct_to_dt_1504", objectsFile, "Description")


btn_click  getObjectInfoFromXML("Run_Button", objectsFile, "Value"),("Run Button Clicked")
wait 2
check_CheckBox getObjectInfoFromXML("FinalizeandPrint_CHKBOX", objectsFile, "Value"),("Checkbox with CDW_ARWSPOST as Process Name is checked")
wait 2
btn_click  getObjectInfoFromXML("okbtn_lin", objectsFile, "Value"),("OK Button Clicked")
wait 5
Dim processInstance
processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")

click_Link  getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"),("Process Monitor Link Clicked")
wait 2
 if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","innerhtml:=Process List").Exist Then
            WriteToReport micPass, "Process Monitor Page loaded successfully", "Process Monitor Page loaded successfully", false
        Else
            WriteToReport micFail, "Process Monitor Page not loaded", "Process Monitor Page loading failed, so failing the test case", true
            
        End If
wait 2

Dim runStatus
   runStatus = getStatus(split(processInstance,":")(1),GlobalDictionary("SignInUser"))

End If

if SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True then

''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
wait 3
if Browser("creationtime:=0").Page("index:=1").Link("html id:=pthnavbccrefanc_EP_ITEM_OPEN_QUERY_GBL","innerhtml:=Account Overview","index:=0").Exist Then
            WriteToReport micPass, "Account Overview Page loaded successfully", "Account Overview Page loaded successfully", false
        Else
        WriteToReport micFail, "Account Overview Page not loaded", "Account Overview Page loading failed, so failing the test case", true
        Exit Function 
        End If
    
    
setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),ctdhjuaddlf,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
   wait 2 
   btn_click  getObjectInfoFromXML("Search_Btn_WebEdit111", objectsFile, "Value"),("Search Button Clicked")
   wait 3


  
    if ctdhjuaddlf = ctdhjuaddlf then
            WriteToReport micPass, "Item selected in Update Worksheet Page "&ctdhjuaddlf&"  matches with the item on  Account Overview Page "&ctdhjuaddlf&"", "Item Value is Validated successfully", false
        Else
            WriteToReport micFail, "Item selected in Update Worksheet Page "&ctdhjuaddlf&"  Does not match with the item on Account Overview Page "&ctdhjuaddlf&"", "Item Value Validation failed", false
        End If
  click_Link  getObjectInfoFromXML("linkclick_item1_checked", objectsFile, "Value"),("Item ID Link Clicked")  
    
    Set statsss = eval(getObjectInfoFromXML("Attac_staus_item_1206", objectsFile, "Value"))
statsssidf =statsss.getROProperty("innertext")
   
if statsssidf = "Closed" then
            WriteToReport micPass, "Status of Item selected in Create Worksheet Page is "&statsssidf&"  as expected", "Status of Item Value is Validated successfully", false
        Else
            WriteToReport micFail, "Status of Item selected in Create Worksheet Page is "&statsssidf&"  not as expected", "Status of Item Value is Validation Failed", false
        End If

End If
    
    
    
End If
End Function







'**************************************************************************************************************
''' <summary> 
''' v Function is to verify the AR11_19 Review Credit Card information - CC type, CC number, last 4 digits, expiration month and year
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function revCCInfo()
		'	Err.Clear
'    On Error Resume Next  
Dim bSetSecure, InvNoLngPendg, ccnumber, verifyccdetails, cctype
    bSetSecure = False
   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
 if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then	
 
  if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
            Call WriteToReport(micPass, "Summary Page", "Successfully Navigated to Summary Page", False)
               else
            Call WriteToReport(micFail, "Summary Page", "Failed to load Summary Page", True)
        End If 
        

 InvNoLngPendg = dbFetchInvNoLngPendg(GlobalDictionary("BusinessUnit"))		     
 If IsArrayEmpty(InvNoLngPendg) Then
     GlobalDictionary("dataAvailable") = false
 	   Call WriteToReport(micDone, "WARNING :Deposit unit or Customer", "DB query returned zero records ",True)
 	   Exit function
	   else
      GlobalDictionary("dataAvailable") = True  
    call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT", InvNoLngPendg(0),"BusinessUnit")
	call click_Lookup_Img_And_Select_Item("Look up Invoice.*","BI_HDR_INVOICE",InvNoLngPendg(2),"Invoice")
	setValue_WebEdit getObjectInfoFromXML("CustomerID_WebEdit", objectsFile, "Value"),InvNoLngPendg(1),bSetSecure, getObjectInfoFromXML("CustomerID_WebEdit", objectsFile, "Description")
	    
 End If
 btn_click  getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
 
          if Browser("creationtime:=0").Page("index:=1").Link("innerhtml:=View Credit Card Pmt","index:=0").Exist(30) Then
            Call WriteToReport(micPass, "Summary Page", "Summary Page loaded Successfully", False)
               else
            Call WriteToReport(micFail, "Summary Page", "Failed to load Summary Page", True)
        End If 
 
 click_Link getObjectInfoFromXML("ViewCCpay_Link", objectsFile, "Value"), getObjectInfoFromXML("ViewCCpay_Link", objectsFile, "Description")
 
 verifyccdetails = dbFetchInvNoLngPendgCreditInfo(GlobalDictionary("BusinessUnit"),InvNoLngPendg(2))	
 

  If verifyccdetails(3) = GlobalDictionary("databaseCC")  Then
	verifyValue getObjectInfoFromXML("CCNumb1_WebElement", objectsFile, "Value"),GlobalDictionary("appCC"),"innerhtml","Credit Card Number"
      ElseIf verifyccdetails(3) = "3456" Then
    verifyValue getObjectInfoFromXML("CCNumb1_WebElement", objectsFile, "Value"),"XXXXXXXXXXXX3456","innerhtml","Credit Card Number"   
ELSE verifyccdetails(3) = "4444" 
 verifyValue getObjectInfoFromXML("CCNumb1_WebElement", objectsFile, "Value"),"XXXXXXXXXXXX4444","innerhtml","Credit Card Number"
 End If 
 
 cctype = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BI_HDR_CRCARD_CR_CARD_TYPE\$0").GetROProperty("innerhtml")
 
 If UCase(Replace(verifyccdetails(2)," ","")) = UCase(Replace(cctype," ","")) Then
      Call WriteToReport(micPass, "Credit Card Type", "The expected value "&UCase(verifyccdetails(2))&" matches with actual value "&UCase(cctype), False) 
           ElseIf UCase(verifyccdetails(2)) = "AMEX" Then
      Call WriteToReport(micPass, "Credit Card Type", "The expected value AMERICAN EXPRESS matches with actual value  "&UCase(cctype), True)
         else
      Call WriteToReport(micFail, "Credit Card Type", "The expected value "&UCase(verifyccdetails(2))&" does not match with actual value  "&UCase(cctype), True)   
 End If
 
 
 
 verifyValue getObjectInfoFromXML("ExpMonth1_WebElement", objectsFile, "Value"),verifyccdetails(4),"innerhtml","Expiration Month"
 verifyValue getObjectInfoFromXML("ExpYear1_WebElement", objectsFile, "Value"),verifyccdetails(5),"innerhtml","Expiration Year"
 
 
 
 End If
  'on Error goto 0
End Function

'**************************************************************************************************************
''' <summary> 
''' editDelExitConv Function is to verify the AR12_09 Edit/Delete Existing Conversation - Supervisor Only
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function editDelExitConv()
	Dim bSetSecure, editDelConv, TimestampBefore, UserBefore, TimestampAfter, UserAfter
	Dim editDelConv1

	'Err.Clear
	'On Error Resume Next
	bSetSecure = False
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Successfully Navigated to Collections Workbench Page", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		editDelConv = dbFetchEditDelConv(GlobalDictionary("BusinessUnit"))		     
		If IsArrayEmpty(editDelConv) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ",True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True  
			Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
			Call click_Lookup_Img_And_Select_Item("Look up Unit.*", "SP_BU_CS2_CLSVW_BUSINESS_UNIT", editDelConv(0), "BusinessUnit")
			Call click_Lookup_Img_And_Select_Item("Look up Customer.*", "AR_CUST_ALL_VW_CUST_ID", editDelConv(1), "Customer")
			btn_click getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations", "index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		If IsObjectExist(getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")) = True Then
			element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
		End If

		If IsObjectExist(getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Value"), getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Value"), getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Description")
		End If

		If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CWB_FLTCONV_WRK_CONVER_STATUS","index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Filter Conversation Page", "Filter Conversation Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Filter Conversation Page", "Failed to load Filter Conversation Page", True)
		End If

		WebList_select getObjectInfoFromXML("Conv_Status", objectsFile, "Value"), "New", getObjectInfoFromXML("Conv_Status", objectsFile, "Description")       
		btn_click getObjectInfoFromXML("Search_Button1", objectsFile, "Value"), getObjectInfoFromXML("Search_Button1", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations", "index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		Call FilterConversationNew()
		img_click getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Value"), getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Description")
		Call WriteToReport(micPass, "More Info Button", "More Info Button is Clicked Successfully", False)
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_LAST_UPDATE_DTTM\$0").Exist(10) Then
			TimestampBefore = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_LAST_UPDATE_DTTM\$0").GetROProperty("innertext")
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
			Exit Function
		End If

		UserBefore = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_OPRID_LAST_UPDT\$0").GetROProperty("innertext")

		'Browser("creationtime:=0").Page("index:=1").WebEdit("name:=CUST_CONVER_DESCRLONG\$0","index:=1").Set "Test Conversation"
		'Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICApply").Click
		btn_click getObjectInfoFromXML("EditEntry_Button", objectsFile, "Value"), getObjectInfoFromXML("EditEntry_Button", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Comments_Box2", objectsFile, "Value"), "Edited Test Conv", bSetSecure, getObjectInfoFromXML("Comments_Box2", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Apply_Btn", objectsFile, "Value"), getObjectInfoFromXML("Apply_Btn", objectsFile, "Description")
		Wait 5
		btn_click getObjectInfoFromXML("Ok_Btn", objectsFile, "Value"), getObjectInfoFromXML("Ok_Btn", objectsFile, "Description")
		Wait 3
		img_click getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Value"), getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_LAST_UPDATE_DTTM\$0").Exist(60) Then
			TimestampAfter = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_LAST_UPDATE_DTTM\$0").GetROProperty("innertext")
		End If

		UserAfter = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_OPRID_LAST_UPDT\$0").GetROProperty("innertext")
		Call WriteToReport(micPass, "Last Modified TimeStamp", "Last Modified TimeStamp changed from "&TimestampBefore&" to "&TimestampAfter&"", False)
		Call WriteToReport(micPass, "Last Modified User", "Last Modified User Changed from "&UserBefore&" to "&UserAfter&"", False)
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICCancel").Click
		Wait 2
		img_click getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Value"), getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Description")
		Call WriteToReport(micPass, "More Info Button", "More Info Button is Clicked Successfully", False)
		Wait 5
		btn_click getObjectInfoFromXML("Delete_Entry", objectsFile, "Value"), getObjectInfoFromXML("Delete_Entry", objectsFile, "Description")
		Wait 2
		Call WriteToReport(micPass, "Value in Comments Box", "Verified Value in comment box is deleted", False)
		btn_click getObjectInfoFromXML("Cancel_Button", objectsFile, "Value"), getObjectInfoFromXML("Cancel_Button", objectsFile, "Description")
	End If

	Call login(GlobalDictionary("SignInUser1"))
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Successfully Navigated to Collections Workbench Page", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		editDelConv1 = dbFetchEditDelConv1(GlobalDictionary("BusinessUnit"))		     
		If IsArrayEmpty(editDelConv1) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ",True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True  
			Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
			Call click_Lookup_Img_And_Select_Item("Look up Unit.*", "SP_BU_CS2_CLSVW_BUSINESS_UNIT", editDelConv1(0), "BusinessUnit")
			Call click_Lookup_Img_And_Select_Item("Look up Customer.*", "AR_CUST_ALL_VW_CUST_ID", editDelConv1(1), "Customer")
			btn_click getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
		End If

		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		If IsObjectExist(getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")) = True Then
			element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
		End If

		If IsObjectExist(getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Value"), getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Description")) = True Then
			click_Link getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Value"), getObjectInfoFromXML("FilterConversation_Link", objectsFile, "Description")
		End If

		If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CWB_FLTCONV_WRK_CONVER_STATUS","index:=0").Exist(30) Then
			Call WriteToReport(micPass, "Filter Conversation Page", "Filter Conversation Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Filter Conversation Page", "Failed to load Filter Conversation Page", True)
		End If

		WebList_select getObjectInfoFromXML("Conv_Status", objectsFile, "Value"),"New", getObjectInfoFromXML("Conv_Status", objectsFile, "Description")       
		btn_click getObjectInfoFromXML("Search_Button1", objectsFile, "Value"), getObjectInfoFromXML("Search_Button1", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations", "index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		Call FilterConversationNew()
		img_click getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Value"), getObjectInfoFromXML("MoreInfo_Image", objectsFile, "Description")
		Call WriteToReport(micPass, "More Info Button", "More Info Button is Clicked Successfully", False)
		Wait 5
		Call WriteToReport(micPass, "Delete Button is Disabled", "User has no Access to delete Conversation", False)
		btn_click getObjectInfoFromXML("Cancel_Button", objectsFile, "Value"), getObjectInfoFromXML("Cancel_Button", objectsFile, "Description")
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' custPromPayBrknPrmsePay Function is to verify the AR12_23 Customer Promise to Pay - Broken Promise to Pay
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'18Sept2017         Eric Trout  Added check to just in case no results are found in search
'**************************************************************************************************************
Public Function custPromPayBrknPrmsePay()
	'Err.Clear
	'On Error Resume Next  
	Dim bSetSecure, brknPP

    bSetSecure = False
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
 	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
 		If Browser("creationtime:=0").Page("index:=1").WebList("html id:=AR_CUST_AL_SRCH_PROMISE_DT\$op").Exist(30) Then
        	Call WriteToReport(micPass, "View/Update Conversations Page", "Successfully Navigated to View/Update Conversations Page", False)
		Else
            Call WriteToReport(micFail, "View/Update Conversations Page", "Failed to load View/Update Conversations Page", True)
        End If

		brknPP = dbFetchCustBrknPrmPymt(GlobalDictionary("BusinessUnit"))		     
		If IsArrayEmpty(brknPP) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True  
			Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
			Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BUARDS_CLSVW_BUSINESS_UNIT", brknPP(0), "BusinessUnit")
			Call click_Lookup_Img_And_Select_Item("Look up Cust ID.*", "AR_CUST_ALL_VW_CUST_ID", brknPP(1), "Customer")
			WebList_select getObjectInfoFromXML("PromiseDate_WebList", objectsFile, "Value"), "<", getObjectInfoFromXML("PromiseDate_WebList", objectsFile, "Description")
			setValue_WebEdit getObjectInfoFromXML("PromiseDate_WebEdit", objectsFile, "Value"), Date, bSetSecure, getObjectInfoFromXML("PromiseDate_WebEdit", objectsFile, "Description")
		End If

		btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
		If isObjExistNOReport(getObjectInfoFromXML("srchCustomer_Link", objectsFile, "Value"), getObjectInfoFromXML("srchCustomer_Link", objectsFile, "Description")) Then
			click_Link getObjectInfoFromXML("srchCustomer_Link", objectsFile, "Value"), getObjectInfoFromXML("srchCustomer_Link", objectsFile, "Description")
		End If

		'Check to make sure data is returned
		Wait 5
		If Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSSRCHINSTRUCTIONS").exist(10) Then
			Call WriteToReport(micFail, "Search", "Failed to find results.", True)
			Exit Function
		End If

    	If Browser("creationtime:=0").Page("index:=1").WebList("html id:=CONVER_STATUS","index:=0").Exist(30) Then
        	Call WriteToReport(micPass, "Conversations Tab", "Conversations Tab loaded Successfully", False)
       	Else
        	Call WriteToReport(micFail, "Conversations Tab", "Failed to load Conversations Tab", True)
        End If

		WebList_select getObjectInfoFromXML("ConvStatus_WebList", objectsFile, "Value"), "Open", getObjectInfoFromXML("ConvStatus_WebList", objectsFile, "Description")
		Verify_ClickCheckBox getObjectInfoFromXML("OverRdePrsmsepAy_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("OverRdePrsmsepAy_Checkbox", objectsFile, "Description")
	 	WebList_select getObjectInfoFromXML("PromiseStat_WebList", objectsFile, "Value"), "Broken", getObjectInfoFromXML("PromiseStat_WebList", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("OvrRide_WebEdit", objectsFile, "Value"), "PDOV", bSetSecure, getObjectInfoFromXML("OvrRide_WebEdit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
		Wait 5
		SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
		If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
			Call WriteToReport(micPass, "Broken Promises Review Needed Page", "Successfully Navigated to Broken Promises Review Needed Page", False)
		Else
			Call WriteToReport(micFail, "Broken Promises Review Needed Page", "Failed to load Broken Promises Review Needed Page", True)
		End If

		'Need to clear UserID for search to work
		Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=CONVR_BKPRM_VW_REVIEW_OPRID").Set ""
		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BUARDS_CLSVW_BUSINESS_UNIT", brknPP(0), "BusinessUnit")
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "AR_CUST_ALL_VW_CUST_ID", brknPP(1), "Customer")
		btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
		If Browser("creationtime:=1").Page("index:=1").WebButton("html id:=#ICSave").Exist(30) Then
			Call WriteToReport(micPass, "Broken Promises Review Needed Page", "Broken Promises Review Needed Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Broken Promises Review Needed Page", "Failed to load Broken Promises Review Needed Page", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("RevPromiseDate_WebEdit", objectsFile, "Value"), Date-7, bSetSecure, getObjectInfoFromXML("RevPromiseDate_WebEdit", objectsFile, "Description")
		Call click_Lookup_Img_And_Select_Item("Look up Action.*", "FOLLOWUP_TBL_FOLLOW_UP_ACTION", "REVIEW", "Action")
		btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
		Wait 5
		SelectMainMenu1(GlobalDictionary("MainMenuSelection2"))	
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Successfully Navigated to Collections Workbench Page", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Unit.*", "SP_BU_CS2_CLSVW_BUSINESS_UNIT", brknPP(0), "BusinessUnit")
		Call click_Lookup_Img_And_Select_Item("Look up Customer.*", "AR_CUST_ALL_VW_CUST_ID", brknPP(1), "Customer")
		btn_click getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(30) Then
			Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
		Else
			Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
		End If

		element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
		click_Link getObjectInfoFromXML("PromseInq_Link", objectsFile, "Value"), getObjectInfoFromXML("PromseInq_Link", objectsFile, "Description")
	    Call click_Lookup_Img_And_Select_Item("Look up Customer SetID.*", "SP_SETID_NONVW_SETID", GlobalDictionary("SetID"), "SetID")
	    Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BUARDS_NONVW_BUSINESS_UNIT", brknPP(0), "BusinessUnit")
		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*", "AR_CUST_ALL_VW_CUST_ID", brknPP(1), "Customer")
   		WebList_select getObjectInfoFromXML("PromiseStat2_WebList", objectsFile, "Value"), "Broken", getObjectInfoFromXML("PromiseStat2_WebList", objectsFile, "Description")
		btn_click getObjectInfoFromXML("PrmseSearch_Button", objectsFile, "Value"), getObjectInfoFromXML("PrmseSearch_Button", objectsFile, "Description")
		Wait 2
		verifyValue getObjectInfoFromXML("BrknPrmseStatus_WebElement", objectsFile, "Value"),"Broken","innerhtml","Promise Status - Broken"
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' custPromPayBrknPrmsePay Function is to verify the AR13_01 Inquiry page to view Write-Off Workflow status
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function InqPagWrteOffWrkFlwStus()
	'Err.Clear
	'On Error Resume Next
	Dim bSetSecure, objPage, objTable1, intRowCount, strCellData, intCount, strExpDesc, intFlag
	Dim intRcSortConv, intRCount

    bSetSecure = False
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" &GlobalDictionary("TestObjective"), False
 	Wait 10

' Browser("creationtime:=0").Page("index:=1").Link("outertext:=Main Menu","index:=0").Click
' Wait 3
' Browser("creationtime:=0").Page("index:=1").Link("outertext:=CDW Receivables","index:=0").Click
' Wait 3
' Browser("creationtime:=0").Page("index:=1").Link("html id:=fldra_CDW_REVIEW_WF_ITEMS").Click
' Wait 3
' Browser("creationtime:=0").Page("index:=1").Link("outertext:=Review Workflow Items","index:=0","x:=490","y:=132").Click
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) Then
		Call WriteToReport(micPass, "Menu Option Selected", "Menu option selected was [ CDW Receivables > Review Workflow Items > Review Workflow Items].", True)
		else
		Exit function
	End If

	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=CDW_EOAW_INQ_WK_SEARCH_BUTTON").Exist(30) Then
		Call WriteToReport(micPass, "Review Workflow Items Page", "Successfully Navigated to Review Workflow Items Page", False)
	Else
		Call WriteToReport(micFail, "Review Workflow Items Page", "Failed to load Review Workflow Items Page", True)
	End If

	btn_click getObjectInfoFromXML("InqSearch_Btn", objectsFile, "Value"), getObjectInfoFromXML("InqSearch_Btn", objectsFile, "Description")
	Wait 30

	Set objPage = Browser("creationtime:=0").Page("index:=1")
	Set objTable1 = objPage.WebTable("html id:=tdgbrCDW_EOAW_INQ_VW\$0")
	intRowCount = objTable1.RowCount
	Wait 3
	intFlag = 0
	For intCount = 1 To intRowCount
		strCellData = objTable1.GetCellData(intCount,13)
		If StrComp("LISAPAP",Trim(strCellData),1)=0 Then
			intFlag = intFlag + 1
		End If
	Next

	intRcSortConv = Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSGRIDCOUNTER").GetROProperty("innertext")
	'msgbox "" &intRcSortConv
	intRCount = Split(intRcSortConv, "of ")
	Call WriteToReport(micPass, "Non- Filtered Approver Column", "Verifed that " & intRCount(1) & " lines displayed in the grid that has Approver column with more that one user", False)
	Call click_Lookup_Img_And_Select_Item("Look up Approver.*", "PSOPRDEFN_VW_OPRID", "LISAPAP", "Approver")
	btn_click getObjectInfoFromXML("InqSearch_Btn", objectsFile, "Value"), getObjectInfoFromXML("InqSearch_Btn", objectsFile, "Description")
	Wait 10
	Set objPage = Browser("creationtime:=0").Page("index:=1")
	Set objTable1 = objPage.WebTable("html id:=tdgbrCDW_EOAW_INQ_VW\$0")
	intRowCount = objTable1.RowCount
	Wait 3
	intFlag = 0
	For intCount = 1 To intRowCount
		strCellData = objTable1.GetCellData(intCount,13)
		If StrComp("LISAPAP",Trim(strCellData),1)=0 Then
			intFlag = intFlag + 1
		End If
	Next

	intRcSortConv = Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSGRIDCOUNTER").GetROProperty("innertext")
	'msgbox "" &intRcSortConv
	intRCount = Split(intRcSortConv, "of ")
	Call WriteToReport(micPass, "Filtered Approver Column", "Verifed that " & intRCount(1) & " lines displayed in the grid that has Approver column as LISAPAP", False)
End Function

'**************************************************************************************************************
''' <summary> 
''' makeConvSort Function is to verify the AR12_14 Make Conversations Sortable in either Ascending or Descending order within the Conversation Page
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function makeConvSort()
	'Err.Clear
	'On Error Resume Next
	Dim bSetSecure, ConvSort, strFlag, butnDisb,Conv1, Conv2
	Dim intRc, intVal, j , intVal2

    bSetSecure = False
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebList("html id:=AR_CUST_AL_SRCH_PROMISE_DT\$op").Exist(30) Then
			Call WriteToReport(micPass, "View/Update Conversations Page", "Successfully Navigated to View/Update Conversations Page", False)
		Else
			Call WriteToReport(micFail, "View/Update Conversations Page", "Failed to load View/Update Conversations Page", True)
		End If

		ConvSort = dbFetchmakeConvSort(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(ConvSort) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True  
			Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
			Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BUARDS_CLSVW_BUSINESS_UNIT", ConvSort(0), "BusinessUnit")
			Call click_Lookup_Img_And_Select_Item("Look up Cust ID.*", "AR_CUST_ALL_VW_CUST_ID", ConvSort(1), "Customer")
		End If

		btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description") 
		Wait 5
		'click_Link getObjectInfoFromXML("srchCustomer_Link", objectsFile, "Value"), getObjectInfoFromXML("srchCustomer_Link", objectsFile, "Description")
		intRc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS").RowCount
	 	For j = 0 To intRc
			intVal2 = Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT8\$"&intRc-2).GetROProperty("innerhtml")
			If intRc-1 = j AND intVal2 = 1 Then
				Call WriteToReport(micPass, "No More than one Conversation", "No Morethan one conversation available to sort", False) 
			 	Exit for
		 	End If
	 
			intVal = Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT8\$"&j).GetROProperty("innerhtml")
			If intVal > 1 Then
				Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT8\$"&j).Click
				Wait 3	
				Dim intRcSortConv, arr1, intRCount, k, p
				'intRcSortConv = Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSGRIDCOUNTER").GetROProperty("innertext")
				intRcSortConv = Browser("creationtime:=0").Page("index:=1").WebElement("class:=PTCPGRIDHDRPAGELISTDIV PTCPSCROLLAREAHDRPAGELISTDIV").GetROProperty("innertext")
				'msgbox "" &intRcSortConv
				intRCount = Split(intRcSortConv, "of ")
				'msgbox "" &intRCount(1)
				'For k = 0 To intRCount(1)-1
				'The spacing is off in the new version, so (for example) instead of 1 of 17 2 of 17 it returns 1 of 172 of 173, so we just take the last item in the array and use that since it's "of 17"
				For k = 0 To intRCount(UBound(intRCount)) - 1
					p = k+1
					Conv1 = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CONVER_DESCRLONG\$"&k,"index:=0").GetROProperty("innerhtml")
					Call WriteToReport(micDone, "Conversation "&p&" Before Sorting", ""&Conv1&"", False)
				Next
			
				btn_click  getObjectInfoFromXML("Resort_Button", objectsFile, "Value"), getObjectInfoFromXML("Resort_Button", objectsFile, "Description") 
				Wait 3
				'intRcSortConv = Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSGRIDCOUNTER").GetROProperty("innertext")
				intRcSortConv = Browser("creationtime:=0").Page("index:=1").WebElement("class:=PTCPGRIDHDRPAGELISTDIV PTCPSCROLLAREAHDRPAGELISTDIV").GetROProperty("innertext")
				'msgbox "" &intRcSortConv
				intRCount = Split(intRcSortConv, "of ")
				'msgbox "" &intRCount(1)
				'For k = 0 To intRCount(1)-1
				For k = 0 To intRCount(UBound(intRCount)) - 1
					p = k+1
					Conv1 = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CONVER_DESCRLONG\$" & k, "index:=0").GetROProperty("innerhtml")
					Call WriteToReport(micDone, "Conversation " & p & " After Sorting", ""&Conv1&"", False)
				Next
				Exit For
			End If
		Next	  
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' VefyARmvdNewColPropApp Function is to verify the AR76_01 
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function VefyARmvdNewColPropApp()
	'Err.Clear
	'On Error Resume Next
	Dim bSetSecure, editDelConv, collectoBfre, collectorAfter
	Dim intRc, intVal, j , intVal2, item

	bSetSecure = False
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist(30) Then
		Call WriteToReport(micPass, "Collections Workbench Page", "Successfully Navigated to Collections Workbench Page", False)
	Else
		Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
	End If

	editDelConv = dbFetchVefyARmvdNewColPropApp(GlobalDictionary("BusinessUnit"))		     
	If IsArrayEmpty(editDelConv) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ", True)
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True  
		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Unit.*", "SP_BU_CS2_CLSVW_BUSINESS_UNIT", editDelConv(0), "BusinessUnit")
		Call click_Lookup_Img_And_Select_Item("Look up Customer.*", "AR_CUST_ALL_VW_CUST_ID", editDelConv(1), "Customer")
		btn_click getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
	End If

	If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations", "index:=1").Exist(30) Then
		Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
	End If

	'''''''''''''''''''''''''''''''''' to remove personalization if there is any 
	If Browser("creationtime:=0").Page("index:=1").Link("innertext:=Personalize").Exist(20) Then
		Browser("creationtime:=0").Page("index:=1").Link("innertext:=Personalize").Click
		If Browser("creationtime:=0").Page("index:=1").Link("innertext:=Delete Settings").Exist(20) Then
			Browser("creationtime:=0").Page("index:=1").Link("innertext:=Delete Settings").Click
			If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Delete").Exist(20) Then
				Browser("creationtime:=0").Page("index:=1").WebButton("name:=Delete").Click
				Browser("creationtime:=0").Page("index:=1").WebButton("name:=OK","index:=2").Click
				Call WriteToReport(micPass, "Personalization", "Personalization is deleted Successfully", False)
			End If
		Else
			If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Cancel","index:=2").Exist(10) Then
				Browser("creationtime:=0").Page("index:=1").WebButton("name:=Cancel","index:=2").Click
			End If
		End If
	End If

	''''''''''''''''''''''''''''''''
	element_Click getObjectInfoFromXML("Items_Tab", objectsFile, "Value"), getObjectInfoFromXML("Items_Tab", objectsFile, "Description")	
	'Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	'element_Click getObjectInfoFromXML("Detail2_Tab", objectsFile, "Value"), getObjectInfoFromXML("Detail2_Tab", objectsFile, "Description")
	'Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Detail 2", "innerhtml:=Detail <abbr class=""PTUNDERLINE"">2</abbr>").Click
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_COLLECTOR\$0").Exist(90) Then
		collectoBfre = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_COLLECTOR\$0").GetROProperty("innerhtml")
	Else
		Call WriteToReport(micFail, "collector field", "collector field is not displayed", True)
		Exit Function
	End If

	Call WriteToReport(micPass, "Collector Field", "Collector Field is populated and collector for all items is " & collectoBfre & "", False)
	btn_click getObjectInfoFromXML("SelectAll_Button", objectsFile, "Value"), getObjectInfoFromXML("SelectAll_Button", objectsFile, "Description")
	WebList_select getObjectInfoFromXML("CWItemAction1_WebList", objectsFile, "Value"), "Multi-item Update", getObjectInfoFromXML("CWItemAction1_WebList", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Go1_Button", objectsFile, "Value"), getObjectInfoFromXML("Go1_Button", objectsFile, "Description")
	Verify_ClickCheckBox getObjectInfoFromXML("Collector_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Collector_Checkbox", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("Collector_WebEdit", objectsFile, "Value"), GlobalDictionary("Collector"), bSetSecure, getObjectInfoFromXML("Collector_WebEdit", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Ok_1Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_1Button", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(30) Then
		Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
	End If

	element_Click getObjectInfoFromXML("Items_Tab", objectsFile, "Value"), getObjectInfoFromXML("Items_Tab", objectsFile, "Description")
	Wait 2
	'Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	'element_Click getObjectInfoFromXML("Detail2_Tab", objectsFile, "Value"), getObjectInfoFromXML("Detail2_Tab", objectsFile, "Description")
	'Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	
	Browser("creationtime:=0").Page("index:=1").PSFrame("title:=Collections Workbench").WebTabStrip("innertext:=Detail 1Detail 2Detail 3Detail 4Ship To DetailsDetail 6Detail 7Detail 8 ").Object.ScrollIntoView
	Browser("creationtime:=0").Page("index:=1").PSFrame("title:=Collections Workbench").WebTabStrip("innertext:=Detail 1Detail 2Detail 3Detail 4Ship To DetailsDetail 6Detail 7Detail 8 ").Select "Detail 2"
	Wait 2
	collectorAfter = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_COLLECTOR\$0").GetROProperty("innerhtml")

	'If GlobalDictionary("Collector") = collectorAfter Then
	'	 Call WriteToReport(micPass, "Collector Field", "Collector Field is populated and collector for all items is changed from "&collectoBfre&" to "&collectorAfter&"", False)
	'	 else
	'	 Call WriteToReport(micFail, "Collector Field", "Collector Field is populated and collector for all items is did not change from "&collectoBfre&" to "&collectorAfter&"", False)
	'End If
	intRc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrITEM_DSP_VW\$0").RowCount
	For j = 0 To intRc-1	
		intVal = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW_COLLECTOR\$" & j).GetROProperty("innerhtml")
		item = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_QRY_L1_WRK_AR_SEQ_NUM\$" & j).GetROProperty("innerhtml")
		If GlobalDictionary("Collector") = intVal Then
			Call WriteToReport(micPass, "Collector Field", "Collector Field is populated and collector for item Seq Numb " & item & "  is changed from " & collectoBfre & " to "  &collectorAfter & "", False)
		Else
			Call WriteToReport(micFail, "Collector Field", "Collector Field is populated and collector for item Seq Numb " & item & "  did not change from " & collectoBfre & " to " & collectorAfter & "", False)
			Exit For
		End If
	Next
End Function

'**************************************************************************************************************
''' <summary> 
''' itemRefExiConv Function is to verify the AR12_16 When an Item is referenced in a conversation, display the Subject of the most recent conversation
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'May 18, 2018		Eric Trout	Updated to Search thru table for correct item and verify Conversation icon, previous code was just checking first row
'**************************************************************************************************************
Public Function itemRefExiConv()
	'Err.Clear
	'On Error Resume Next
	Dim bSetSecure, editDelConv, intRc, intVal, j, conv, bFound	
	bFound = False
    bSetSecure = False
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
  	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Search").Exist(30) Then
		Call WriteToReport(micPass, "Account Overview Page", "Successfully Navigated to Account Overview Page", False)
	Else
		Call WriteToReport(micFail, "Account Overview Page", "Failed to load Account Overview Page", True)
	End If

	editDelConv = dbFetchitemRefExiConv(GlobalDictionary("BusinessUnit"))		     
	If IsArrayEmpty(editDelConv) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ", True)
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True  
		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Unit.*", "SP_BU_CS2_CLSVW_BUSINESS_UNIT", editDelConv(0), "BusinessUnit")
		Call click_Lookup_Img_And_Select_Item("Look up Customer.*", "CDW_AR_CUST_VW_CUST_ID", editDelConv(1), "Customer")
	End If

	'btn_click getObjectInfoFromXML("NameSearch_Btn", objectsFile, "Value"), getObjectInfoFromXML("NameSearch_Btn", objectsFile, "Description")
	Browser("creationtime:=0").Page("index:=1").WebButton("html id:=SUBCUST_PRF_WRK_DO_CUST_PROF_HDR").Click
	Browser("creationtime:=0").Sync
	click_Link getObjectInfoFromXML("viewupdate_Link", objectsFile, "Value"), getObjectInfoFromXML("viewupdate_Link", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 2
	click_Link getObjectInfoFromXML("CustSerch_Link", objectsFile, "Value"), getObjectInfoFromXML("CustSerch_Link", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=References","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Conversation tab", "Conversation tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Conversation tab", "Failed to load Conversation tab", True)
	End If

	Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	element_Click getObjectInfoFromXML("Reference_Tab", objectsFile, "Value"), getObjectInfoFromXML("Reference_Tab", objectsFile, "Description")
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	Call click_Lookup_Img_And_Select_Item("Look up Qualifier.*","CONVR_Q_ALL_VW_CONVR_QUALIFIER_CD","I","Qualifier")
	Call click_Lookup_Img_And_Select_Item("Look up Reference ID.*","CONVR_ITEM_I_VC_ITEM",editDelConv(3),"Reference ID")
	btn_click getObjectInfoFromXML("Apply_Btn", objectsFile, "Value"), getObjectInfoFromXML("Apply_Btn", objectsFile, "Description")
	Wait 5
	btn_click getObjectInfoFromXML("Ok_Btn", objectsFile, "Value"), getObjectInfoFromXML("Ok_Btn", objectsFile, "Description")
	Wait 2
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist(30) Then
		Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
	End If
	
	element_Click getObjectInfoFromXML("Items_Tab", objectsFile, "Value"), getObjectInfoFromXML("Items_Tab", objectsFile, "Description")
	Wait 2  
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_DSP_VW\$0#6").Exist(5) Then
		Call WriteToReport(micPass, "Conv Column", "Conv Column is displayed", False)
	Else
		Call WriteToReport(micFail, "Conv Column", "Conv Column is not displayed", True)
	End If

	intRc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrITEM_DSP_VW\$0").RowCount
	'msgbox "" &intRc
	For j = 0 To intRc-1
		intVal = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEMS\$"&j).GetROProperty("innerhtml")
		'msgbox "" &j

			If Trim(editDelConv(3)) = Trim(intVal) Then
				bFound = True
		If Browser("creationtime:=0").Page("index:=1").Image("name:=CONVERSATION\$IMG\$"&j).Exist Then
				Call WriteToReport(micPass, "Conversation Icon", "Conversation Icon shown for  item " & intVal & "", False)
				Exit For
			Else
					Call WriteToReport(micFail, "Conversation Icon", "Conversation Icon was not shown for  item " & intVal & "", True)
				Exit For
			End If
		End If
	Next
	
	If bFound <> True Then
		'Fails if Invoice is not found
		Call WriteToReport(micFail, "Conversation Icon", "Item " & intVal & " was not found in table.", True)	
	End IF
	
End Function

'**************************************************************************************************************
''' <summary> 
''' custConvFollwUpAction Function is to verify the AR12_20 Customer Conversation - Follow Up Action Needed
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function custConvFollwUpAction()
	'Err.Clear
	'On Error Resume Next  
	Dim bSetSecure, followup , beforeTimeStamp, afterTimeStamp, credit_InvoiceDate

	bSetSecure = False
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CONVR_FOLLOW_VW_FOLLOW_UP_OPRID", "index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Follow Up Action Needed Page", "Successfully Navigated to Follow Up Action Needed Page", False)
	Else
		Call WriteToReport(micFail, "Follow Up Action Needed Page", "Failed to load Follow Up Action Needed Page", True)
	End If

	followup = dbFetchcustConvFollwUpAction(GlobalDictionary("BusinessUnit"))	   
	If IsArrayEmpty(followup) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ", True)
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True  
		setValue_WebEdit getObjectInfoFromXML("userid_webedit", objectsFile, "Value"), "", bSetSecure, getObjectInfoFromXML("userid_webedit", objectsFile, "Description") 
		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BUARDS_CLSVW_BUSINESS_UNIT", followup(0), "BusinessUnit")
		Call click_Lookup_Img_And_Select_Item("Look up Cust ID.*", "AR_CUST_ALL_VW_CUST_ID", followup(2), "Customer")
	End If

	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 2
	If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS").Exist Then
		Dim intRc, j, intVal, intChecked,intItemRc, strVal
		intRc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS").RowCount
		For j = 0 To intRc-1
			intVal = Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT6\$" & j).GetROProperty("innertext")
			If followup(9) = intVal Then
				Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT6\$" & j).Click
				Call WriteToReport(micPass, "Conversation From Search Results", "Conversation From Search Results Selected Successfully", False)
				Exit For
			End If
		Next
	End If

	'click_Link getObjectInfoFromXML("CustSerch_Link", objectsFile, "Value"), getObjectInfoFromXML("CustSerch_Link", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=References", "index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Conversation tab", "Conversation tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Conversation tab", "Failed to load Conversation tab", True)
	End If

	beforeTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")	
	verifyValue getObjectInfoFromXML("Subject_Field", objectsFile, "Value"), TRIM(followup(5)), "innertext", "Subject Field"
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=win0divCUST_CONVER_HDR_CONVER_SUB_TOPIC").Exist Then
		If followup(6) = " " Then
			Call WriteToReport(micPass, "Subtopic Field", "Expected Value is [BLANK] matches with actual value [BLANK]", False)
		Else
			verifyValue getObjectInfoFromXML("Subtopic_webelement", objectsFile, "Value"),TRIM(followup(6)),"innertext","Subtopic Field"
		End If
	End If

	'If followup(31) = "N" Then
	If followup(30) = "N" Then	'30th field in FNRVTST db call
		verifyValue getObjectInfoFromXML("promPay_checkbox", objectsFile, "Value"), "0", "checked", "Promise of Payment {0 = Checkbox UnChecked, 1 = Checkbox Checked}"
	Else
		verifyValue getObjectInfoFromXML("promPay_checkbox", objectsFile, "Value"), "1", "checked", "Promise of Payment {0 = Checkbox UnChecked, 1 = Checkbox Checked}"
	End If

	verifyValue getObjectInfoFromXML("reviewdate_webedit", objectsFile, "Value"), followup(10), "default value", "Review Date"
	If followup(16) = "N"  Then
		verifyValue getObjectInfoFromXML("supreview_checkbox", objectsFile, "Value"), "0", "checked", "Supervisor Review {0 = Checkbox UnChecked, 1 = Checkbox Checked}"
	Else
		verifyValue getObjectInfoFromXML("supreview_checkbox", objectsFile, "Value"), "1", "checked", "Supervisor Review {0 = Checkbox UnChecked, 1 = Checkbox Checked}"
	End If

	verifyValue getObjectInfoFromXML("followupreview_webedit", objectsFile, "Value"),TRIM(followup(13)),"default value","FollowUp Action"
	'verifyValue getObjectInfoFromXML("followupuserid_webedit", objectsFile, "Value"),TRIM(followup(27)),"default value","FollowUp User ID"
	verifyValue getObjectInfoFromXML("followupuserid_webedit", objectsFile, "Value"),TRIM(followup(28)),"default value","FollowUp User ID"	'28th field in FNRVTST
	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_CONVER_HDR_LETTER_CD","index:=0").Exist Then
		If followup(11) = " " Then
			Call WriteToReport(micPass, "FollowUp Letter", "Expected Value is [BLANK] matches with actual value [BLANK]", False)
		Else
			verifyValue getObjectInfoFromXML("followupletter_webedit", objectsFile, "Value"), TRIM(followup(11)), "default value", "FollowUp Letter"
		End If
	End If

	Wait 2
	Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	element_Click getObjectInfoFromXML("Reference_Tab", objectsFile, "Value"), getObjectInfoFromXML("Reference_Tab", objectsFile, "Description")
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=win0divCUST_CONVER_DTL_CONVR_QUALIFIER_CD\$0").Exist(30) Then
		Call WriteToReport(micPass, "Reference tab", "Reference tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Reference tab", "Failed to load Reference tab", True)
	End If

	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=win0divCUST_CONVER_DTL_CONVR_QUALIFIER_CD\$0").Exist Then
		Dim arrAttach1, strAttach1
		strAttach1 = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=win0divCUST_CONVER_DTL_CONVR_QUALIFIER_CD\$0").getroproperty("html id")
		arrAttach1 = split(strAttach1,"$")
		If arrAttach1(1) = 0 then
			Call WriteToReport(micPass, "Review related transactions", "Does not contain any transcations as expected", False)
		Else
			Call WriteToReport(micFail, "Review related transactions", "Contains one or more attachments", True)
		End If
	End If

	Wait 2
	Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	element_Click getObjectInfoFromXML("Attachments_Tab", objectsFile, "Value"), getObjectInfoFromXML("Attachments_Tab", objectsFile, "Description")
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=tdCUST_CONVER_ATT\$0#0").Exist(30) Then
		Call WriteToReport(micPass, "Attachments tab", "Attachments tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Attachments tab", "Failed to load Attachments tab", True)
	End If

	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=tdCUST_CONVER_ATT\$0#0").Exist Then
		Dim arrAttach, strAttach, intAttach
		strAttach = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=tdCUST_CONVER_ATT\$0#0").getroproperty("html id")
		arrAttach = Split(strAttach,"$")
		intAttach = Split(arrAttach(1),"#")
		If intAttach(0) = 0 then
			Call WriteToReport(micPass, "Review Attachments", "Does not contain any attachments as Expected", False)
		Else
			Call WriteToReport(micFail, "Review Attachments", "Contains one or more attachments", True)
		End If
	End If

	Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	element_Click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	
	'If Browser("creationtime:=0").Page("index:=1").WebCheckBox("class:=PSCHECKBOX", "name:=CUST_CONVER_HDR_REVIEW_COMP", "index:=1").Exist Then
	'	Call WriteToReport(micPass, "Done Checkbox", "Done Checkbox is not checked and checked now", False)
	'else
	'	Call WriteToReport(micFail, "Done Checkbox", "Done Checkbox is not displayed", True)
	'End If
	credit_InvoiceDate = Browser("creationtime:=0").Page("index:=1").WebCheckBox("class:=PSCHECKBOX", "name:=CUST_CONVER_HDR_REVIEW_COMP", "index:=1").GetROProperty("checked")
	If credit_InvoiceDate=1 Then
		uncheck_CheckBox getObjectInfoFromXML("Done_Checkbox", objectsFile, "Value"), ("Done Check Box was checked and is Unchecked now")
	Else
		check_CheckBox getObjectInfoFromXML("Done_Checkbox", objectsFile, "Value"), ("Done Check Box was Unchecked and is Checked now")
	End If

	btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
	Wait 5
	afterTimeStamp = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CUST_CONVER_HDR_LAST_UPDATE_DTTM").GetROProperty("innertext")
	If beforeTimeStamp <> afterTimeStamp Then
		Call WriteToReport(micPass, "Modified TimeStamp", "Modified Timestamp changed from " & beforeTimeStamp & " to " & afterTimeStamp & "", False)
	Else
		Call WriteToReport(micFail, "Modified TimeStamp", "Modified Timestamp didnot change from " & beforeTimeStamp & " to " & afterTimeStamp & "", True)	
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' \ccAprvlppcctrans Function is to verify the AR11_18, AR11_20 Customer Conversation - Follow Up Action Needed
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'May 17, 2018		Eric Trout	 	Added selection of Transactinos to ensure test was on the correct tab.
'**************************************************************************************************************
Public Function ccAprvlppcctrans()
	'Err.Clear
	'On Error Resume Next  
	Dim bSetSecure, apprvlTrans, sAuthstatus
	Dim intRc, invoice, j, intRc1, invoice1, k
	Dim rowNum, processInstance, rowNum1, processInstance1
	Dim intRc2, invoice2, n, authstatus

	bSetSecure = False
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Review Pending Transactions Page", "Successfully Navigated to Review Pending Transactions Page", False)
	Else
		Call WriteToReport(micFail, "Review Pending Transactions Page", "Failed to load Review Pending Transactions Page", True)
	End If

	apprvlTrans = dbFetchccAprvlppcctrans(GlobalDictionary("BusinessUnit"))
	If IsArrayEmpty(apprvlTrans) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ", True)
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True  
		Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*", "SP_BU_BI_CLSVW_BUSINESS_UNIT", apprvlTrans(0), "BusinessUnit")
	End If
	
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 2
	If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").Exist(50) Then
		Call WriteToReport(micPass, "Pending CC Trans Tab", "Successfully loaded Pending CC Trans Tab", False)
	Else
		Call WriteToReport(micFail, "Pending CC Trans Tab", "Failed to load Pending CC Trans Tab", True)
	End If

	Browser("PeopleSoft Browser").Page("Review Pending Transactions").PSFrame("TargetContent").WebTabStrip("WebTabStrip").Select "Transactions"
	
	If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")) = True Then
		click_Link  getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")
	End If

	'If Find exists Click Find and search	
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD\$hfind\$0").Exist(5) Then
		Browser("creationtime:=0").Page("index:=1").Webelement("html id:=INTFC_CRCARD\$hfind\$0").Click

		'Enter Invoice looking for and click OK
		Wait 5
		Browser("creationtime:=0").Dialog("nativeclass:=#32770").WinEdit("nativeclass:=Edit").Set TRIM(apprvlTrans(1))
		Browser("creationtime:=0").Dialog("nativeclass:=#32770").WinButton("regexpwndtitle:=OK").Click
	End If
	
	'Wait for 5 seconds for page to reload	
	Wait 5
	intRc = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").RowCount
	'msgbox "" &intRc
	For j = 0 To intRc-1
		'msgbox "" &j
		Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_INVOICE\$"&j).highlight ' 08/24
		invoice = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_INVOICE\$"&j).GetROProperty("innertext")
		'msgbox "" &invoice
		'msgbox "" &apprvlTrans(1)
		If TRIM(apprvlTrans(1)) = TRIM(invoice)  Then
			If Not Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=EDIT_PB\$"&j).Exist(5) Then
				'Get Auth Status
				sAuthstatus =Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebElement("html id:=INTFC_CRCARD_CR_CARD_AUTH_STAT\$"&j).GetROProperty("innertext")
				Call WriteToReport(micFail, "Edit Button", "Edit Button does not exist. Auth Status for this record is [" &sAuthstatus&"]", True)
				ExitTest
			End If

			Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
			Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=EDIT_PB\$"&j).Click
			Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
			Call WriteToReport(micPass, "Edit Button", "Successfully clicked on Edit Button for inovice " & apprvlTrans(1) & " having amount " & apprvlTrans(2) & "", False)
			Exit For
		End If
	Next

	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=FUNCLIB_CR_CARD_CR_CARD_NBR_E2\$0").Exist(60) Then
		Call WriteToReport(micPass, "CC Address Tab", "CC Address Tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "CC Address Tab", "Failed to load CC Address Tab", True)
	End If

	If TRIM(apprvlTrans(58)) = "02"  Then
		verifyValue getObjectInfoFromXML("CCType_WebList2", objectsFile, "Value"),"MASTERCARD","default value","Credit Card Type"
	ElseIf TRIM(apprvlTrans(58)) = "01" Then
		verifyValue getObjectInfoFromXML("CCType_WebList2", objectsFile, "Value"),"VISA","default value","Credit Card Type"
	ElseIf TRIM(apprvlTrans(58)) = "03" Then 
		verifyValue getObjectInfoFromXML("CCType_WebList2", objectsFile, "Value"),"DISCOVER CARD","default value","Credit Card Type"    
	Else 
		verifyValue getObjectInfoFromXML("CCType_WebList2", objectsFile, "Value"),"AMERICAN EXPRESS","default value","Credit Card Type" 
	End If

	If TRIM(apprvlTrans(11)) = "3456"  Then
		verifyValue getObjectInfoFromXML("CCNumb_WebEdit", objectsFile, "Value"),"XXXXXXXXXXXX3456","default value","Encrypted Credit Card Number"
	ElseIf TRIM(apprvlTrans(11)) = GlobalDictionary("databaseCC") THEN
		verifyValue getObjectInfoFromXML("CCNumb_WebEdit", objectsFile, "Value"),GlobalDictionary("appCC"),"default value","Encrypted Credit Card Number"
	Else 
		verifyValue getObjectInfoFromXML("CCNumb_WebEdit", objectsFile, "Value"),"XXXXXXXXXXXX4444","default value","Encrypted Credit Card Number"   
	End If
 
	verifyValue getObjectInfoFromXML("ExpMon_WebEdit1", objectsFile, "Value"),apprvlTrans(14),"default value","Expiration Month"
	verifyValue getObjectInfoFromXML("ExpYear_WebEdit1", objectsFile, "Value"),apprvlTrans(15),"default value","Expiration Year"
	verifyValue getObjectInfoFromXML("CCFirstName_WebEdit1", objectsFile, "Value"),TRIM(apprvlTrans(16)),"default value","First Name"
	verifyValue getObjectInfoFromXML("CCLastName_WebEdit1", objectsFile, "Value"),TRIM(apprvlTrans(17)),"default value","Last Name"
	verifyValue getObjectInfoFromXML("EmailId_WebEdit1", objectsFile, "Value"),TRIM(apprvlTrans(36)),"default value","Email ID"
	setValue_WebEdit getObjectInfoFromXML("PhNum_WebEdit1", objectsFile, "Value"),GlobalDictionary("Phone"),bSetSecure, getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("Address_WebEdit", objectsFile, "Value"),GlobalDictionary("Address1"),bSetSecure, getObjectInfoFromXML("Address_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("City_WebEdit", objectsFile, "Value"),GlobalDictionary("City"),bSetSecure, getObjectInfoFromXML("City_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("County_WebEdit", objectsFile, "Value"),GlobalDictionary("County"),bSetSecure, getObjectInfoFromXML("County_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("Postal_WebEdit", objectsFile, "Value"),GlobalDictionary("Postal"),bSetSecure, getObjectInfoFromXML("Postal_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("State_WebEdit", objectsFile, "Value"),GlobalDictionary("State"),bSetSecure, getObjectInfoFromXML("State_WebEdit", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
	Wait 5
	If Browser("creationtime:=0").Page("index:=1").Link("innertext:=Credit Card Transactions").Exist(10) Then
		Browser("creationtime:=0").Page("index:=1").Link("innertext:=Credit Card Transactions").Click
	End If
	Wait 2
	If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").Exist(50) Then
		Call WriteToReport(micPass, "Pending CC Trans Tab", "Successfully loaded Pending CC Trans Tab", False)
	Else
		Call WriteToReport(micFail, "Pending CC Trans Tab", "Failed to load Pending CC Trans Tab", True)
	End If

	Browser("PeopleSoft Browser").Page("Review Pending Transactions").PSFrame("TargetContent").WebTabStrip("WebTabStrip").Select "Transactions"
	
	wait 5
	
	intRc1 = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").RowCount
	'msgbox "" &intRc
	 For k = 0 To intRc1-1
		invoice1 = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_INVOICE\$"&k).GetROProperty("innertext")
		'msgbox "" &invoice
		If TRIM(apprvlTrans(1)) = TRIM(invoice1)  Then
			Browser("creationtime:=0").Page("index:=1").WebList("html id:=FUNCLIB_CR_CARD_CR_CARD_PROC\$"&k,"index:=0").Select "Re-process"
			Call WriteToReport(micPass, "Re-Process from Action Section", "Successfully Selected 'Re-Process' from Action Section for invoice " & apprvlTrans(1) & " having Amount " & apprvlTrans(2) & "", False)
			Exit For		
		End If
	Next
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	wait 5

	loginCDWBATCH()
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "CDW System Process Request Page", "Successfully Navigated to CDW System Process Request Page", False)
	Else
		Call WriteToReport(micFail, "CDW System Process Request Page", "Failed to load CDW System Process Request Page", True)
	End If

	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 3
	click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(30) Then
	Call WriteToReport(micPass, "Process Request Dialog Tab", "Process Request Dialog Tab loaded Successfully", False)
	else
	Call WriteToReport(micFail, "Process Request Dialog Tab", "Failed to load Process Request Dialog Tab", True)
	End If

	btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
	Wait 5
	rowNum = rowNumberOfSpecificProcess("CDW_CRCRD_OB")  
	Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PRCSRQSTDLG_WRK_SELECT_FLAG\$"&rowNum).click
	'check_CheckBox getObjectInfoFromXML("CDWCRCRDOB_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("CDWCRCRDOB_CheckBox", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Ok_But5", objectsFile, "Value"), getObjectInfoFromXML("Ok_But5", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=2").Exist(15) Then
		Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=2").highlight
	End If

	processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=2").GetROProperty("innertext")
	btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
		Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
	End If

	Wait 3
	Call getStatusupdateProcessTime("CDW_CRCRD_OB - CREDIT CARD OUTBOUND", split(processInstance,":")(1))
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist Then
		Call WriteToReport(micPass, "CDW System Process Request Page", "Successfully Navigated to CDW System Process Request Page", False)
	Else
		Call WriteToReport(micFail, "CDW System Process Request Page", "Failed to load CDW System Process Request Page", True)
	End If

	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 3
	click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(30) Then
		Call WriteToReport(micPass, "Process Request Dialog Tab", "Process Request Dialog Tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Process Request Dialog Tab", "Failed to load Process Request Dialog Tab", True)
	End If

	btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
	Wait 5
	rowNum1 = rowNumberOfSpecificProcess("CDW_CRCRD_OB ")  
	Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PRCSRQSTDLG_WRK_SELECT_FLAG\$" & rowNum1).click
	' check_CheckBox getObjectInfoFromXML("CDWCCAUAUTH_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("CDWCCAUAUTH_CheckBox", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Ok_But5", objectsFile, "Value"), getObjectInfoFromXML("Ok_But5", objectsFile, "Description")
	Wait 5
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=2").Exist(15) Then
		Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=2").highlight
	End If

	processInstance1 = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*", "index:=2").GetROProperty("innertext")
	btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
		Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
	End If	

	Wait 3
	Call getStatusupdateProcessTime("CDW_CCAUAUTH - Auto Authorise CCs in NON PROD", Split(processInstance1,":")(1))
	login(GlobalDictionary("SignInUser"))
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Review Pending Transactions Page", "Successfully Navigated to Review Pending Transactions Page", False)
	Else
		Call WriteToReport(micFail, "Review Pending Transactions Page", "Failed to load Review Pending Transactions Page", True)
	End If

	Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT",apprvlTrans(0),"BusinessUnit")
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 2
	If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").Exist(50) Then
		Call WriteToReport(micPass, "Pending CC Trans Tab", "Successfully loaded Pending CC Trans Tab", False)
	Else
		Call WriteToReport(micFail, "Pending CC Trans Tab", "Failed to load Pending CC Trans Tab", True)
	End If

	Browser("PeopleSoft Browser").Page("Review Pending Transactions").PSFrame("TargetContent").WebTabStrip("WebTabStrip").Select "Transactions"
	
	If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")) = True Then	
		click_Link  getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")
	End If

	'Click Find
	Wait 5
	Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD\$hfind\$0").Click
	Wait 5

	'Enter Invoice looking for and click OK
	Browser("creationtime:=0").Dialog("nativeclass:=#32770").WinEdit("nativeclass:=Edit").Set TRIM(apprvlTrans(1))	
	Browser("creationtime:=0").Dialog("nativeclass:=#32770").WinButton("regexpwndtitle:=OK").Click

	'Wait for 5 seconds for page to reload
	Wait 5
	intRc2 = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").RowCount
	'msgbox "" &intRc
	 For n = 0 To intRc2-1
		'msgbox "" &j
		invoice2 = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_INVOICE\$"&n).GetROProperty("innertext")
		authstatus = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_CR_CARD_AUTH_STAT\$"&n).GetROProperty("innertext")
		'msgbox "" &invoice
		'msgbox "" &apprvlTrans(1)
		If TRIM(apprvlTrans(1)) = TRIM(invoice2) AND authstatus = "Processing"  Then
			Call WriteToReport(micPass, "Bill Still Visible", "Bill still Visible but Auth Status is in "&authstatus&" for inovice "&apprvlTrans(1)&" having amount "&apprvlTrans(2)&"", False)
			Exit For
		End If
	Next

	Call WriteToReport(micPass, "Bill No Longer Visible", "Bill No Longer Visible for inovice "&apprvlTrans(1)&" having amount "&apprvlTrans(2)&"", False)
End Function

'**************************************************************************************************************
''' <summary> 
''' reqCCProc Function is to verify the AR11_22 Request Credit Card Processing
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'May 17, 2018		Eric Trout	 	Added selection of Transactinos to ensure test was on the correct tab.
'**************************************************************************************************************
Public Function reqCCProc()
	'Err.Clear
	'On Error Resume Next
	Dim bSetSecure, apprvlTrans, intRc1, invoice1, k
	Dim processInstance, intRc2, invoice2, n, authstatus

	bSetSecure = False
	WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Review Pending Transactions Page", "Successfully Navigated to Review Pending Transactions Page", False)
	Else
		Call WriteToReport(micFail, "Review Pending Transactions Page", "Failed to load Review Pending Transactions Page", True)
	End If 

	apprvlTrans = dbFetchccAprvlppcctrans(GlobalDictionary("BusinessUnit"))	   
	If IsArrayEmpty(apprvlTrans) Then
		GlobalDictionary("dataAvailable") = false
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ",True)
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True  
		Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT",apprvlTrans(0),"BusinessUnit")
	End If

	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 2
	If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").Exist(30) Then
		Call WriteToReport(micPass, "Pending Credit Card Transactions Session", "Successfully loaded Pending Credit Card Transactions Session", False)
	Else
		Call WriteToReport(micFail, "Pending Credit Card Transactions Session", "Failed to load Review Pending Transactions Page", True)
	End If

	Browser("PeopleSoft Browser").Page("Review Pending Transactions").PSFrame("TargetContent").WebTabStrip("WebTabStrip").Select "Transactions"

    If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")) = True Then
		click_Link getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")
	End If

	Wait 5
	intRc1 = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").RowCount
	'msgbox "" &intRc
	For k = 0 To intRc1-1
		invoice1 = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_INVOICE\$"&k).GetROProperty("innertext")
		'msgbox "" &invoice

		If TRIM(apprvlTrans(1)) = TRIM(invoice1)  Then
			Browser("creationtime:=0").Page("index:=1").WebList("html id:=FUNCLIB_CR_CARD_CR_CARD_PROC\$"&k,"index:=0").Select "Re-process"
			Call WriteToReport(micPass, "Re-Process from Action Section", "Successfully Selected 'Re-Process' from Action Section for invoice "&apprvlTrans(1)&" having Amount "&apprvlTrans(2)&"", False)
			Exit For		
		End If
	Next

	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
	Wait 5
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist Then
		Call WriteToReport(micPass, "Request Credit Card Processing Page", "Successfully Navigated to Request Credit Card Processing Page", False)
	Else
		Call WriteToReport(micFail, "Request Credit Card Processing Page", "Failed to load Request Credit Card Processing Page", True)
	End If

	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 3
	click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PRCSRQSTDLG_WRK_LOADPRCSRQSTDLGPB").Exist(30) Then
		Call WriteToReport(micPass, "Process Request Dialog Tab", "Process Request Dialog Tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Process Request Dialog Tab", "Failed to load Process Request Dialog Tab", True)
	End If

	Verify_ClickRadioBtn getObjectInfoFromXML("ALLBUSINESSUNITS_RadiButton", objectsFile, "Value"), getObjectInfoFromXML("ALLBUSINESSUNITS_RadiButton", objectsFile, "Description"), "A"
	btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
	Wait 5
	check_CheckBox getObjectInfoFromXML("BICRC000_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("BICRC000_CheckBox", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Ok_But6", objectsFile, "Value"), getObjectInfoFromXML("Ok_But6", objectsFile, "Description")
	Wait 5
	processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
	btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
		Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
	End If	

	Wait 3
	getStatusupdateProcessTime "BICRC000 - Billing Credit Card Processing",split(processInstance,":")(1)  
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Review Pending Transactions Page", "Successfully Navigated to Review Pending Transactions Page", False)
	Else
		Call WriteToReport(micFail, "Review Pending Transactions Page", "Failed to load Review Pending Transactions Page", True)
	End If
 
 	Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BU_BI_CLSVW_BUSINESS_UNIT",apprvlTrans(0),"BusinessUnit")
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 2
	If Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").Exist(30) Then
		Call WriteToReport(micPass, "Pending Credit Card Transactions Session", "Successfully loaded Pending Credit Card Transactions Session", False)
	Else
		Call WriteToReport(micFail, "Pending Credit Card Transactions Session", "Failed to load Review Pending Transactions Page", True)
	End If

	Browser("PeopleSoft Browser").Page("Review Pending Transactions").PSFrame("TargetContent").WebTabStrip("WebTabStrip").Select "Transactions"

    If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")) = True Then
  		click_Link  getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link2", objectsFile, "Description")
   	End If

	Wait 5
	intRc2 = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgbrINTFC_CRCARD\$0").RowCount
	'msgbox "" &intRc
	For n = 0 To intRc2-1
		'msgbox "" &j
		invoice2 = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_INVOICE\$"&n).GetROProperty("innertext")
		authstatus = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=INTFC_CRCARD_CR_CARD_AUTH_STAT\$"&n).GetROProperty("innertext")
		'msgbox "" &invoice
		'msgbox "" &apprvlTrans(1)
		If Trim(apprvlTrans(1)) = Trim(invoice2) Then
			Call WriteToReport(micPass, "Bill Still Visible But in Processig state", "Bill Still Visible in processing state for inovice " & apprvlTrans(1) & " having amount " & apprvlTrans(2) & "", False)
			Exit For
		End If
	Next
End Function

'**************************************************************************************************************
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function unpostPaymentMistakenlySentPS()	
	Dim srtBusinessValue, depositinfo, depositid, pymntid, arup, runcontrol, paymentid, objTable

	Call WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		srtBusinessValue = GlobalDictionary("BusinessUnit")
		runcontrol=GlobalDictionary("Runcontrol")
		depositinfo=dbgetunpostPaymentMistakenlySentPS(srtBusinessValue)
		If IsArrayEmpty(depositinfo) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
		End If

		depositid=depositinfo(1)
	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","html tag:=H1").Exist(30) Then
		    Call WriteToReport (micPass,"Payment Group Page is Loaded Successfully","", True)
	    Else
			Call WriteToReport (micFail, "Payment Group Page is not Loaded Successfully", "", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("depositunit_Webedit", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("depositunit_Webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("depositid_Webedit", objectsFile, "Value"), depositid, False, getObjectInfoFromXML("depositid_Webedit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 3
		Set objTable = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS", "html tag:=TABLE")
		If objTable.Exist(15) Then
			objTable.highlight
			objTable.ChildItem(2, 4, "Link", 0).Click
			pymntid=objTable.GetCellData(2, 4)
		Else
			pymntid=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=GROUP_CONTROL_PAYMENT_ID","html tag:=SPAN").GetROProperty("innertext")
		End If

		Call WriteToReport (micPass, "Payment ID selected is " & pymntid & "", "Payment ID selected is " & pymntid & "", False)
	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label", "html tag:=SPAN").Exist(30) Then 
		    Call WriteToReport (micPass,"Payment Control Tabbed Page is Loaded Successfully. Payment Control, Options and Action Tabs are Displayed", "", True)
	    Else
			Call WriteToReport (micFail, "Payment Control Tabbed Page is not Loaded Successfully. Payment Control, Options and Action Tabs are not Displayed", "", True)
		End If

		Wait 2
		btn_click getObjectInfoFromXML("Options_paymnts_tab", objectsFile, "Value"), getObjectInfoFromXML("Options_paymnts_tab", objectsFile, "Description")
	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label", "html tag:=SPAN").Exist Then
		    Call WriteToReport (micPass, "Options Tabbed Page is Loaded Successfully", "", True)
	    Else
			Call WriteToReport (micFail, "Options Tabbed Page is not Loaded Successfully", "", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("unpostreason_webedit", objectsFile, "Value"),"MGR", False, getObjectInfoFromXML("unpostreason_webedit", objectsFile, "Description")
		check_CheckBox getObjectInfoFromXML("edit_paymnts_webcheckbox", objectsFile, "Value"), getObjectInfoFromXML("edit_paymnts_webcheckbox", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("AcctngDate_paymnts_webedit", objectsFile, "Value"),DATE, False, getObjectInfoFromXML("AcctngDate_paymnts_webedit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("okbtnerr_lin", objectsFile, "Value"),("OK button is Clicked to dismiss the warning message window")
		btn_click getObjectInfoFromXML("Actiontab_webelement", objectsFile, "Value"), getObjectInfoFromXML("Actiontab_webelement", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label","html tag:=SPAN").Exist(30) Then
			Call WriteToReport (micPass, "Actions Tabbed Page is Loaded Successfully", "", True)
		Else
			Call WriteToReport (micFail, "Actions Tabbed Page is not Loaded Successfully", "", True)
		End If

		WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"),"Batch Standard",("Batch Standard option was successfully selected from the Posting Action WebList ")
		btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
		Set objTable = Nothing
	End If

	arup = arupdate(srtBusinessValue,runcontrol)
	Wait 2

'Browser("creationtime:=0").page("index:=1").Link("innertext:=Home").Click
'wait 3
'Browser("creationtime:=0").page("index:=1").Link("name:=Main Menu").Click
'wait 2
'Browser("creationtime:=0").page("index:=1").Link("name:=Accounts Receivable").Click
'wait 2
'Browser("creationtime:=0").page("index:=1").Link("name:=Payments").Click
'wait 2
'Browser("creationtime:=0").page("index:=1").Link("name:=Apply Payments").Click
'wait 3
'Browser("creationtime:=0").page("index:=1").Link("name:=Create Worksheet").Click

	SelectMainMenu1(GlobalDictionary("MainMenuSelection2"))
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Create Payment Worksheet", "index:=0").exist(30) Then
	    Wait 3
	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=app_label", "html tag:=H1").Exist(60) Then
		    Call WriteToReport (micPass,"Create Payment Worksheet Page is Loaded Successfully", "", True)
	    Else
			Call WriteToReport (micFail, "Create Payment Worksheet Page is not Loaded Successfully", "", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("depositUnit_cpw_webEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("depositUnit_cpw_webEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("depositid_cpw_webEdit", objectsFile, "Value"),depositid, False, getObjectInfoFromXML("depositid_cpw_webEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("pymntid_cpw_webEdit", objectsFile, "Value"),pymntid, False, getObjectInfoFromXML("pymntid_cpw_webEdit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 3
		Set objTable = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=PTSRCHRESULTS", "html tag:=TABLE")
		If objTable.Exist(15) Then
			objTable.highlight
			'pymntid=objTable.GetCellData(2, 4)
			paymentid=objTable.GetCellData(2, 4)
			objTable.ChildItem(2, 4, "Link" ,0).Click
		Else
			If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_PAYMENT_ID", "html tag:=SPAN").Exist(20) Then
				paymentid=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_PAYMENT_ID", "html tag:=SPAN").GetROProperty("innertext")
			Else
				Call WriteToReport (micFail, "search results null", "No search results found", True)
				Exit Function
			End If
		End If

	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_WRK_PAGETITLE", "html tag:=SPAN").Exist(30) Then
		    Call WriteToReport (micPass,"Create Payment Worksheet Page is Loaded Successfully","", True)
	    Else
			Call WriteToReport (micFail, "Create Payment Worksheet Page is not Loaded Successfully", "", True)
		End If

	    If Trim(paymentid)=Trim(pymntid) Then
		    Call WriteToReport (micPass, "the worksheet with Payment ID " & pymntid & " unposted is available to repost ", "the worksheet with Payment ID " & pymntid & " unposted is available to repost ", True)
		Else
		    Call WriteToReport (micFail, "the worksheet with Payment ID " & pymntid & " unposted is  not available to repost ", "the worksheet with Payment ID " & pymntid & " unposted is not available to repost ", False)
	    End If

		Set objTable = Nothing
	Else
   		Call WriteToReport (micFail, "main menu navigation ", " navigation failed " & GlobalDictionary("MainMenuSelection2"), True)
	   	Exit Function
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Customer Account Overview -- Verify Column order of Reference Reason field
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function verifyColumnorderofReferenceReason()
	Dim srtBusinessValue, custinfo, custid, obj

	Call WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		srtBusinessValue = GlobalDictionary("BusinessUnit")
		custinfo = dbgetverifyColumnorderofReferenceReason(srtBusinessValue)
		If IsArrayEmpty(custinfo) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
		End If

		custid = custinfo(1)
		If Browser("creationtime:=0").Page("index:=1").WebEdit("name:=SUBCUST_PRF_WRK_SETID_INQ").Exist(30) Then
			Call WriteToReport (micPass, "Balances Tab on Account Overview Page is Loaded Successfully", "", True)
		Else
			Call WriteToReport (micFail, "Balances Tab on Account Overview Page is not Loaded Successfully", "", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"), GlobalDictionary("SetID"), False, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"), custid, False, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 10
		btn_click getObjectInfoFromXML("BalancesMRA_Link", objectsFile, "Value"), getObjectInfoFromXML("BalancesMRA_Link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Customer Item Inquiry","html tag:=SPAN").Exist(30) Then
			Call WriteToReport (micPass,"Customer Item Inquiry Floating Tabbed Page  is Loaded Successfully","", True)
		Else
			Call WriteToReport (micFail, "Customer Item Inquiry Floating Tabbed Page is not Loaded Successfully", "", True)
		End If

		Set obj=Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Ref Reason", "html tag:=SPAN")
		If obj.Exist Then
			obj.highlight
			Call WriteToReport (micPass, "Reference Reason Column appears on the Details 1 Tab after Entry Type Column and Entry Reason Column", "", True)
		Else
			Call WriteToReport (micFail, "Reference Reason  does not appears on the Details 1 Tab after Entry Type and Entry Reason", "", True)
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Create Conversation -Add Subject, Reference to AR Item, Add Attachment
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function createConvoAddSubjectRefAttachment()
	Dim srtBusinessValue, custinfo, custid, obj, subj, subject, item, attachment
	Dim convStr1, convStr2, convGrid, descRowNo

	Call WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
	    srtBusinessValue = GlobalDictionary("BusinessUnit")
	    If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Collections Workbench", "html tag:=SPAN", "index:=1").Exist(30) Then
	    	Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
	    Else
	        Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
	    End If

	    custinfo=dbgetcreateConvoAddSubjectRefAttachment(srtBusinessValue)
	    If IsArrayEmpty(custinfo) Then
	    	GlobalDictionary("dataAvailable") = False
	        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)
	        Exit Function
     	Else
	    	GlobalDictionary("dataAvailable") = True
	    End If

	    custid=custinfo(1)
	    item=custinfo(2)
	    setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"), GlobalDictionary("SetID"), False, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
	    setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
	    setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"), custid, False, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
	    If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Last Payment Amount", "html tag:=SPAN").Exist(30) Then
	         Call WriteToReport(micPass, "Customer Details is Expanded and Populated on Collection Workbench Page ", "Customer Details is Expanded and Populated on Collection Workbench Page ", False)
	    Else
	         Call WriteToReport(micFail, "Customer Details is not Expanded and Populated on Collection Workbench Page ", "Customer Details is not Expanded and Populated on Collection Workbench Page ", True)
	         Exit Function
	    End If

	    btn_click getObjectInfoFromXML("Conversations_Tab", objectsFile, "Value"), getObjectInfoFromXML("Conversations_Tab", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Value"), getObjectInfoFromXML("AddConversation_Tab", objectsFile, "Description")
	    Wait 2
	    If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=SetID","html tag:=SPAN").Exist(30) Then
	         Call WriteToReport(micPass, "Conversations Tab Conversations Floating Page", "Conversations Tab Conversations Floating Page loaded Successfully", False)
	    Else
	         Call WriteToReport(micFail, "Conversations Tab Conversations Floating Page", "Failed to load Conversations Tab Conversations Floating Page", True)
	         Exit Function
	    End If

	    convStr1 = "Test Conversation "&getRandomNumber(6)
	    convStr2 = "Test Conversation for AR testing "&getRandomNumber(6)
	    setValue_WebEdit getObjectInfoFromXML("Description_convo_webedit", objectsFile, "Value"),convStr1,false, getObjectInfoFromXML("Description_convo_webedit", objectsFile, "Description")	
	    setValue_WebEdit getObjectInfoFromXML("Comments_Box", objectsFile, "Value"),convStr2,false, getObjectInfoFromXML("Comments_Box", objectsFile, "Description")	
	    Wait 2	
	    subj = dbgetsubject(srtBusinessValue)
	    subject = subj(1)
	    Call WriteToReport(micPass, "Subject pulled from the query is " & subject & "", "Subject pulled from the query is " & subject & "", False)
	    setValue_WebEdit getObjectInfoFromXML("Subject_convo_webedit", objectsFile, "Value"), subject, False, getObjectInfoFromXML("Subject_convo_webedit", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("References_Conver_btn", objectsFile, "Value"), getObjectInfoFromXML("References_Conver_btn", objectsFile, "Description")
	    If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=SetID","html tag:=SPAN").Exist(30) Then
	    	Call WriteToReport(micPass, "References Tab Conversations Floating Page", "References Tab Conversations Floating Page loaded Successfully", False)
	    Else
	        Call WriteToReport(micFail, "References Tab Conversations Floating Page", "Failed to load References Tab Conversations Floating Page", True)
	        Exit Function
	    End If

	    Call click_Lookup_Img_And_Select_Item("Look up Qualifier.*", "CONVR_Q_ALL_VW_CONVR_QUALIFIER_CD", GlobalDictionary("Qualifier"), "Qualifier")
	    setValue_WebEdit getObjectInfoFromXML("Reference_Id_Webedit", objectsFile, "Value"), item, False, getObjectInfoFromXML("Reference_Id_Webedit", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("Attachments_convo_tab", objectsFile, "Value"), getObjectInfoFromXML("Attachments_convo_tab", objectsFile, "Description")
	    If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=SetID","html tag:=SPAN").Exist(30) Then
	         Call WriteToReport(micPass, "Attachments Tab Conversations Floating Page", "Attachments Tab Conversations Floating Page loaded Successfully", False)
	    Else
	         Call WriteToReport(micFail, "Attachments Tab Conversations Floating Page", "Failed to load Attachments Tab Conversations Floating Page", True)
	         Exit Function
	    End If

	    btn_click getObjectInfoFromXML("Attach_Webbutton", objectsFile, "Value"), getObjectInfoFromXML("Attach_Webbutton", objectsFile, "Description")
	    Wait 5
	    btn_click getObjectInfoFromXML("Browse_attach_Webbutton", objectsFile, "Value"), getObjectInfoFromXML("Browse_attach_Webbutton", objectsFile, "Description")
	    Wait 10
	    Browser("creationtime:=0").Dialog("index:=1").WinEdit("attached text:=File &name:", "index:=1", "nativeclass:=Edit").Set("K:\AutoSource_Prod\PSFinUFT\Data\test.txt")
	    Wait 2
	    Browser("creationtime:=0").Dialog("index:=1").WinEdit("regexpwndtitle:=&Open").Click
	    Wait 2
	    btn_click getObjectInfoFromXML("Upload_Webbutton", objectsFile, "Value"), getObjectInfoFromXML("Upload_Webbutton", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
	    Wait 8
	    Browser("creationtime:=0").Page("index:=1").Link("html id:=CWB_CONVR_WRK_FILTER_PB", "html tag:=A").Click
	    Wait 6
	    setValue_WebEdit getObjectInfoFromXML("date_filterconvo_webedit", objectsFile, "Value"), Date, False, getObjectInfoFromXML("date_filterconvo_webedit", objectsFile, "Description")
	    btn_click getObjectInfoFromXML("search_filterconvo_btn", objectsFile, "Value"), getObjectInfoFromXML("search_filterconvo_btn", objectsFile, "Description")
	    Wait 5
	    If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CWB_CONVR_VW_ATTACH_EXIST\$0").Exist(20) Then
	        attachment=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CWB_CONVR_VW_ATTACH_EXIST\$0").GetROProperty("innertext")
	    Else
			Call WriteToReport (micFail, "Conversation is not visible and the Flag in the attachments column says N", "Conversation is not visible and the Flag in the attachments column says N", True)
	    End If

	    Set convGrid = Browser("creationtime:=0").page("index:=1").WebTable("html id:=tdgbrCWB_CONVR_VW\$0")
	    If convGrid.Exist(20) Then
	        descRowNo = getRownumberfromWebTable(convGrid,convStr1,5) 
	        If Trim(convGrid.GetCellData(descRowNo,9)) = "Y" Then
	            Call WriteToReport (micPass,"Conversation is visible and the Flag in the attachments column says Y","Conversation is visible and the Flag in the attachments column says Y", True)
	        Else
	            Call WriteToReport (micFail, "Conversation is not visible and the Flag in the attachments column says N", "Conversation is not visible and the Flag in the attachments column says N", True)
	        End If
	    Else
	       Call WriteToReport (micFail, "Conversation table in Details 2 tab", "Conversation table in Details 2 tab is not displayed", True)
	    End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Multi-Item Update --Remove ability to change Due Date and Payment Terms in Item List and add ability to update Reference Reason 
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function multipleitemupdate()
Dim srtBusinessValue,custinfo,custid,duedate, pmntterms, refreason, Refreason1,Refreason2
Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
srtBusinessValue = GlobalDictionary("BusinessUnit")	

if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Collections Workbench","html tag:=SPAN","index:=1").Exist(120) Then
     Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
else
     Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
End If
custinfo=dbgetmultipleitemupdate(srtBusinessValue)
If  IsArrayEmpty(custinfo) Then

    GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)
        Exit Function
     else
       GlobalDictionary("dataAvailable") = True
            
    End If
custid=custinfo(1)


setValue_WebEdit getObjectInfoFromXML("SetID_TXT", objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Unit_TXT", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT", objectsFile, "Description")
setValue_WebEdit getObjectInfoFromXML("Customer_TXT", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Customer_TXT", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")	

if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Last Payment Amount","html tag:=SPAN").Exist(60) Then
     Call WriteToReport(micPass, "Customer Details is Expanded and Populated on Collection Workbench Page ", "Customer Details is Expanded and Populated on Collection Workbench Page ", False)
else
     Call WriteToReport(micFail, "Customer Details is not Expanded and Populated on Collection Workbench Page ", "Customer Details is not Expanded and Populated on Collection Workbench Page ", True)
End If
	
check_CheckBox getObjectInfoFromXML("item1_webcheckbox", objectsFile, "Value"), getObjectInfoFromXML("item1_webcheckbox", objectsFile, "Description")	
check_CheckBox getObjectInfoFromXML("item2_webcheckbox", objectsFile, "Value"), getObjectInfoFromXML("item2_webcheckbox", objectsFile, "Description")	
WebList_select getObjectInfoFromXML("ItemAction_WebList", objectsFile, "Value"),"Multi-item Update",("Multiple-item Update option was successfully selected from the Choice WebList under Item Action ")
btn_click  getObjectInfoFromXML("Go_Btn", objectsFile, "Value"), getObjectInfoFromXML("Go_Btn", objectsFile, "Description")

if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Multi-item Update","html tag:=SPAN","index:=1").Exist(60) Then
     Call WriteToReport(micPass, "Multi-item Update Page is Loaded Successfully ", "Multi-item Update Page is Loaded Successfully ", False)
else
     Call WriteToReport(micFail, "Multi-item Update Page is not Loaded Successfully ", "Multi-item Update Page is not Loaded Successfully ", True)
End If

duedate=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=AR_MASS_CHNG_WK_NEW_DUE_DT","html tag:=INPUT").GetROProperty("disabled")
if duedate="1" Then
     Call WriteToReport(micPass, "Due Date Field is Displayed and not Editable", "Due Date Field is greyed out and not Editable", False)
else
     Call WriteToReport(micFail, "Due Date Field is  not Displayed", "Due Date Field is not Displayed", True)
End If

pmntterms=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=AR_MASS_CHNG_WK_NEW_PYMNT_TERMS_CD","html tag:=INPUT").GetROProperty("disabled")
if pmntterms="1" Then
     Call WriteToReport(micPass, "Payment terms Field is Displayed and not Editable", "Payment terms Field is greyed out and not Editable", False)
else
     Call WriteToReport(micFail, "Payment terms Field is  not Displayed", "Payment terms Field is  not Displayed", True)
End If

refreason=Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=AR_MASS_CHNG_WK_REF_REASON","html tag:=INPUT").GetROProperty("disabled")
if refreason="0" Then
     Call WriteToReport(micPass, "Reference Reason Field is Displayed and Editable", "Payment terms Field is Displayed and Editable", False)
else
     Call WriteToReport(micFail, "Reference Reason Field is  not Displayed", "Reference Reason Field is  not Displayed", True)
End If

If srtBusinessValue<>"00017" Then
	

setValue_WebEdit getObjectInfoFromXML("RefReason_WebEdit", objectsFile, "Value"),GlobalDictionary("RefReason"),false, getObjectInfoFromXML("RefReason_WebEdit", objectsFile, "Description")
btn_click  getObjectInfoFromXML("Ok_multipleitem_btn", objectsFile, "Value"), getObjectInfoFromXML("Ok_multipleitem_btn", objectsFile, "Description")

If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_REFRSN_VW_DESCR\$0","html tag:=SPAN").Exist(30) Then
    Refreason1=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_REFRSN_VW_DESCR\$0","html tag:=SPAN").GetROProperty("innertext")
Else
    Call WriteToReport(micFail, "Reference Reason Descr Field is  not Displayed", "Reference Reason Field is  not Displayed", True)   
    Exit Function
End If

if Refreason1="Delivery" Then
     Call WriteToReport(micPass, "Reference Reason is Populated with Delivery for item 1 under Reference Reason Descr Column ", "Reference Reason is Populated with Delivery under Reference Reason Descr Column ", False)
else
     Call WriteToReport(micFail, "Reference Reason Descr Field is  not Displayed", "Reference Reason Field is  not Displayed", True)
End If

Refreason2=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_REFRSN_VW_DESCR\$1","html tag:=SPAN").GetROProperty("innertext")
if Refreason2="Delivery" Then
     Call WriteToReport(micPass, "Reference Reason is Populated with Delivery for item 2 under Reference Reason Descr Column ", "Reference Reason is Populated with Delivery under Reference Reason Descr Column ", False)
else
     Call WriteToReport(micFail, "Reference Reason Descr Field is  not Displayed", "Reference Reason Field is  not Displayed", True)
End If

End If
End If	
End Function

'**************************************************************************************************************
''' <summary> 
''' Transfer Payment - PS, AS400, and 03 Information, Transfer Payment - PS, AS400, and 00 Information 
''' </summary>
''' <author>Rama Peela</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function transferPaymentPSAS40003Info()
	Dim srtBusinessValue, srtBusinessValue1,custinfo,custid,custinfo1,custid1,arup,arup1,status,runcontrol,item,tableobj,rowNumber,columncount
	Call WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
	'if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
	'closeAllBrowsersExceptQC()
	'SystemUtil.Run "https://psfnapwbregvh1.corp.cdw.com:444/psp/fnreg/EMPLOYEE/ERP/c/MAINTAIN_RECEIVABLES.TRN_IDENTIFY.GBL?FolderPath=PORTAL_ROOT_OBJECT.EPCO_ACCOUNTS_RECEIVABLE.EPAR_MAINTENANCE3.EPAR_TRANSFER_WORKSHEETS3.EP_TRN_IDENTIFY_GBL&IsFolder=false&IgnoreParamTempl=FolderPath%2cIsFolder"
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) Then
	Else
		Exit Function
	End If

	' Wait 8
	'   setValue_WebEdit getObjectInfoFromXML("UserName_Edit", objectsFile, "Value"),"LISAPAP",false, getObjectInfoFromXML("UserName_Edit", objectsFile, "Description")
	'   setValue_WebEdit getObjectInfoFromXML("Pwd_Edit", objectsFile, "Value"),ENCRYPTEDPASSWORD,true, getObjectInfoFromXML("Pwd_Edit", objectsFile, "Description")
	'   btn_click getObjectInfoFromXML("Login_BTN", objectsFile, "Value"), getObjectInfoFromXML("Login_BTN", objectsFile, "Description")
	'   Wait 4
	srtBusinessValue = GlobalDictionary("BusinessUnit")
	srtBusinessValue1= GlobalDictionary("BusinessUnit1")
	runcontrol=GlobalDictionary("Runcontrol")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Create Worksheet","html tag:=H1","index:=0").Exist(50) Then
	     Call WriteToReport(micPass, "Create Worksheet Page is Loaded Successfully ", "Create Worksheet Page is Loaded Successfully ", False)
	Else
	     Call WriteToReport(micFail, "Create Worksheet Page is not Loaded Successfully ", "Create Worksheet Page is not Loaded Successfully ", True)
	End If

	btn_click getObjectInfoFromXML("add_new_value_ccc", objectsFile, "Value"), getObjectInfoFromXML("add_new_value_ccc", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Create Worksheet","html tag:=H1","index:=1").Exist(60) Then
	     Call WriteToReport(micPass, "ADD a New Value Tabbed Page is Loaded Successfully ", "ADD a New Value Tabbed Page is Loaded Successfully ", False)
	Else
	     Call WriteToReport(micFail, "ADD a New Value Tabbed Page is not Loaded Successfully ", "ADD a New Value Tabbed Page is not Loaded Successfully ", True)
	End If

	setValue_WebEdit getObjectInfoFromXML("Unit_transferCW_webedit", objectsFile, "Value"),GlobalDictionary("BusinessUnit1"),false, getObjectInfoFromXML("Unit_transferCW_webedit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("wrksheetID_transferCW_webedit", objectsFile, "Value"),"NEXT",false, getObjectInfoFromXML("wrksheetID_transferCW_webedit", objectsFile, "Description")
	'btn_click getObjectInfoFromXML("Add_CCC", objectsFile, "Value"), getObjectInfoFromXML("Add_CCC", objectsFile, "Description")
	Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Transfer Selection", "html tag:=SPAN","index:=1").Exist(30) Then
	     Call WriteToReport(micPass, "Transfer Selection Page is Loaded Successfully ", "Transfer Selection Page is Loaded Successfully ", False)
	Else
	     Call WriteToReport(micFail, "Transfer Selection Page is not Loaded Successfully ", "Transfer Selection Page is not Loaded Successfully ", True)
	End If

	custinfo=dbgettransferPaymentPSAS40003Info(srtBusinessValue1)
	custid=custinfo(1)
	item=Trim(custinfo(2))
	setValue_WebEdit getObjectInfoFromXML("Custid_transferCW_webedit", objectsFile, "Value"),custid,false, getObjectInfoFromXML("Custid_transferCW_webedit", objectsFile, "Description")
	Wait 2
	setValue_WebEdit getObjectInfoFromXML("Qualcode_transferCW_webedit", objectsFile, "Value"),GlobalDictionary("Qualcode"),false, getObjectInfoFromXML("Qualcode_transferCW_webedit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("Reference_transferCW_webedit", objectsFile, "Value"),item,false, getObjectInfoFromXML("Reference_transferCW_webedit", objectsFile, "Description")
	btn_click  getObjectInfoFromXML("Build_transferCW_Btn", objectsFile, "Value"), getObjectInfoFromXML("Build_transferCW_Btn", objectsFile, "Description")
	Wait 3 
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Transfer ID","html tag:=SPAN").Exist(30) Then
	     Call WriteToReport(micPass, "Worksheet1 Tabbed Page is Loaded Successfully ", "Worksheet1 Tabbed  Page is Loaded Successfully ", False)
	Else
	     Call WriteToReport(micFail, "Worksheet1 Tabbed Page is not Loaded Successfully ", "Worksheet1 Tabbed Page is not Loaded Successfully ", True)
	End If

	custinfo1=dbgettransferPaymentPSAS40003Info(srtBusinessValue)
	custid1=custinfo1(1)
	setValue_WebEdit getObjectInfoFromXML("Unit_transferCW2_edit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_transferCW2_edit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("custid_transferCW2_edit", objectsFile, "Value"),custid1,false, getObjectInfoFromXML("custid_transferCW2_edit", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Click_Save_Add", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_Add", objectsFile, "Description")
	If  Browser("creationtime:=0").page("index:=1").Link("innertext:=View All","index:=0").Exist(10) Then
		Browser("creationtime:=0").page("index:=1").Link("innertext:=View All","index:=0").Click
	End If

	Set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblTRN_ITEM\$0","htmltag:=TABLE")
	If tableobj.Exist(30) Then
		rowNumber=getRownumberfromWebTable (tableobj,item,5)
		tableobj.ChildItem(rowNumber,2,"WebCheckBox",0).set "ON"
	Else
	   Call WriteToReport(micFail, "items grid ", "Items grid is not displayed", True)
	     Exit Function
	End If

	'Browser("creationtime:=1").Page("index:=1").WebCheckBox("html id:=TRN_ITEM_ITEM_SELECTED\$0","html tag:=INPUT").Set("ON")
	Call WriteToReport (micPass,"CheckBox for Item "&item&" is Checked to indicate it will be Transferred from "& srtBusinessValue1&" Successfully","CheckBox for Item "&item&" is Checked to indicate it will be Transferred from "& srtBusinessValue1&" Successfully", True)
	btn_click getObjectInfoFromXML("Click_Save_Add", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_Add", objectsFile, "Description")
	If Browser("creationtime:=0").page("index:=1").WebButton("index:=0", "html id:=#ICOK").exist(20) Then
		Browser("creationtime:=0").page("index:=1").WebButton("index:=0", "html id:=#ICOK").Click
		wait 5
		Browser("creationtime:=0").page("index:=1").Image("alt:=Look up Analyst").Click
		wait 5
		Browser("creationtime:=0").page("index:=1").Link("html id:=SEARCH_RESULT1").Click
		wait 5
		Browser("creationtime:=0").page("index:=1").Image("alt:=Look up Sales").Click
		wait 5
		Browser("creationtime:=0").page("index:=1").Link("html id:=SEARCH_RESULT1").Click
		wait 5
		Browser("creationtime:=0").page("index:=1").Image("alt:=Look up Collector").Click
		wait 5
		Browser("creationtime:=0").page("index:=1").Link("html id:=SEARCH_RESULT1").Click
		wait 5
		btn_click getObjectInfoFromXML("Click_Save_Add", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_Add", objectsFile, "Description")
	End If

	btn_click getObjectInfoFromXML("worksheetactn_transferCW2_Link", objectsFile, "Value"), getObjectInfoFromXML("worksheetactn_transferCW2_Link", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Finalize Worksheet","html tag:=SPAN","index:=0").Exist(30) Then
	     Call WriteToReport(micPass, "Finalize Worksheet  Page is Loaded Successfully ", "Finalize Worksheet  Page is Loaded Successfully ", False)
	Else
	     Call WriteToReport(micFail, "Finalize Worksheet Page is not Loaded Successfully ", "Finalize Worksheet Page is not Loaded Successfully ", True)
	     Exit Function
	End If
	WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"),"Batch Standard",("Batch Standard option was successfully selected from the Posting Action WebList ")
	btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
	'End If
	arup=arupdate(srtBusinessValue1,runcontrol)
	arup1=arupdate(srtBusinessValue,runcontrol)

	If SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=View/Update Item Details","html tag:=H1","index:=0").Exist(30) Then
		     Call WriteToReport(micPass, "View/Update Item Details Page is Loaded Successfully ", "View/Update Item Details  Page is Loaded Successfully ", False)
		Else
		     Call WriteToReport(micFail, "View/Update Item Details Page is not Loaded Successfully ", "View/Update Item Details Page is not Loaded Successfully ", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("Unit_Vuitem_WebEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit1"),false, getObjectInfoFromXML("Unit_Vuitem_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("itemid_Vuitem_WebEdit", objectsFile, "Value"),item,false, getObjectInfoFromXML("itemid_Vuitem_WebEdit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 3
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Line","html tag:=SPAN").Exist(30) Then
		     Call WriteToReport(micPass, "Details 1 Tabbed Page is Loaded Successfully ", "Details 1 Tabbed  Page is Loaded Successfully ", False)
		Else
		     Call WriteToReport(micFail, "Details 1 Tabbed Page is not Loaded Successfully ", "Details 1 Tabbed Page is not Loaded Successfully ", True)
		End If

		status=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PSXLATITEM_XLATSHORTNAME","html tag:=SPAN").GetROProperty("innertext")
		If status="Closed" Then
		     Call WriteToReport(micPass, "Item Status is closed for Item "&item&" with Business Unit "& srtBusinessValue1&"", "Item Status is closed for Item "&item&" with Business Unit "& srtBusinessValue1&"", False)
		Else
		     Call WriteToReport(micFail, "Item Status is Open for Item "&item&" with Business Unit "& srtBusinessValue1&"", "Item Status is Open for Item "&item&" with Business Unit "& srtBusinessValue1&"", True)
		End If
	End If

	If SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=View/Update Item Details","html tag:=H1","index:=0").Exist(30) Then
		     Call WriteToReport(micPass, "View/Update Item Details Page is Loaded Successfully ", "View/Update Item Details  Page is Loaded Successfully ", False)
		Else
		     Call WriteToReport(micFail, "View/Update Item Details Page is not Loaded Successfully ", "View/Update Item Details Page is not Loaded Successfully ", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("Unit_Vuitem_WebEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_Vuitem_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("itemid_Vuitem_WebEdit", objectsFile, "Value"),item,false, getObjectInfoFromXML("itemid_Vuitem_WebEdit", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=No matching values were found.*","index:=0").Exist(10) Then
			Call WriteToReport(micFail, "Item search ", "Item search returned no values", True)
			Exit Function
		End If

		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Line","html tag:=SPAN").Exist(60) Then
		     Call WriteToReport(micPass, "Details 1 Tabbed Page is Loaded Successfully ", "Details 1 Tabbed  Page is Loaded Successfully ", False)
		Else
		     Call WriteToReport(micFail, "Details 1 Tabbed Page is not Loaded Successfully ", "Details 1 Tabbed Page is not Loaded Successfully ", True)
		End If

		status=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PSXLATITEM_XLATSHORTNAME","html tag:=SPAN").GetROProperty("innertext")
		If status="Open" Then
		     Call WriteToReport(micPass, "Item Status is Open for Item "&item&" with Business Unit "& srtBusinessValue&"", "Item Status is Open for Item "&item&" with Business Unit "& srtBusinessValue&"", False)
		Else
		     Call WriteToReport(micFail, "Item Status is Closed for Item "&item&" with Business Unit "& srtBusinessValue&"", "Item Status is Closed for Item "&item&" with Business Unit "& srtBusinessValue&"", True)
		End If
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' ediTransFrmCDWDirectAccount Function is to verify the AR15_07 Apply Payment - EDI Transmission from CDW Direct Account
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function ediTransFrmCDWDirectAccount()
  '	Err.Clear
'    On Error Resume Next  
	Dim bSetSecure, cdwDirect, strCaptDeposit, depositid, sVerifyStatus, i
    bSetSecure = False
   
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
  	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
    if Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Regular Deposit Page", "Successfully Navigated to Regular Deposit Page", False)
	else
		Call WriteToReport(micFail, "Regular Deposit Page", "Failed to load Regular Deposit Page", True)
	End If 
  
   	cdwDirect = dbFetchEDITransCDWDirectAccount(GlobalDictionary("BusinessUnit"))	   
	If IsArrayEmpty(cdwDirect) Then
     GlobalDictionary("dataAvailable") = false
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ",True)
 	   Exit function
	else
		GlobalDictionary("dataAvailable") = True  
		Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
		btn_click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"), getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Description")
     	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
     	'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARED_CLSVW_BUSINESS_UNIT", cdwDirect(0),"Deposit Unit")
     	Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARED_NONVW_BUSINESS_UNIT", cdwDirect(0),"Deposit Unit")
      	Browser("title:=Regular Deposit").Page("title:=Regular Deposit").PSFrame("name:=TargetContent").WebButton("html id:=#ICSearch", "name:=Add").Click
    End If

	if Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=DEPOSIT_CONTROL_CONTROL_CNT","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Totals Tab", "Totals Tab loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Totals Tab", "Failed to load Totals Tab", True)
	End If

  	setValue_WebEdit getObjectInfoFromXML("AccountingDate_WebEdit", objectsFile, "Value"),Date,bSetSecure, getObjectInfoFromXML("AccountingDate_WebEdit", objectsFile, "Description")  
	Call click_Lookup_Img_And_Select_Item("Look up Bank Code.*","BANK_AR_BD_VW_BANK_CD","00001","Bank Code")
    Call click_Lookup_Img_And_Select_Item("Look up Bank Account.*","BANK_AR_D_VW_BANK_ACCT_KEY","0101","Bank Account")
    Call click_Lookup_Img_And_Select_Item("Look up Deposit Type.*","DEPOST_TYPE_TBL_DEPOSIT_TYPE","L","Deposit Type")
    setValue_WebEdit getObjectInfoFromXML("ControlTotalAmount_WebEdit", objectsFile, "Value"),cdwDirect(3),bSetSecure, getObjectInfoFromXML("ControlTotalAmount_WebEdit", objectsFile, "Description") 
    setValue_WebEdit getObjectInfoFromXML("Count_WebEdit", objectsFile, "Value"),"1",bSetSecure, getObjectInfoFromXML("Count_WebEdit", objectsFile, "Description")
    Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	btn_click getObjectInfoFromXML("Payments_WebElement", objectsFile, "Value"), getObjectInfoFromXML("Payments_WebElement", objectsFile, "Description")
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
 	if Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_PAYMENT_ID\$0","index:=0").Exist(30) Then
    	Call WriteToReport(micPass, "Payments Tab", "Payments Tab loaded Successfully", False)
   	else
        Call WriteToReport(micFail, "Payments Tab", "Failed to load Payments Tab", True)
    End If 

    setValue_WebEdit getObjectInfoFromXML("paymentid_WebEdit", objectsFile, "Value"),getRandomNumber(7),bSetSecure, getObjectInfoFromXML("paymentid_WebEdit", objectsFile, "Description")
   	setValue_WebEdit getObjectInfoFromXML("Amount_WebEdit", objectsFile, "Value"),cdwDirect(3),bSetSecure, getObjectInfoFromXML("Amount_WebEdit", objectsFile, "Description") 
    Call click_Lookup_Img_And_Select_Item("Look up Currency.*","AR_PAY_CUR_VW_PAYMENT_CURRENCY",GlobalDictionary("Currency"),"Currency")
    'Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_CLSVW_CUST_ID",cdwDirect(1),"Customer ID")
    Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_NONVW_CUST_ID",cdwDirect(1),"Customer ID")
    Call click_Lookup_Img_And_Select_Item("Look up Qual Code.*","AR_FLD_REF_VW_REF_QUALIFIER_CODE","I","Qual Code")
    Call click_Lookup_Img_And_Select_Item("Look up Reference.*","ITEM_ITM2_CLSVW_ITEM",cdwDirect(2),"Reference")
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
	Wait 5
	strCaptDeposit = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").GetROProperty("innertext")
 	Call WriteToReport(micPass, "Captured Deposit Id", "Captured Deposit ID is "&strCaptDeposit&"", False)
	PSFinLogout()
	login(GlobalDictionary("SignInUser1"))
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))	
    if Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Find an Existing Payment Tab", "Successfully loaded Find an Existing Payment Tab", False)
	else
		Call WriteToReport(micFail, "Find an Existing Payment Tab", "Failed to load Find an Existing Payment Tab", True)
	End If

	'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_CLSVW_DEPOSIT_BU","00001","Deposit Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_NONVW_DEPOSIT_BU","00001","Deposit Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Deposit ID.*","DEPOSIT_NP_VW_DEPOSIT_ID",strCaptDeposit,"Deposit ID")
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
		Call WriteToReport(micPass, "Payment Worksheet Selection Page", "Payment Worksheet Selection Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Payment Worksheet Selection Page", "Failed to load Payment Worksheet Selection Page", True)
	End If

	btn_click getObjectInfoFromXML("PaymentBuild_Button", objectsFile, "Value"), getObjectInfoFromXML("PaymentBuild_Button", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").Exist(30) Then
		Call WriteToReport(micPass, "Payment Worksheet Application Page", "Payment Worksheet Application Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Payment Worksheet Application Page", "Failed to load Payment Worksheet Application Page", True)
	End If

	webList_select getObjectInfoFromXML("Patanitem_WebList", objectsFile, "Value"),"Pay An Item", getObjectInfoFromXML("Patanitem_WebList", objectsFile, "Description")

  	'Verify_ClickCheckBox getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Description")
	''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	Dim rowNumberForNewItem
	If verifyItemIDVal(cdwDirect(2)) Then
		Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM",cdwDirect(2),"Item ID")
		Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")
	else
	    If isEmptyItemIDlineExist Then
    		rowNumberForNewItem =   getRowNumberForNewItem
	    	'Browser("creationtime:=0").page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&rowNumberForNewItem).click
	    	Browser("creationtime:=0").page("index:=1").Image("name:=ITEM\$prompt\$img\$"&rowNumberForNewItem).click
		    wait 5
			Browser("creationtime:=0").page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set ""&cdwDirect(2)
			wait 3
			Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICSearch").Click
			wait 5
			Browser("creationtime:=0").page("index:=1").Link("innertext:="&cdwDirect(2)).click
    	else
			element_Click getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Value"), getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Description")      
			btn_click  getObjectInfoFromXML("okwin_Button", objectsFile, "Value"), getObjectInfoFromXML("okwin_Button", objectsFile, "Description") 
			rowNumberForNewItem =   getRowNumberForNewItem   '
			'Browser("creationtime:=0").page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&rowNumberForNewItem).click
			Browser("creationtime:=0").page("index:=1").Image("name:=ITEM\$prompt\$img\$"&rowNumberForNewItem).click
			wait 5
			Browser("creationtime:=0").page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set ""&cdwDirect(2)
			wait 3
			Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICSearch").Click
			wait 5
			Browser("creationtime:=0").page("index:=1").Link("innertext:="&cdwDirect(2)).click
			wait 3
		End If
		'  Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")
	End If

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'    Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM",cdwDirect(2),"Item ID")
'    Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")

	unSelectItemID(cdwDirect(2))
'    Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM",cdwDirect(2),"Item ID")''''''''''''''''''''''''''''''''
'    
'    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'    
'    If Browser("creationtime:=0").page("index:=1").WebElement("innertext:=You may not change the Item ID.*","index:=0").Exist(30) Then
'    	Browser("creationtime:=0").page("index:=1").WebButton("name:=OK","index:=2").Click  
'    	Browser("creationtime:=0").page("index:=1").WebButton("name:=Return to Search").Click  
'    	Browser("creationtime:=0").page("index:=1").WebButton("name:=No").click
'    	Browser("creationtime:=0").page("index:=1").Link("name:="&strCaptDeposit).click
'    	Browser("creationtime:=0").page("index:=1").WebElement("title:=Add multiple new rows at row.*","index:=0").Click
'    	Browser("creationtime:=0").Dialog("Regexpwndtitle:= cdw.com needs some information").WinButton("regexpwndtitle:=OK").Click 
'    	Browser("creationtime:=0").page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$1*","default value:=","index:=0").Set ""&cdwDirect(2)
'    End If
'  
'    
'    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'    Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")

	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
	Wait 5
	depositid = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").GetROProperty("innertext")
	login("GWENCHO")
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_CLSVW_DEPOSIT_BU","00001","Deposit Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_NONVW_DEPOSIT_BU","00001","Deposit Unit")
	setValue_WebEdit getObjectInfoFromXML("depositid_WebEdit", objectsFile, "Value"),depositid,bSetSecure, getObjectInfoFromXML("depositid_WebEdit", objectsFile, "Description") 
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 5
	click_Link getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Description")  
	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=REALTIME_WRK_RTM_RUN").Exist(5) Then
		Call WriteToReport(micPass, "Worksheet Action Page", "Worksheet Action Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Worksheet Action Page", "Failed to load Worksheet Action Page", True)
	End If
	  
	WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"),"Batch Standard", getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Description")      
	btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
	Wait 10
	btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
 	SelectMainMenu1(GlobalDictionary("MainMenuSelection2"))
	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist Then
		Call WriteToReport(micPass, "Request Receivables Update Page", "Successfully Navigated to Request Receivables Update Page", False)
	else
		Call WriteToReport(micFail, "Request Receivables Update Page", "Failed to load Request Receivables Update Page", True)
	End If

	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 3
	click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebList("html id:=POSTING_REQUEST_PROCESS_FREQUENCY\$0","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Receivable Update Request Page", "Receivable Update Request Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Receivable Update Request Page", "Failed to load Receivable Update Request Page", True)
	End If

	'Call click_Lookup_Img_And_Select_Item("Look up Group Unit.*","SP_BUARGR_CLSVW_GROUP_BU", "00001","Group Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Group Unit.*","SP_BUARGR_NONVW_GROUP_BU", "00001","Group Unit")
	WebList_select getObjectInfoFromXML("Process_Frequency", objectsFile, "Value"),"Always", getObjectInfoFromXML("Process_Frequency", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("AccountingDate_From", objectsFile, "Value"),"01/01/1990",bSetSecure,"Accounting Date From"
	setValue_WebEdit getObjectInfoFromXML("AccountingDate_To", objectsFile, "Value"),"01/01/2050",bSetSecure,"Accounting Date To"
	btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
	Wait 10
	If IsObjectExist (getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Description")) = True Then
		check_CheckBox getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Description") 
	End If

	btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
	Wait 10
	Dim processInstance
	processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
	btn_click  getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
	Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
	else
	Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
	End If
	
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	Browser("creationtime:=0").page("index:=1").WebEdit("html id:=PMN_FILTER_WRK_PRCSNAME").Set ""   
	Browser("creationtime:=0").page("index:=1").WebList("html id:=PMN_FILTER_WRK_PRCSTYPE").Select "#0" 
	
	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	getStatusupdateProcessTime "ARUPDATE",split(processInstance,":")(1)
	SelectMainMenu1(GlobalDictionary("MainMenuSelection3"))
	if Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "View/Update Item Details Page", "View/Update Item Details Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "View/Update Item Details Page", "Failed to load View/Update Item Details Page", True)
	End If

	Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BUARDS_NONVW_BUSINESS_UNIT","00001","Business Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","CUST_SRCH_VW_CUST_ID",cdwDirect(1),"Customer ID")
	setValue_WebEdit getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Value"),cdwDirect(2),bSetSecure, getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Description") 
	btn_click  getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PSXLATITEM_XLATSHORTNAME").Exist(60) Then
		Call WriteToReport(micPass, "Detail 1 Tab", "Detail 1 Tab loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Detail 1 Tab", "Failed to load Detail 1 Tab", True)
	End If
	
	'Will wait for 15 minutes max
	For i = 1 to 20
	
		sVerifyStatus = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PSXLATITEM_XLATSHORTNAME").GetROProperty("innertext")
	
		If sVerifyStatus = "Closed" Then
			Exit For
		Else
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICRefresh").Click
			wait 45	
		End If
	Next

	verifyValue getObjectInfoFromXML("status_Webelemet", objectsFile, "Value"),"Closed","innertext","Status"
End Function

'**************************************************************************************************************
''' <summary> 
''' ediTransFrmCDWGovtAccount Function is to verify the AR15_08 Apply Payment - EDI Transmission from CDW Govt Account
''' </summary>
''' <author>Vikram Reddy Enukonda</author>

''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function ediTransFrmCDWGovtAccount()
  	'Err.Clear
	'On Error Resume Next  
	Dim bSetSecure, cdwDirect, strCaptDeposit, depositid
    bSetSecure = False
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
  	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
    if Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Regular Deposit Page", "Successfully Navigated to Regular Deposit Page", False)
	else
		Call WriteToReport(micFail, "Regular Deposit Page", "Failed to load Regular Deposit Page", True)
	End If

   	cdwDirect = dbFetchEDITransCDWDirectAccount(GlobalDictionary("BusinessUnit"))	   
    If IsArrayEmpty(cdwDirect) Then
    	GlobalDictionary("dataAvailable") = false
 	   	Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ",True)
 	   	Exit function
	else
		GlobalDictionary("dataAvailable") = True  
		Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
		btn_click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"), getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Description")
		Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
		'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARED_CLSVW_BUSINESS_UNIT", cdwDirect(0),"Deposit Unit")
		Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARED_NONVW_BUSINESS_UNIT", cdwDirect(0),"Deposit Unit")
		Browser("title:=Regular Deposit").Page("title:=Regular Deposit").PSFrame("name:=TargetContent").WebButton("html id:=#ICSearch", "name:=Add").Click
    End If

	if Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=DEPOSIT_CONTROL_CONTROL_CNT","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Totals Tab", "Totals Tab loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Totals Tab", "Failed to load Totals Tab", True)
	End If

    setValue_WebEdit getObjectInfoFromXML("AccountingDate_WebEdit", objectsFile, "Value"),Date,bSetSecure, getObjectInfoFromXML("AccountingDate_WebEdit", objectsFile, "Description")      
	Call click_Lookup_Img_And_Select_Item("Look up Bank Code.*","BANK_AR_BD_VW_BANK_CD","00001","Bank Code")    
    Call click_Lookup_Img_And_Select_Item("Look up Bank Account.*","BANK_AR_D_VW_BANK_ACCT_KEY","0101","Bank Account")   
    Call click_Lookup_Img_And_Select_Item("Look up Deposit Type.*","DEPOST_TYPE_TBL_DEPOSIT_TYPE","L","Deposit Type")   
    setValue_WebEdit getObjectInfoFromXML("ControlTotalAmount_WebEdit", objectsFile, "Value"),cdwDirect(3),bSetSecure, getObjectInfoFromXML("ControlTotalAmount_WebEdit", objectsFile, "Description")     
    setValue_WebEdit getObjectInfoFromXML("Count_WebEdit", objectsFile, "Value"),"1",bSetSecure, getObjectInfoFromXML("Count_WebEdit", objectsFile, "Description")   
    Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	btn_click getObjectInfoFromXML("Payments_WebElement", objectsFile, "Value"), getObjectInfoFromXML("Payments_WebElement", objectsFile, "Description")
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	if Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_PAYMENT_ID\$0","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Payments Tab", "Payments Tab loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Payments Tab", "Failed to load Payments Tab", True)
	End If 

    setValue_WebEdit getObjectInfoFromXML("paymentid_WebEdit", objectsFile, "Value"),getRandomNumber(7),bSetSecure, getObjectInfoFromXML("paymentid_WebEdit", objectsFile, "Description") 
   	setValue_WebEdit getObjectInfoFromXML("Amount_WebEdit", objectsFile, "Value"),cdwDirect(3),bSetSecure, getObjectInfoFromXML("Amount_WebEdit", objectsFile, "Description")
    Call click_Lookup_Img_And_Select_Item("Look up Currency.*","AR_PAY_CUR_VW_PAYMENT_CURRENCY",GlobalDictionary("Currency"),"Currency")
    'Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_CLSVW_CUST_ID",cdwDirect(1),"Customer ID")
    Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_NONVW_CUST_ID",cdwDirect(1),"Customer ID")
    Call click_Lookup_Img_And_Select_Item("Look up Qual Code.*","AR_FLD_REF_VW_REF_QUALIFIER_CODE","I","Qual Code")
    Call click_Lookup_Img_And_Select_Item("Look up Reference.*","ITEM_ITM2_CLSVW_ITEM",cdwDirect(2),"Reference")
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
	Wait 5
	strCaptDeposit = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").GetROProperty("innertext")
 	Call WriteToReport(micPass, "Captured Deposit Id", "Captured Deposit ID is "&strCaptDeposit&"", False)
	PSFinLogout()
	login(GlobalDictionary("SignInUser1"))
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
    if Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
        Call WriteToReport(micPass, "Find an Existing Payment Tab", "Successfully loaded Find an Existing Payment Tab", False)
   	else
        Call WriteToReport(micFail, "Find an Existing Payment Tab", "Failed to load Find an Existing Payment Tab", True)
    End If

	'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_CLSVW_DEPOSIT_BU","00002","Deposit Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_NONVW_DEPOSIT_BU","00002","Deposit Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Deposit ID.*","DEPOSIT_NP_VW_DEPOSIT_ID",strCaptDeposit,"Deposit ID")
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
        Call WriteToReport(micPass, "Payment Worksheet Selection Page", "Payment Worksheet Selection Page loaded Successfully", False)
   	else
        Call WriteToReport(micFail, "Payment Worksheet Selection Page", "Failed to load Payment Worksheet Selection Page", True)
    End If

	btn_click getObjectInfoFromXML("PaymentBuild_Button", objectsFile, "Value"), getObjectInfoFromXML("PaymentBuild_Button", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").Exist(30) Then
        Call WriteToReport(micPass, "Payment Worksheet Application Page", "Payment Worksheet Application Page loaded Successfully", False)
   	else
        Call WriteToReport(micFail, "Payment Worksheet Application Page", "Failed to load Payment Worksheet Application Page", True)
    End If

	webList_select getObjectInfoFromXML("Patanitem_WebList", objectsFile, "Value"),"Pay An Item", getObjectInfoFromXML("Patanitem_WebList", objectsFile, "Description")
  	Verify_ClickCheckBox getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Description")

	''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	Dim rowNumberForNewItem
	If verifyItemIDVal(cdwDirect(2)) Then
		Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM",cdwDirect(2),"Item ID")
		Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")
	else
    	If isEmptyItemIDlineExist Then
			rowNumberForNewItem =   getRowNumberForNewItem
			'Browser("creationtime:=0").page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&rowNumberForNewItem).click
			Browser("creationtime:=0").page("index:=1").Image("name:=ITEM\$prompt\$img\$"&rowNumberForNewItem).click
			wait 5
			Browser("creationtime:=0").page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set ""&cdwDirect(2)
			wait 3
			Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICSearch").Click
			wait 5
			Browser("creationtime:=0").page("index:=1").Link("innertext:="&cdwDirect(2)).click
    	else
			element_Click getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Value"), getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Description")      
			btn_click  getObjectInfoFromXML("okwin_Button", objectsFile, "Value"), getObjectInfoFromXML("okwin_Button", objectsFile, "Description") 
			rowNumberForNewItem =   getRowNumberForNewItem   '
			'Browser("creationtime:=0").page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&rowNumberForNewItem).click
			Browser("creationtime:=0").page("index:=1").Image("name:=ITEM\$prompt\$img\$"&rowNumberForNewItem).click
			wait 5
			Browser("creationtime:=0").page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set ""&cdwDirect(2)
			wait 3
			Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICSearch").Click
			wait 5
			Browser("creationtime:=0").page("index:=1").Link("innertext:="&cdwDirect(2)).click
			wait 3
		End If
		'  Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")
	End If

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'    Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM",cdwDirect(2),"Item ID")
'    Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")

	unSelectItemID(cdwDirect(2))
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
	Wait 5
	depositid = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").GetROProperty("innertext")
	login("GWENCHO")
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_CLSVW_DEPOSIT_BU","00002","Deposit Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_NONVW_DEPOSIT_BU","00002","Deposit Unit")
	setValue_WebEdit getObjectInfoFromXML("depositid_WebEdit", objectsFile, "Value"),depositid,bSetSecure, getObjectInfoFromXML("depositid_WebEdit", objectsFile, "Description") 
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 5
	click_Link getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=REALTIME_WRK_RTM_RUN").Exist(30) Then
		Call WriteToReport(micPass, "Worksheet Action Page", "Worksheet Action Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Worksheet Action Page", "Failed to load Worksheet Action Page", True)
	End If

	WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"),"Batch Standard", getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Description")      
	btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
	Wait 10
	btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
	SelectMainMenu1(GlobalDictionary("MainMenuSelection2"))
		if Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(30) Then
        Call WriteToReport(micPass, "Request Receivables Update Page", "Successfully Navigated to Request Receivables Update Page", False)
   	else
        Call WriteToReport(micFail, "Request Receivables Update Page", "Failed to load Request Receivables Update Page", True)
    End If

	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 3
	click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebList("html id:=POSTING_REQUEST_PROCESS_FREQUENCY\$0","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Receivable Update Request Page", "Receivable Update Request Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Receivable Update Request Page", "Failed to load Receivable Update Request Page", True)
	End If

	'Call click_Lookup_Img_And_Select_Item("Look up Group Unit.*","SP_BUARGR_CLSVW_GROUP_BU", "00002","Group Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Group Unit.*","SP_BUARGR_NONVW_GROUP_BU", "00002","Group Unit")
	WebList_select getObjectInfoFromXML("Process_Frequency", objectsFile, "Value"),"Always", getObjectInfoFromXML("Process_Frequency", objectsFile, "Description")
   	setValue_WebEdit getObjectInfoFromXML("AccountingDate_From", objectsFile, "Value"),DATE,bSetSecure,"Accounting Date From"
    setValue_WebEdit getObjectInfoFromXML("AccountingDate_To", objectsFile, "Value"),DATE,bSetSecure,"Accounting Date To"
    btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
    Wait 10
   	If IsObjectExist (getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Description")) = True Then
   		check_CheckBox getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Description") 
  	End If

    btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
    Wait 10
    Dim processInstance1
    processInstance1 = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
  	btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
   	if Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
    	Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
   	else
        Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
    End If

	''''''''''''''''''''''''''''''''''''''''''
	Browser("creationtime:=0").page("index:=1").WebEdit("html id:=PMN_FILTER_WRK_PRCSNAME").Set ""   
	Browser("creationtime:=0").page("index:=1").WebList("html id:=PMN_FILTER_WRK_PRCSTYPE").Select "#0" 
	'''''''''''''''''''''''''''''''''''''''''''

	getStatusupdateProcessTime "ARUPDATE",split(processInstance1,":")(1)
	SelectMainMenu1(GlobalDictionary("MainMenuSelection3"))
	if Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "View/Update Item Details Page", "View/Update Item Details Page loaded Successfully", False)
	else
		Call WriteToReport(micFail, "View/Update Item Details Page", "Failed to load View/Update Item Details Page", True)
	End If

	'Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BUARDS_CLSVW_BUSINESS_UNIT","00002","Business Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BUARDS_NONVW_BUSINESS_UNIT","00002","Business Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","CUST_SRCH_VW_CUST_ID",cdwDirect(1),"Customer ID")
	setValue_WebEdit getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Value"),cdwDirect(2),bSetSecure, getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Description") 
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	if Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PSXLATITEM_XLATSHORTNAME").Exist(30) Then
		Call WriteToReport(micPass, "Detail 1 Tab", "Detail 1 Tab loaded Successfully", False)
	else
		Call WriteToReport(micFail, "Detail 1 Tab", "Failed to load Detail 1 Tab", True)
	End If

	verifyValue getObjectInfoFromXML("status_Webelemet", objectsFile, "Value"),"Closed","innertext","Status"
End Function

'**************************************************************************************************************
''' <summary> 
''' ediTransFrmCDWGovtAccount Function is to verify the AR06_01 To test system functionality to retrieve lockbox file received from the bank and load the data in PeopleSoft tables.
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function lockbox()
	Dim bSetSecure, intRc, prgname, k
	Dim fsoObject, fso, fld, objFSO, myFolder
	Dim path, file, recentDate, recentFile, filepath
	Dim getVal,rows, rowNumber, sColumn
    Dim oDesc, oTable, runStatus, distributionStatus, startTrans, endTrans, totalTime, processName
    Dim strFlag, sp1, splhash, attact1, attact2
	Dim rec, searchTblObj, procInstance
	Dim uiamount, uiamount1, uiamount2, objFile, strLine, MyPos

    bSetSecure = False
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
  	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
    If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Daemon Control Page", "Successfully Navigated to Daemon Control Page", False)
	Else
		Call WriteToReport(micFail, "Daemon Control Page", "Failed to load Daemon Control Page", True)
	End If

	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebTable("column names:=;Active;Program Name;Start of Shift;End of Shift;Note;;").Exist(30) Then
		Call WriteToReport(micPass, "Daemon Control Section", "Daemon Control Section loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Daemon Control Section", "Failed to load Daemon Control Section", True)
		Exit Function
	End If

	If isObjExistNOReport(getObjectInfoFromXML("ViewAll_Link5", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link5", objectsFile, "Description")) = True Then
		click_Link getObjectInfoFromXML("ViewAll_Link5", objectsFile, "Value"), getObjectInfoFromXML("ViewAll_Link5", objectsFile, "Description")
	End If

 	Wait 5
	intRc = Browser("creationtime:=0").Page("index:=1").WebTable("column names:=;Active;Program Name;Start of Shift;End of Shift;Note;;").RowCount
	For k = 0 To intRc-2
		prgname = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=CDW_DMN_CONTROL_AE_APPLID\$" & k, "index:=0").GetROProperty("default value")
		'' unchecking CDW_CC_DMN checkbox
		If  Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=CDW_DMN_CONTROL_ACTIVE_FLAG\$" & k, "index:=0").getroproperty("checked") = 1 Then
			Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=CDW_DMN_CONTROL_ACTIVE_FLAG\$" & k, "index:=0").Set "off"
		End If

		If TRIM(prgname) = "CDW_LBX_DMN" Then
			Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=CDW_DMN_CONTROL_ACTIVE_FLAG\$"&k,"index:=0").Set "ON"
			Call WriteToReport(micPass, "Checkbox for CDW_LBX_DMN", "Verified Checkbox for CDW_LBX_DMN is Checked ", False)
			' Exit for
		End If
	Next

	btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
	Wait 5
	btn_click getObjectInfoFromXML("Returntosearch_Button", objectsFile, "Value"), getObjectInfoFromXML("Returntosearch_Button", objectsFile, "Description")

	'----------------------------------------------------------------------------------
	'Create Folder or if exists
	Set fsoObject = CreateObject("Scripting.FileSystemObject")
	If (fsoObject.FolderExists("C:\lockboxdestfolder") = False) Then
		Set myFolder = fsoObject.CreateFolder("C:\lockboxdestfolder")
	End If

	Set fso = CreateObject("Scripting.FileSystemObject")
	Set fld = fso.GetFolder("C:\lockboxdestfolder")
	If fld.Files.Count + fld.SubFolders.Count = 0 Then

		'Copy files from specific folder
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		objFSO.CopyFile "\\rmsearch\psfn\FNPROD\Lockbox\processed\*.gpg" , "C:\lockboxdestfolder"
	Else

		'Delete all files and sub folders in specific folder
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		objFSO.DeleteFile("C:\lockboxdestfolder\*.gpg")
	
		'Copy files from specific folder
		Set objFSO = CreateObject("Scripting.FileSystemObject")
		objFSO.CopyFile "\\rmsearch\psfn\FNPROD\Lockbox\processed\*.gpg" , "C:\lockboxdestfolder"
	End If

	Set fld = Nothing
	Set fso = Nothing
	filepath = "C:\lockboxdestfolder\"
	Set fso = CreateObject("Scripting.FileSystemObject")
	Set recentFile = Nothing
	For Each file in fso.GetFolder(filepath).Files
		If (recentFile is Nothing) Then
			Set recentFile = file
		ElseIf (file.DateLastModified > recentFile.DateLastModified) Then
			Set recentFile = file
		End If
	Next

	rec = recentFile
	Call WriteToReport(micPass, "File "&recentFile&"", "Verified Recent File "&recentFile&" Copied From '\\rmsearch\psfn\FNPROD\Lockbox\processed\' to '\\rmsearch\psfn\FNREG\Lockbox\' Successfully", False)

	'Copy files from C:\lockboxdestfolder folder and paste in
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	objFSO.CopyFile "" & rec, "\\rmsearch\psfn\FNREG\Lockbox\"

	'-------------------------------------------------------------------------------------
  	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	setValue_WebEdit getObjectInfoFromXML("cdwbatchuserid_WebEdit", objectsFile, "Value"),"CDWVP1",bSetSecure, getObjectInfoFromXML("cdwbatchuserid_WebEdit", objectsFile, "Description") 
	Wait 3
	Set objbutton = Eval(getObjectInfoFromXML("Refresh_ProcessMonitor_btn", objectsFile, "Value"))
	objbutton.highlight
	objbutton.Click
	Wait 5

	'-------------------------------------------------------------
	strFlag="True"
	Do
		If Browser("creationtime:=0").Page("index:=1").Link("html id:=JOBDETAIL_BTN\$0","innertext:=CDWLBX","index:=0").Exist AND Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PMN_PRCSLIST_RUNSTATUSDESCR\$0","innertext:=Processing","index:=0").Exist Then
		    strFlag = "False"
		Else
		  	Dim objbutton
			Set objbutton = eval(getObjectInfoFromXML("Refresh_ProcessMonitor_btn", objectsFile, "Value"))
			objbutton.highlight
			objbutton.Click
			strFlag = "True"
		End If
	Loop Until strFlag = "False"

	Wait 30
	splhash = Split(rec,"\")
	sp1 = Split(splhash(2),".")
	attact1 = sp1(0)&".txt"
	attact2 = "\\rmsearch\psfn\FNREG\Lockbox\"&attact1
	
	'Copy text file from \\rmsearch\psfn\FNREG\Lockbox\ folder and paste in C:\AutoSource_Prod\PSFinUFT\Data\
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	objFSO.CopyFile ""&attact2 , "C:\AutoSource_Prod\PSFinUFT\Data\"
	Call WriteToReport(micPass, "Decrypted text file", "Decrypted text file "&attact1&" is generated in '\\rmsearch\psfn\FNREG\Lockbox\' folder and copied to C:\AutoSource_Prod\PSFinUFT\Data\ folder", False)

	'getStatus()
	'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	Do While Trim(runStatus) <> "Success" And Trim(distributionStatus) <> "Posted"
   		Set objbutton = Eval(getObjectInfoFromXML("Refresh_ProcessMonitor_btn", objectsFile, "Value"))
   		objbutton.highlight
   		objbutton.Click
		Set objbutton = Nothing
		Wait 2
   		Set oDesc = Description.Create
		oDesc("micclass").Value = "WebTable" 
		oDesc("class").Value = "PSLEVEL1GRID"
	  	If StrComp (GlobalDictionary("Environment"),"FNQA") = 0 AND GlobalDictionary("CDW_BATCH") = "YES" Then
			Set oTable = Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").WebTable(oDesc)
			runStatus = oTable.GetCellData(2,9)
			distributionStatus = oTable.GetCellData(2,10)
			Wait 10
	    Else
			Set oTable = Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").WebTable(oDesc)
			rowNumber = oTable.GetRowWithCellText(Trim("CDWVP1"),2,1)
			If rowNumber = false Then
				Call WriteToReport (micFail,"Process instance ","Process instance is not displayed ", True)
			Else
				sColumn = GetColumn(oTable, "Run Status")
				runStatus = oTable.GetCellData(rowNumber,sColumn)
				sColumn = GetColumn(oTable, "Distribution Status")
				distributionStatus = oTable.GetCellData(rowNumber,sColumn)			
			End If
	  	End If

		If Trim(runStatus) = "No Success" or Trim(distributionStatus) = "Warning" Then
			Call WriteToReport (micFail, "Test Case Fails", "", True)
			Exit Do
		End If

		If Trim(runStatus) = "Success" AND Trim(distributionStatus) = "Posted" Then
			Exit Do
		End If

		Set oDesc = Nothing
		Set oTable = Nothing
   Loop
       	
   	If Trim(runStatus) = "Success" or Trim(runStatus) = "Posted" Then
  		Call WriteToReport (micPass,"Process Ran into Success and is Posted","", True)
	Else
		Call WriteToReport (micFail,"Process did not Ran into Success and is not Posted in 5 minutes","", True)
   	End If

	''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	procInstance = Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY","html id:=PMN_PRCSLIST_PRCSINSTANCE\$0").GetROProperty("innertext")
	If Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSEDITBOX_DISPONLY", "html id:=PMN_PRCSLIST_PRCSINSTANCE\$0").Exist(30) Then
		Call WriteToReport(micPass, "Process Instatnce", "Captured Process Instance is " & procInstance & "", False)
	Else
		Call WriteToReport(micFail, "Process Instatnce", "Failed to capture Process Instance", True)
		Exit Function
	End If

	'------------------------------------------------------------------
	Wait 3
	SelectMainMenu1(GlobalDictionary("MainMenuSelection2"))
	If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Review Deopsit Information Page", "Successfully Navigated to Review Deopsit Information Page", False)
	Else
		Call WriteToReport(micFail, "Review Deopsit Information Page", "Failed to load Review Deopsit Information Page", True)
		Exit Function
	End If

	WebList_select getObjectInfoFromXML("procinst_WebList", objectsFile, "Value"),">=", getObjectInfoFromXML("procinst_WebList", objectsFile, "Description")
	'setValue_WebEdit getObjectInfoFromXML("processist_WebEdit", objectsFile, "Value"),procInstance,bSetSecure, getObjectInfoFromXML("processist_WebEdit", objectsFile, "Description")  
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	Wait 4
	Set searchTblObj = Browser("creationtime:=0").page("index:=1").WebTable("hmlt id:=PTSRCHRESULTS","name:=Process Instance")
	If searchTblObj.RowCount() > 1 Then
		searchTblObj.ChildItem(2,1,"Link",0).click
	Else
		Call WriteToReport(micFail, "Search Results table", "no results in table", True)
	End If

	'btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Lockbox Run Information","index:=1").Exist(30) Then
		Call WriteToReport(micPass, "Lockbox Run Information Page", "Lockbox Run Information Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Lockbox Run Information Page", "Failed to load Lockbox Run Information Page", True)
		Exit Function
	End If

	uiamount = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=LOCKBOX_RUN_LOG_CONTROL_PAY_AMT\$0").GetROProperty("innertext")
	uiamount1 = split(uiamount,".")
	uiamount2 = uiamount1(0)&uiamount1(1)
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFile = objFSO.OpenTextFile("C:\AutoSource_Prod\PSFinUFT\Data\"&attact1, 1)
    strLine = objFile.ReadLine
	If InStr(1,strLine,uiamount2)<> 0 Then
		MyPos = InStr(1,strLine,uiamount2)
		Call WriteToReport(micPass, "Amount Matches with the decrypted file", "Amount " & uiamount & " matches with column " & strLine & " in the decrypted file having the amount in Position: " & MyPos & "", False)
	Else
		Call WriteToReport(micFail, "Amount doesnot Match with the decrypted file", "Amount " & uiamount & " does not match with column " & strLine & " in the decrypted file", False) 
	End If

	objFile.Close

	'Delete last processed text files and sub folders in specific folder
	Set objFSO = CreateObject("Scripting.FileSystemObject") 
	objFSO.DeleteFile("C:\AutoSource_Prod\PSFinUFT\Data\"&attact1) 
	objFSO.DeleteFolder("C:\lockboxdestfolder")
End Function

'**************************************************************************************************************
''' <summary> 
''' writeoffRemBalAS400 Function is to verify the AR15_09 Partially Pay Item - Writeoff Remaining Balance to the AS400.
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function writeoffRemBalAS400()
	'Err.Clear
	'On Error Resume Next
	Dim bSetSecure, cdwDirect, strCaptDeposit, depositid
	Dim rowNumberForNewItem, processInstance2

    bSetSecure = False
    WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", "" & GlobalDictionary("TestObjective"), False
  	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
    If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Regular Deposit Page", "Successfully Navigated to Regular Deposit Page", False)
	Else
		Call WriteToReport(micFail, "Regular Deposit Page", "Failed to load Regular Deposit Page", True)
	End If

	cdwDirect = dbFetchEDITransCDWDirectAccount(GlobalDictionary("BusinessUnit"))
	If IsArrayEmpty(cdwDirect) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ",True)
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True  
		
		'Click Add
		Browser("creationtime:=0").Page("index:=1").Link("innertext:=Add a New Value").Click
		
		'btn_click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"), getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Description")
		'Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
		'Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARED_CLSVW_BUSINESS_UNIT", cdwDirect(0),"Deposit Unit")
		Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARED_NONVW_BUSINESS_UNIT", cdwDirect(0),"Deposit Unit")
		Browser("title:=Regular Deposit").Page("title:=Regular Deposit").PSFrame("name:=TargetContent").WebButton("html id:=#ICSearch", "name:=Add").Click
	End If

	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=DEPOSIT_CONTROL_CONTROL_CNT","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Totals Tab", "Totals Tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Totals Tab", "Failed to load Totals Tab", True)
	End If


    setValue_WebEdit getObjectInfoFromXML("AccountingDate_WebEdit", objectsFile, "Value"),Date,bSetSecure, getObjectInfoFromXML("AccountingDate_WebEdit", objectsFile, "Description")      
	Call click_Lookup_Img_And_Select_Item("Look up Bank Code.*","BANK_AR_BD_VW_BANK_CD","00001","Bank Code")    
    Call click_Lookup_Img_And_Select_Item("Look up Bank Account.*","BANK_AR_D_VW_BANK_ACCT_KEY","0101","Bank Account")   
    Call click_Lookup_Img_And_Select_Item("Look up Deposit Type.*","DEPOST_TYPE_TBL_DEPOSIT_TYPE","L","Deposit Type")   
    setValue_WebEdit getObjectInfoFromXML("ControlTotalAmount_WebEdit", objectsFile, "Value"),cdwDirect(3)-200,bSetSecure, getObjectInfoFromXML("ControlTotalAmount_WebEdit", objectsFile, "Description")     
    setValue_WebEdit getObjectInfoFromXML("Count_WebEdit", objectsFile, "Value"),"1",bSetSecure, getObjectInfoFromXML("Count_WebEdit", objectsFile, "Description")   
    Setting.WebPackage("ReplayType") = 2 '2-Runs mouse operations using the mouse
	btn_click getObjectInfoFromXML("Payments_WebElement", objectsFile, "Value"), getObjectInfoFromXML("Payments_WebElement", objectsFile, "Description")
	Setting.WebPackage("ReplayType") = 1  '1-Runs mouse operations using browser events
	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_PAYMENT_ID\$0","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Payments Tab", "Payments Tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Payments Tab", "Failed to load Payments Tab", True)
	End If

    setValue_WebEdit getObjectInfoFromXML("paymentid_WebEdit", objectsFile, "Value"),getRandomNumber(7),bSetSecure, getObjectInfoFromXML("paymentid_WebEdit", objectsFile, "Description")
   	setValue_WebEdit getObjectInfoFromXML("Amount_WebEdit", objectsFile, "Value"),cdwDirect(3)-200,bSetSecure, getObjectInfoFromXML("Amount_WebEdit", objectsFile, "Description")
    Call click_Lookup_Img_And_Select_Item("Look up Currency.*","AR_PAY_CUR_VW_PAYMENT_CURRENCY",GlobalDictionary("Currency"),"Currency")
    Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_NONVW_CUST_ID",cdwDirect(1),"Customer ID")

    'Call click_Lookup_Img_And_Select_Item("Look up Qual Code.*","AR_FLD_REF_VW_REF_QUALIFIER_CODE","I","Qual Code")
    'Call click_Lookup_Img_And_Select_Item("Look up Reference.*","ITEM_ITM2_CLSVW_ITEM",cdwDirect(2),"Reference")
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	Wait 5
	strCaptDeposit = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").GetROProperty("innertext")
 	Call WriteToReport(micPass, "Captured Deposit Id", "Captured Deposit ID is "&strCaptDeposit&"", False)
	PSFinLogout()
	login("LISAPAP")
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))	
    If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "Find an Existing Payment Tab", "Find an Existing Payment Tab is selected successfully", False)
	Else
		Call WriteToReport(micFail, "Find an Existing Payment Tab", "Failed to select Find an Existing Payment Tab", True)
	End If

	Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_NONVW_DEPOSIT_BU",GlobalDictionary("BusinessUnit"),"Deposit Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Deposit ID.*","DEPOSIT_NP_VW_DEPOSIT_ID",strCaptDeposit,"Deposit ID")
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
		Call WriteToReport(micPass, "Payment Worksheet Selection Page", "Payment Worksheet Selection Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Payment Worksheet Selection Page", "Failed to load Payment Worksheet Selection Page", True)
	End If 

	btn_click getObjectInfoFromXML("PaymentBuild_Button", objectsFile, "Value"), getObjectInfoFromXML("PaymentBuild_Button", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").Exist(30) Then
		Call WriteToReport(micPass, "Payment Worksheet Application Page", "Payment Worksheet Application Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Payment Worksheet Application Page", "Failed to load Payment Worksheet Application Page", True)
	End If

	webList_select getObjectInfoFromXML("Patanitem_WebList", objectsFile, "Value"),"Pay An Item", getObjectInfoFromXML("Patanitem_WebList", objectsFile, "Description")
	Verify_ClickCheckBox getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Description")

	''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	If verifyItemIDVal(cdwDirect(2)) Then
		Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM",cdwDirect(2),"Item ID")
		Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")
	Else
		If isEmptyItemIDlineExist Then
			rowNumberForNewItem = getRowNumberForNewItem
			Browser("creationtime:=0").page("index:=1").Image("name:=ITEM\$prompt\$img\$"&rowNumberForNewItem).click
			wait 5
			Browser("creationtime:=0").page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set ""&cdwDirect(2)
			wait 3
			Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICSearch").Click
			wait 5
			Browser("creationtime:=0").page("index:=1").Link("innertext:="&cdwDirect(2)).click
	    Else
		    element_Click getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Value"), getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Description")      
		    btn_click getObjectInfoFromXML("okwin_Button", objectsFile, "Value"), getObjectInfoFromXML("okwin_Button", objectsFile, "Description") 
		    rowNumberForNewItem = getRowNumberForNewItem   '
		    Browser("creationtime:=0").Sync
		    Browser("creationtime:=0").page("index:=1").Image("name:=ITEM\$prompt\$img\$"&rowNumberForNewItem).click
		    wait 5
			Browser("creationtime:=0").page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set ""&cdwDirect(2)
			wait 3
			Browser("creationtime:=0").page("index:=1").WebButton("html id:=#ICSearch").Click
			wait 5
			Browser("creationtime:=0").page("index:=1").Link("innertext:="&cdwDirect(2)).click
			wait 3
		End If
		'Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")
	End If

	''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	'Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM",cdwDirect(2),"Item ID")
	'Call click_Lookup_Img_And_Select_Item("Look up Type.*","AUTO_ENT_PY_VW_ENTRY_TYPE","PY","Type")
	unSelectItemID(cdwDirect(2))
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
	Wait 5
	element_Click getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Value"), getObjectInfoFromXML("PLUSBUTTON_WebElement", objectsFile, "Description")
	btn_click getObjectInfoFromXML("okwin_Button", objectsFile, "Value"), getObjectInfoFromXML("okwin_Button", objectsFile, "Description")

	'Verify_ClickCheckBox getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Description")
	'setValue_WebEdit getObjectInfoFromXML("refid_WebEdit", objectsFile, "Value"),cdwDirect(2),bSetSecure, getObjectInfoFromXML("refid_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("payamt_WebEdit", objectsFile, "Value"),"200",bSetSecure, getObjectInfoFromXML("payamt_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("wautype_WebEdit", objectsFile, "Value"),"WAU",bSetSecure, getObjectInfoFromXML("wautype_WebEdit", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("REASON_WebEdit", objectsFile, "Value"),"INTCO",bSetSecure, getObjectInfoFromXML("REASON_WebEdit", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description")
	Wait 5
	depositid = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID").GetROProperty("innertext")
	login("GWENCHO")
	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))
	Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_NONVW_DEPOSIT_BU",GlobalDictionary("BusinessUnit"),"Deposit Unit")
	setValue_WebEdit getObjectInfoFromXML("depositid_WebEdit", objectsFile, "Value"),depositid,bSetSecure, getObjectInfoFromXML("depositid_WebEdit", objectsFile, "Description") 
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	click_Link getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Value"), getObjectInfoFromXML("WorksheetAction_Link", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=REALTIME_WRK_RTM_RUN").Exist(50) Then
		Call WriteToReport(micPass, "Worksheet Action Page", "Worksheet Action Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Worksheet Action Page", "Failed to load Worksheet Action Page", True)
	End If

	''' weblist is disabled
	WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"),"Batch Standard", getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
	Wait 10
	btn_click getObjectInfoFromXML("Save_Btn4", objectsFile, "Value"), getObjectInfoFromXML("Save_Btn4", objectsFile, "Description")
	SelectMainMenu1(GlobalDictionary("MainMenuSelection2"))
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist(60) Then
		Call WriteToReport(micPass, "Request Receivables Update Page", "Successfully Navigated to Request Receivables Update Page", False)
	Else
		Call WriteToReport(micFail, "Request Receivables Update Page", "Failed to load Request Receivables Update Page", True)
	End If

	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 3
	click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebList("html id:=POSTING_REQUEST_PROCESS_FREQUENCY\$0","index:=0").Exist(30) Then
		Call WriteToReport(micPass, "Receivable Update Request Page", "Receivable Update Request Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Receivable Update Request Page", "Failed to load Receivable Update Request Page", True)
	End If

	Call click_Lookup_Img_And_Select_Item("Look up Group Unit.*","SP_BUARGR_NONVW_GROUP_BU",GlobalDictionary("BusinessUnit"),"Group Unit")
	WebList_select getObjectInfoFromXML("Process_Frequency", objectsFile, "Value"),"Always", getObjectInfoFromXML("Process_Frequency", objectsFile, "Description")
	setValue_WebEdit getObjectInfoFromXML("AccountingDate_From", objectsFile, "Value"),DATE,bSetSecure,"Accounting Date From"
	setValue_WebEdit getObjectInfoFromXML("AccountingDate_To", objectsFile, "Value"),DATE,bSetSecure,"Accounting Date To"
	btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
	Wait 10
	If IsObjectExist (getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_Process", objectsFile, "Description")) = True Then
		check_CheckBox getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Value"), getObjectInfoFromXML("ARUPDATE_CheckBox", objectsFile, "Description") 
	End If

	btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
	Wait 10
	processInstance2 = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
	btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
		Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
	End If

	getStatusupdateProcessTime "ARUPDATE",split(processInstance2,":")(1)
	SelectMainMenu1(GlobalDictionary("MainMenuSelection3"))
	If Browser("creationtime:=0").Page("index:=1").Frame("html id:=ptifrmtgtframe").WebButton("html id:=#ICSearch").Exist(30) Then
		Call WriteToReport(micPass, "View/Update Item Details Page", "View/Update Item Details Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "View/Update Item Details Page", "Failed to load View/Update Item Details Page", True)
	End If

	Call click_Lookup_Img_And_Select_Item("Look up Business Unit.*","SP_BUARDS_NONVW_BUSINESS_UNIT",GlobalDictionary("BusinessUnit"),"Business Unit")
	Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","CUST_SRCH_VW_CUST_ID",cdwDirect(1),"Customer ID")
	setValue_WebEdit getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Value"),cdwDirect(2),bSetSecure, getObjectInfoFromXML("ItemId_WebEdit", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Search_Button3", objectsFile, "Value"), getObjectInfoFromXML("Search_Button3", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PSXLATITEM_XLATSHORTNAME").Exist(30) Then
		Call WriteToReport(micPass, "Detail 1 Tab", "Detail 1 Tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Detail 1 Tab", "Failed to load Detail 1 Tab", True)
	End If

	verifyValue getObjectInfoFromXML("status_Webelemet", objectsFile, "Value"),"Closed","innertext","Status"
End Function

'**************************************************************************************************************
''' <summary> 
''' ftpFileAttachmetdelecdeletioprocessfilehandling Function is to verify the AR24_01 Test that the CDWARSTM job 
'''will create the new AR statement and also find statement attachments older than 3 months and delete them. 
'''Once the process runs the expectation is that older statements will be deleted. The  icons 
'''will be removed for the statements created during these months, but the statement number, 
'''statement date and statement amount will not be removed from the workbench. A new statement will also be created. 
''' </summary>
''' <author>Vikram Reddy Enukonda</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function ftpFileAttachmetdelecdeletioprocessfilehandling()
  	'Err.Clear
	'On Error Resume Next  
	Dim bSetSecure, ftpfile, stsnumb, stsdate, processInstance3

    bSetSecure = False
    WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", ""&GlobalDictionary("TestObjective"), false
  	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
    If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist Then
		Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
	End If

	ftpfile = dbFTPFileAttach()	   
	If IsArrayEmpty(ftpfile) Then
		GlobalDictionary("dataAvailable") = False
		Call WriteToReport(micDone, "WARNING :Business unit or Customer", "DB query returned zero records ", True)
		Exit Function
	Else
		GlobalDictionary("dataAvailable") = True
		Call click_Lookup_Img_And_Select_Item("Look up SetID.*", "SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"), "SetID")
		Call click_Lookup_Img_And_Select_Item("Look up Unit.*", "SP_BU_CS2_CLSVW_BUSINESS_UNIT", ftpfile(0), "BusinessUnit")
		Call click_Lookup_Img_And_Select_Item("Look up Customer.*", "AR_CUST_ALL_VW_CUST_ID", ftpfile(1), "Customer")
		btn_click getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")
	End If

	'If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innerhtml:=Correspondence","index:=1").Exist(30) Then
	'	Call WriteToReport(micPass, "Correspondence Tab", "Correspondence Tab loaded Successfully", False)
	'Else
	'	Call WriteToReport(micFail, "Correspondence Tab", "Failed to load Correspondence Tab", True)
	'End If

	btn_click getObjectInfoFromXML("cwcorrp_WebElement", objectsFile, "Value"), getObjectInfoFromXML("cwcorrp_WebElement", objectsFile, "Description")
	btn_click getObjectInfoFromXML("cwsrc_button", objectsFile, "Value"), getObjectInfoFromXML("cwsrc_button", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=AR_STATEMNT_VW_ST_ID_NUM\$0").Exist(30) Then
		stsnumb = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=AR_STATEMNT_VW_ST_ID_NUM\$0").GetROProperty("innertext")
		Call WriteToReport(micPass, "Last Statement Number", "Captured Last Statement Number is "&stsnumb&"", False)
	End If

	SelectMainMenu1(GlobalDictionary("MainMenuSelection1"))	
	If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Exist Then
		Call WriteToReport(micPass, "Create Customer Statements Page", "Successfully Navigated to Create Customer Statements Page", False)
	Else
		Call WriteToReport(micFail, "Create Customer Statements Page", "Failed to load Create Customer Statements Page", True)
	End If

	btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"), getObjectInfoFromXML("Search_Button", objectsFile, "Description")
	Wait 3
	click_Link getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=RUN_CNTL_AR_AS_OF_DATE").Exist(30) Then
		Call WriteToReport(micPass, "Statements Parameters Tab", "Statements Parameters Tab loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Statements Parameters Tab", "Failed to load Statements Parameters Tab", True)
	End If

	setValue_WebEdit getObjectInfoFromXML("asofdate_webedit", objectsFile, "Value"),Date,bSetSecure, getObjectInfoFromXML("asofdate_webedit", objectsFile, "Description") 
	Call click_Lookup_Img_And_Select_Item("Look up Unit.*","SP_BUARDS_CLSVW_BUSINESS_UNIT", ftpfile(0),"Unit")
	Call click_Lookup_Img_And_Select_Item("Look up SetID.*","SP_SETID_CLSVW_SETID","SHARE","SetID")
	setValue_WebEdit getObjectInfoFromXML("runcust_webedit", objectsFile, "Value"),"%",bSetSecure, getObjectInfoFromXML("runcust_webedit", objectsFile, "Description") 
	setValue_WebEdit getObjectInfoFromXML("CorCust_webedit", objectsFile, "Value"),"%",bSetSecure, getObjectInfoFromXML("CorCust_webedit", objectsFile, "Description")
	WebList_select getObjectInfoFromXML("statgrp_weblist", objectsFile, "Value"),"All Statement Groups", getObjectInfoFromXML("statgrp_weblist", objectsFile, "Description")
	Verify_ClickCheckBox getObjectInfoFromXML("runverfySel_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("runverfySel_Checkbox", objectsFile, "Description")
	btn_click getObjectInfoFromXML("Run_Button", objectsFile, "Value"), getObjectInfoFromXML("Run_Button", objectsFile, "Description")
	Wait 10
	If IsObjectExist (getObjectInfoFromXML("cdwarstm_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("cdwarstm_Checkbox", objectsFile, "Description")) = True Then
		Verify_ClickCheckBox getObjectInfoFromXML("cdwarstm_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("cdwarstm_Checkbox", objectsFile, "Description") 
	End If

	btn_click getObjectInfoFromXML("Ok_Button1", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button1", objectsFile, "Description")
	Wait 10
	processInstance3 = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
	btn_click getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_Link1", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Refresh","html id:=REFRESH_BTN").Exist(30) Then
		Call WriteToReport(micPass, "Process Monitor Page", "Process Monitor Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Process Monitor Page", "Failed to load Process Monitor Page", True)
	End If

	getStatusupdateProcessTime "CDWARSTM",split(processInstance3,":")(1)
	SelectMainMenu1(GlobalDictionary("MainMenuSelection"))
	If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innertext:=Conversations","index:=1").Exist Then
		Call WriteToReport(micPass, "Collections Workbench Page", "Collections Workbench Page loaded Successfully", False)
	Else
		Call WriteToReport(micFail, "Collections Workbench Page", "Failed to load Collections Workbench Page", True)
	End If

	Call click_Lookup_Img_And_Select_Item("Look up SetID.*","SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"),"SetID")
	Call click_Lookup_Img_And_Select_Item("Look up Unit.*","SP_BU_CS2_CLSVW_BUSINESS_UNIT", ftpfile(0),"BusinessUnit")
	Call click_Lookup_Img_And_Select_Item("Look up Customer.*","AR_CUST_ALL_VW_CUST_ID", ftpfile(1),"Customer")
	btn_click getObjectInfoFromXML("Search_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_Btn", objectsFile, "Description")

	'If Browser("creationtime:=0").Page("index:=1").Frame("title:=Collections Workbench").WebElement("innerhtml:=Correspondence","index:=1").Exist(30) Then
	'	Call WriteToReport(micPass, "Correspondence Tab", "Correspondence Tab loaded Successfully", False)
	'Else
	'	Call WriteToReport(micFail, "Correspondence Tab", "Failed to load Correspondence Tab", True)
	'End If

	btn_click getObjectInfoFromXML("cwcorrp_WebElement", objectsFile, "Value"), getObjectInfoFromXML("cwcorrp_WebElement", objectsFile, "Description")
	btn_click getObjectInfoFromXML("cwsrc_button", objectsFile, "Value"), getObjectInfoFromXML("cwsrc_button", objectsFile, "Description")
	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=AR_STATEMNT_VW_ST_ID_NUM\$0").Exist(30) Then
		stsdate = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=AR_STATEMNT_VW_ST_DT\$0").GetROProperty("innertext")
		Call WriteToReport(micPass, "Last Statement Number", "Verified Last Statement Number is "&stsnumb&" and date is "&stsdate&" which having the Image and Email Icon is created", False)
	End If

	If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=AR_STATEMNT_VW\$0#5").Exist(30) Then
		Call WriteToReport(micPass, "Older statements that are older than current month mius 4 Months", "Verified that Older statements that are older than current month mius 4 Months are no longer shown", False)
	End If
End Function

'**************************************************************************************************************
''' <summary> 
''' Test ability to Select and Open AR Item to be paid
''' </summary>
''' <author>SWETHA RAVOORI</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'03/20/2018			Eric Trout	   Added For Loop to recheck item for closed status due to process timing.  Also cleaned up tabbing of function
'**************************************************************************************************************
Public Function AbilitytoselectandOpenARItem()
	Dim ctdhju,ctdhjuadd,ctdhjuaddlf,custid,depositunit,depositunitadd,dpttifj,dpttifjadd,endtime,i,invd1,invoiceid,isExpectedItemIDExist,itemid,itemIDDefaultVal
	Dim itemRow,itm,itmadd,lastitem,lastitemid,pendg,pendgamt,recordCount,recordCount1,rNum,selkamt,selkamtadd,starttime,statsss,statsssidf,subj,successtime,tcObjective
	Dim bFound
	
	bFound = FALSE
	
	WriteToReport micPass, "####### " & GlobalDictionary("TestName") & " ###########", " " & GlobalDictionary("TestObjective") & "  ", False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then

		''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Add a New Value","index:=0").Exist(60) Then
		    WriteToReport micPass, "Create Worksheet Page loaded successfully", "Create Worksheet Page loaded successfully", False
	    Else
	        WriteToReport micFail, "Create Worksheet Page not loaded", "Create Worksheet Page Loading failed, so failing the test case", True
	        Exit Function
	    End If

		Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span><abbr class=""PTUNDERLINE"">A</abbr>dd a New Value</span>").Click
	    element_Click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"),("Add a New Value Tab Clilcked")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Add a New Value","index:=0").Exist(30) Then
            WriteToReport micPass, "Add a New Value Tabbed Page loaded successfully", "Add a New Value Tabbed Page loaded successfully", False
        Else
	        WriteToReport micFail, "Add a New Value Tabbed Page not loaded", "Add a New Value Tabbed Page Loading failed, so failing the test case", True
	        Exit Function
        End If

	    recordCount = ccoverbalcc((GlobalDictionary("BusinessUnit")))
	    recordCount1 = dbGetIDInfo(GlobalDictionary("BusinessUnit"))
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ", True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
		End If

		custid=trim(recordCount(1))
		itemid = trim(recordCount(2))
		Call click_Lookup_Img_And_Select_Item("Look up Deposit Unit.*","SP_BUARDE_CLSVW_DEPOSIT_BU", GlobalDictionary("BusinessUnit"),"Deposit Unit")
		Call click_Lookup_Img_And_Select_Item("Look up Bill To Customer.*","CUST_BI_VW_CUST_ID", custid,"Bill To Customer")
		'Browser("title:=Standard Billing").page("title:=Standard Billing").PSFrame("name:=Target Content").WebButton("html id:=#ICSearch").Click
'		While Not Browser("title:=Create Worksheet").page("title:=Create Worksheet").WebButton("html id:=#ICSearch").Exist(10)
'			Wait 1
'		Wend
		Browser("title:=Create Worksheet").page("title:=Create Worksheet").PSFrame("name:=TargetContent").WebButton("html id:=#ICSearch").Click
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=PAYMENT_WRK_WS_BUILD").Exist(30) Then
	        Call WriteToReport(micPass, "Create Worksheet Page", "Create Worksheet Page loaded Successfully", False)
		Else
	        Call WriteToReport(micFail, "Create Worksheet Page", "Failed to load Create Worksheet Page", True)
		End If
 
 		'Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_CLSVW_CUST_ID", custid,"Customer ID")
 		Call click_Lookup_Img_And_Select_Item("Look up Customer ID.*","SP_IDCUST_NONVW_CUST_ID", custid,"Customer ID")
   		WebList_select getObjectInfoFromXML("Reference_Criteria1", objectsFile, "Value"),"Specific Value", getObjectInfoFromXML("Reference_Criteria1", objectsFile, "Description")
	 	Call click_Lookup_Img_And_Select_Item("Look up Qual Code.*","AR_FLD_REF_VW_REF_QUALIFIER_CODE","I","Qual Code")
	  	Call click_Lookup_Img_And_Select_Item("Look up Reference.*","ITEM_ITM2_CLSVW_ITEM", itemid,"ITEM")
 		btn_click getObjectInfoFromXML("Build1_Button", objectsFile, "Value"), getObjectInfoFromXML("Build1_Button", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Exist(30) Then
            Call WriteToReport(micPass, "Update Worksheet Page", "Update Worksheet Page loaded Successfully", False)
		Else
            Call WriteToReport(micFail, "Update Worksheet Application Page", "Failed to load Update Worksheet Page", True)
		End If
 
		Set lastitem = Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&itemid)
		'lastitemid =lastitem.getROProperty("value")
		If lastitem.Exist(30) Then
				'No need to lookup or check if item id already exists
			'Call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM", itemid,"Item ID")
			'check_CheckBox getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Value"), getObjectInfoFromXML("Sel_Checkbox", objectsFile, "Description")
		ElseIf isEmptyItemIDlineExist Then
			itemRow = getRowNumberForNewItem()
			Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set trim(itemid)
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
			If Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).exist(5) Then
				Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).click
			Else
				Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&itemid&" is not selected",True)     
			End If

			' Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$"&itemRow).Set RfndCC(2) PAYMENT_ITEM_ITEM$prompt$img$1 ITEM_ITEM2_VW_ITEM
			If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
				Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&itemid&" is selected", False)
			Else
				Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
			End If
 		Else
			btn_click getObjectInfoFromXML("pluseitem_id", objectsFile, "Value"), getObjectInfoFromXML("pluseitem_id", objectsFile, "Description")
			'btn_click getObjectInfoFromXML("winok_id", objectsFile, "Value"), getObjectInfoFromXML("winok_id", objectsFile, "Description")
			Browser("creationtime:=0").Dialog("Regexpwndtitle:= cdw.com needs some information").WinButton("regexpwndtitle:=OK").Click

			''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
			'itemIDDefaultVal = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$0").GetROProperty("default value")
			If NOT (verifyItemIDVal(itemid)) Then
				itemRow = getRowNumberForNewItem()
				If IsNumeric(itemRow) Then
					Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
					Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set trim(itemid)
					Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
					If Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).exist(5) Then
						Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).click
					Else
						Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&itemid&" is not selected",True)     
					End If

					'Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$"&itemRow).Set RfndCC(2) PAYMENT_ITEM_ITEM$prompt$img$1 ITEM_ITEM2_VW_ITEM
					If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
						Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&itemid&" is selected", False)
					Else
						Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
					End If
				Else
					Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_ITEM\$newm\$0\$\$0").Click 
					Wait 3
					Browser("creationtime:=0").Dialog("text:=cdw.com needs some information").WinButton("regexpwndtitle:=OK").Click
					Wait 3
					itemRow = getRowNumberForNewItem()
					'call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM", RfndCC(2),"Item ID in Detail 1 Tab")
					Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
					Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set trim(itemid)
					Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
					If Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).exist(5) Then
						Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).click
					Else
						Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&RfndCC(2)&" is not selected",True)     
					End If

					'  Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$"&itemRow).Set RfndCC(2) PAYMENT_ITEM_ITEM$prompt$img$1 ITEM_ITEM2_VW_ITEM
					If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
						Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&itemid&" is selected", False)
					Else
						Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
					End If	 
				End If
			Else
				If  Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&trim(itemid)).exist Then
					rNum = Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&trim(itemid)).getroproperty("html id")
					If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).GetROProperty("checked") = 1 Then
						Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&itemid&" is selected", False)
					Else
						Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).Click 
					End If
		       	Else
					itemRow = getRowNumberForNewItem()
					'call click_Lookup_Img_And_Select_Item("Look up Item ID.*","ITEM_ITEM2_VW_ITEM", RfndCC(2),"Item ID in Detail 1 Tab")
					Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
					Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set trim(itemid)
					Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
					If Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).exist(5) Then
						Browser("creationtime:=0").Page("index:=1").Link("name:="&trim(itemid)).click
					Else
						Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&itemid&" is not selected",True)     
					End If
		
			        If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
			        	Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&itemid&" is selected", False)
			        Else
			            Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
			        End If        
				End If
		 	End If

		''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	 
		'setValue_WebEdit getObjectInfoFromXML("lastitem_id", objectsFile, "Value"),itemid,false, getObjectInfoFromXML("lastitem_id", objectsFile, "Description")
		End If

 		'''''''''''''''''''''''''''to make sure only expected item id is selected
		unSelectItemID(itemid)
		btn_click  getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
		click_Link getObjectInfoFromXML("CreditCardDetails_Link", objectsFile, "Value"), getObjectInfoFromXML("CreditCardDetails_Link", objectsFile, "Description")
		
		If Browser("name:=Update Worksheet").Page("title:=Update Worksheet").Link("html id:=AR_CRC_LBL_WRK_EXPAND_SECTIONS").exist(10) Then
			Browser("name:=Update Worksheet").Page("title:=Update Worksheet").Link("html id:=AR_CRC_LBL_WRK_EXPAND_SECTIONS").Click
		End If
		
		Browser("name:=Update Worksheet").Sync
		WebList_select getObjectInfoFromXML("CCType_WebList", objectsFile, "Value"),GlobalDictionary("cctyp"), getObjectInfoFromXML("CCType_WebList", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Value"),GlobalDictionary("ccnum"),false, getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Value"),GlobalDictionary("expmnt"),false, getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Value"),GlobalDictionary("expyr"),false, getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Value"),GlobalDictionary("ccfstname"),false, getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Value"),GlobalDictionary("cclstname"),false, getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Value"),GlobalDictionary("emailadd"),false, getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Value"),GlobalDictionary("phnum"),false, getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Description")  
		wait(2)
		WebList_select getObjectInfoFromXML("CCAction_WebList", objectsFile, "Value"),"Authorize and Settle Later", getObjectInfoFromXML("CCAction_WebList", objectsFile, "Description")
		btn_click getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Value"), getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Description")
		Wait 5
		click_Link getObjectInfoFromXML("RtnUpdateWrksht_Link", objectsFile, "Value"), getObjectInfoFromXML("RtnUpdateWrksht_Link", objectsFile, "Description")
	End If

	If arcreditcardprocessing() Then
		If NOT getCDWCCStatus() Then
			WriteToReport micFail, "CDWCC process", "Failing testcase as CDWCC did not run into success or warning with posted", True
			Exit Function
		End If
	Else
		WriteToReport micFail, " processes", "Failing testcase as CO or Auth did not run into success or warning with posted", true
		Exit Function
	End If

	'arcreditcardprocessing()
	'wait 600 '' needs to be uncommented
	'WriteToReport micDone,"Waiting for 11 Minutes for The credit card daemon to kick off and the credit card inboud process to run","The credit card daemon kicks off and the credit card inboud process to runs",false
	''''*&*&%^%^%*^%"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
	login(GlobalDictionary("SignInUser"))
	SelectMainMenu1(GlobalDictionary("MainMenuSelection6")) 
	If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Update Credit Card Worksheet", "index:=1").Exist(30) Then
   
		''''''''''''''''''''Find an Existing Value Page''''''''''''''''''''''' Update Worksheet   Main Menu Update Credit Card Worksheet
		Wait 5
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Bill To Customer","index:=1").Exist(30) Then
			WriteToReport micPass, "Update Worksheet Page loaded successfully", "Update Worksheet Page loaded successfully", False
		Else
			Browser("name:=Update Worksheet").ClearCache
			Browser("name:=Update Worksheet").DeleteCookies 
			If SelectMainMenu1(GlobalDictionary("MainMenuSelection6")) = True Then
				If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Bill To Customer","index:=1").Exist(30) Then
					WriteToReport micPass, "Update Worksheet Page loaded successfully", "Update Worksheet Page loaded successfully", false
				Else
					WriteToReport micFail, "Update Worksheet Page not loaded", "Update Worksheet Page Loading failed, so failing the test case", true
					Exit Function
				End If
			Else
				WriteToReport micFail, "Update Worksheet Page not loaded", "Update Worksheet Page Loading failed, so failing the test case", true
				Exit Function
			End If
		 End If

        '''''''''''''setting business unit'    
		'setValue_WebEdit getObjectInfoFromXML("setid_delete", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("setid_delete", objectsFile, "Description")
		Browser("title:=Update Worksheet").Page("title:=Update Worksheet").WebEdit("html id:=PAYMENT_SEL_VW_DEPOSIT_BU").Set GlobalDictionary("BusinessUnit")
     	Wait 3

	    '''''''''''''setting invoice'''''
    	'setValue_WebEdit getObjectInfoFromXML("bilcutsid_nameprocess", objectsFile, "Value"),custid,false, getObjectInfoFromXML("bilcutsid_nameprocess", objectsFile, "Description")
    	Browser("creationtime:=0").page("index:=1").WebEdit("html id:=PAYMENT_SEL_VW_DEPOSIT_ID").Set recordCount1(1)' as per Rini 05/05
		btn_click getObjectInfoFromXML("Search_Button", objectsFile, "Value"),("Search Button Clicked")
		Wait 2
		If Browser("creationtime:=0").Page("index:=1").WebButton("name:=Search").Exist(60) Then
			Browser("creationtime:=0").Page("index:=1").WebButton("name:=Search").Click
		End If

		If Browser("creationtime:=0").Page("index:=1").Link("innertext:=" & GlobalDictionary("BusinessUnit"), "index:=0").exist(60) Then
			Browser("creationtime:=0").Page("index:=1").Link("innertext:=" & GlobalDictionary("BusinessUnit"), "index:=0").click
			WriteToReport micPass, "selecting first result", "clicked on first result from results", False
		End If

		'If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Detail 1</span>").Exist(30) Then 
		'If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=H1", "innertext:=Create Credit Card Worksheet").Exist(30) Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PAYMENT_WRK_PAGETITLE", "innertext:=Credit Card Worksheet Application: Reapply").Exist(30) Then
			WriteToReport micPass, "Credit Card Worksheet Application Page loaded successfully", "Credit Card Worksheet Application Page loaded successfully", false
		Else
			WriteToReport micFail, "Credit Card Worksheet ApplicationPage not loaded", "Credit Card Worksheet Application Page Loading failed, so failing the test case", true
			Exit Function
		End If

		Wait 3
		click_Link getObjectInfoFromXML("worksheet_action_delete_ccc", objectsFile, "Value"),("Worksheet Action Link Clicked")
		Wait 2
		If Browser("creationtime:=0").Page("index:=1").WebElement("html id:=REALTIME_WRK_RTM_PROCESS_LIST").Exist(30) Then
			WriteToReport micPass, "Posting Action is grayed out ", "Payment Action checked successfully", false
		Else
			WriteToReport micFail, "Posting Action is not grayed out ", "Payment Action checked successfully", true
			Wait 2    
			btn_click getObjectInfoFromXML("Ok_Button", objectsFile, "Value"),("OK Button Clicked")
			btn_click getObjectInfoFromXML("okbtnerr_lin", objectsFile, "Value"),("OK Button Clicked to a Warning Message")
		End If
	End If

			starttime=Timer
		'Waits up to 15 minutes
		For i = 1 to 40
	''''''''''''''''''''''''&*%^%^%^%^*(^*(*('''''''''''''
			If SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True then

				''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
				If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>","index:=0").Exist(40) Then
					WriteToReport micPass, "View Update Item Details Page loaded successfully", "View Update Item DetailsPage loaded successfully", false
				Else
					WriteToReport micFail, "View Update Item Details Page not loaded", "View Update Item Details Page loading failed, so failing the test case", true
					Exit Function 
				End If
		 
				setValue_WebEdit getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Value"),custid,false, getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Description")
				setValue_WebEdit getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Value"),itemid,false, getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Description")
				Wait 2 
				btn_click getObjectInfoFromXML("Search_button", objectsFile, "Value"),("Search Button Clicked")
				If Browser("creationtime:=0").Page("index:=1").Link("html id:=pthnavbccrefanc_EP_ITEM_MAINTAIN_GBL1").Exist(40) Then
					WriteToReport micPass, "Detail 1 Tabbed Subsection loaded successfully", "Detail 1 Tabbed Subsection loaded successfully", false
				Else
					WriteToReport micFail, "Detail 1 Tabbed Subsection not loaded", "Detail 1 Tabbed Subsection loading failed, so failing the test case", true
					Exit Function 
				End If
		

				Set statsss = eval(getObjectInfoFromXML("Attac_staus_item_1206", objectsFile, "Value"))
				statsssidf =statsss.getROProperty("innertext")
				If statsssidf = "Closed" Then
					bFound = TRUE
					Exit For
				Else
					Wait 30
				End If
				
			End If			
				
		Next
		
		endtime=Timer
		successtime = endtime - starttime
		
		If bFound = TRUE Then
			WriteToReport micPass, "Status of Item selected in Detail 1 Tabbed Subsection is "&statsssidf&"  as expected", "Status of Item Value is Validated successfully", false
		Else
			WriteToReport micFail, "Status of Item selected in Detail 1 Tabbed Subsection is "&statsssidf&"  not as expected", "Status of Item Value is Validation Failed", false
		End If
		
		Reporter.ReportEvent micInfo, "Elapsed Time to Close", "Timerval: " & successtime

	
End Function

'**************************************************************************************************************
''' <summary> 
'''Pay Outstanding Item via CC - Collections Workbench
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'03/19/2018			Eric Trout	Added For Loop to recheck item for closed status due to process timing.  Also cleaned up tabbing of function
'03/19/2018			Eric Trout	Added code to find column number, due to column names changing order, also updated pulling of Processid as it was no longer working
'**************************************************************************************************************
Public Function PayOutstandingCCCollectWorkben()
   Dim custid, distbstts, distbsttsid, endtime, i, itemid, processname, processnameid, recordCount, rowNumber, runstts, runsttsid, scolnum, starttime, statsss, statsssidf, successtime, tcObjective
   Dim tableobj, otablecol, bFound
   
   bFound = FALSE

	WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", False
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then

   		'''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
        If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=AR_CWB_WRK_SEARCH_PB").Exist(40) Then
            WriteToReport micPass, "Collections Workbench Page loaded successfully", "Collections Workbench Page loaded successfully", false
        Else
            WriteToReport micFail, "Collections Workbench Page not loaded", "Collections Workbench Page loading failed, so failing the test case", true
            Exit Function
        End If

		recordCount = cccollectionsing((GlobalDictionary("BusinessUnit")))
		If IsArrayEmpty(recordCount) Then
			GlobalDictionary("dataAvailable") = false
			Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			custid = Trim(recordCount(1))
			itemid = Trim(recordCount(2))
			call click_Lookup_Img_And_Select_Item("Look up SetID.*","SP_SETID_CLSVW_SETID", GlobalDictionary("SetID"),"SetID")
			call click_Lookup_Img_And_Select_Item("Look up Unit.*","SP_BU_CS2_CLSVW_BUSINESS_UNIT",GlobalDictionary("BusinessUnit"),"BusinessUnit")
			call click_Lookup_Img_And_Select_Item("Look up Customer.*","AR_CUST_ALL_VW_CUST_ID",custid,"Customer ID")	    
		End If

		btn_click getObjectInfoFromXML("Search_Btn", objectsFile, "Value"),("Search Buttion Clicked")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innerhtml:=Items","index:=0").Exist(30) Then
			WriteToReport micPass, "Items tabbed sub-section loaded successfully", "Items tabbed sub-section loaded successfully", false
		Else
			WriteToReport micFail, "Items tabbed sub-section not loaded", "Items tabbed sub-section loading failed, so failing the test case", true
			Exit Function
		End If
 
		WebList_select getObjectInfoFromXML("CWItemStatus_WebList", objectsFile, "Value"),"Open", getObjectInfoFromXML("CWItemStatus_WebList", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Go_Button", objectsFile, "Value"), getObjectInfoFromXML("Go_Button", objectsFile, "Description")
	    'Set otablecol = Browser("creationtime:=0").Page("index:=1").WebTable("outertext:=Select.*","rows:=1","cols:=3","html tag:=TABLE")
	    Set otablecol = Browser("creationtime:=0").Page("index:=1").Webtable("html id:=l0ITEM_DSP_VW\$0") 'l1ITEM_DSP_VW\$0")

  		'Add Get Column Number, with name of column		
		scolnum = GetColumn(otablecol, "Item")
		'Set tableobj = Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0", "html tag:=TABLE")
		'rowNumber = getRownumberfromWebTable (tableobj,itemid,scolnum) ' updated so code will find proper column
		rowNumber = getRownumberfromWebTable (otablecol,itemid,scolnum) ' updated so code will find proper column
		If rowNumber < 0 OR rowNumber = "False" Then
		     Call WriteToReport (micFail, "Checkbox next to item ID " & itemid & " for Customer ID " & custid & " not found", "Checkbox next to item ID " & itemid & " not selected Successfully", True)
		     ExitTest
		End If

		'Checks Item Checkbox
		'tableobj.ChildItem(rowNumber,1,"Webcheckbox",0).Set "ON"
		otablecol.ChildItem(rowNumber,1,"Webcheckbox",0).Set "ON"
		Call WriteToReport (micPass,"Checkbox next to item ID "&itemid&" for Customer ID "&custid&" is selected Successfully","Checkbox next to item ID "&itemid&" is selected Successfully", False)
		WebList_select getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Value"),"Pay by Credit Card", getObjectInfoFromXML("CWItemAction_WebList", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Go1_Button", objectsFile, "Value"), getObjectInfoFromXML("Go1_Button", objectsFile, "Description")
		Wait 10
		webList_select getObjectInfoFromXML("CCType_WebList", objectsFile, "Value"),GlobalDictionary("cctyp"),(""&GlobalDictionary("cctyp")&" is selected from Credit Card Type Drop Down")
		setValue_WebEdit getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Value"),GlobalDictionary("ccnum"),false, getObjectInfoFromXML("CCNumber_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Value"),GlobalDictionary("expmnt"),false, getObjectInfoFromXML("ExpMon_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Value"),GlobalDictionary("expyr"),false, getObjectInfoFromXML("ExpYear_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Value"),GlobalDictionary("ccfstname"),false, getObjectInfoFromXML("CCFirstName_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Value"),GlobalDictionary("cclstname"),false, getObjectInfoFromXML("CCLastName_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Value"),GlobalDictionary("emailadd"),false, getObjectInfoFromXML("EmailId_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Value"),GlobalDictionary("phnum"),false, getObjectInfoFromXML("PhNum_WebEdit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Value"), getObjectInfoFromXML("ExpandAll_Link", objectsFile, "Description")
		WebList_select getObjectInfoFromXML("CCAction_WebList", objectsFile, "Value"),"Authorize and Settle Later", getObjectInfoFromXML("CCAction_WebList", objectsFile, "Description")
		btn_click getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Value"), getObjectInfoFromXML("CCDetailsSave_Button", objectsFile, "Description")
		Wait 5
		If arcreditcardprocessing() Then
			If Not getCDWCCStatus() Then
				WriteToReport micFail, "CDWCC process", "Failing testcase as CDWCC did not run into success or warning with posted", True
				Exit Function
			End If
		Else
			WriteToReport micFail, " processes", "Failing testcase as CO or Auth did not run into success or warning with posted", True
			Exit Function
		End If

		setValue_WebEdit getObjectInfoFromXML("cdwbatchus", objectsFile, "Value"), "CDWVP1", False, getObjectInfoFromXML("cdwbatchus", objectsFile, "Description")
		btn_click getObjectInfoFromXML("cdwrefsr_cdw", objectsFile, "Value"), ("Refresh Button Clicked")
		Wait 10
		Set runstts = eval(getObjectInfoFromXML("runstatus_nameprocess", objectsFile, "Value"))
		runsttsid = runstts.getROProperty("innertext")
		Set distbstts = eval(getObjectInfoFromXML("distribtnsts_nameprocess", objectsFile, "Value"))
		distbsttsid =distbstts.getROProperty("innertext")

		'Set processname = eval(getObjectInfoFromXML("prname_nameprocess", objectsFile, "Value"))
		Set processname = Browser("creationtime:=0").page("index:=1").WebElement("html id:=JOBDETAIL_BTN\$span\$0")
		processnameid = processname.getROProperty("innertext")

		'as per rini, status can be either warning or success . when we run cc process testcases in parallel we cannot assure that we are capturing correct one. so keeping micDone instead of failing testcase
		If (runsttsid = "Warning" or runsttsid = "Success")  and distbsttsid = "Posted"    Then
			WriteToReport micPass, "The process "&processnameid&" kicked off in the backgroung with Run status "&runsttsid&" and Distribution Status "&distbsttsid&" ", " The process "&processnameid&" kicked off successfully  ", True
		Else
			WriteToReport micDone, "The process "&processnameid&" kicked off in the backgroung with Run status as "&runsttsid&" and Distribution Status as "&distbsttsid&"", " The process "&processnameid&" did not kick off successfully  ", True
		End If

		''''''''''''''''''''''''''&*%^%^%^%^*(^*(*('''''''''''''
		login(GlobalDictionary("SignInUser"))
		starttime=Timer
		For i = 1 to 20
			If SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True Then

				''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
			    If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
					WriteToReport micPass, "View Update Item Details Page loaded successfully", "View Update Item DetailsPage loaded successfully", False
				Else
					WriteToReport micFail, "View Update Item Details Page not loaded", "View Update Item Details Page loading failed, so failing the test case", True
					Exit Function
				End If

				setValue_WebEdit getObjectInfoFromXML("busin111_cc4_WebEdit111", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("busin111_cc4_WebEdit111", objectsFile, "Description")
				setValue_WebEdit getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Value"),custid,false, getObjectInfoFromXML("custid111_cc4_WebEdit111", objectsFile, "Description")
				setValue_WebEdit getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Value"),itemid,false, getObjectInfoFromXML("itemid111_cc4_WebEdit111", objectsFile, "Description")
				Wait 2
				btn_click getObjectInfoFromXML("Search_button", objectsFile, "Value"),("Search Button Clicked")
				Wait 3
				If Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Detail 1</span>").Exist(30) Then
					WriteToReport micPass, "Detail 1 Tabbed Subsection loaded successfully", "Detail 1 Tabbed Subsection loaded successfully", False
				Else
					WriteToReport micFail, "Detail 1 Tabbed Subsection not loaded", "Detail 1 Tabbed Subsection loading failed, so failing the test case", True
					Exit Function 
				End If

				Set statsss = eval(getObjectInfoFromXML("Attac_staus_item_1206", objectsFile, "Value"))
				statsssidf =statsss.getROProperty("innertext")
				If statsssidf = "Closed" Then
					bFound = TRUE
					Exit For
				End If	
           End If
		Next

		If bFound = TRUE Then
			WriteToReport micPass, "Status of Item selected in Detail 1 Tabbed Subsection is "&statsssidf&"  as expected", "Status of Item Value is Validated successfully", false
		Else
			WriteToReport micFail, "Status of Item selected in Detail 1 Tabbed Subsection is "&statsssidf&"  not as expected", "Status of Item Value is Validation Failed", false
		End If
		endtime=Timer
		successtime = endtime - starttime
		Reporter.ReportEvent micInfo, "Elapsed Time to Close", "Timerval: " & successtime
	End If
End Function

'**************************************************************************************************************
''' <summary> 
'''Review Credit Card history - Last 4 CC numbers used
''' </summary>
''' <author>Swetha Ravoori</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'4/6/2018			Eric Trout		Added check if on Transactions tab, if not navigates to proper tab
'**************************************************************************************************************
Public Function ReviewCC4CCnum()

   Dim tcObjective,recordCount,itemid,custid,tableobj,rowNumber,acct,shipTo,shipToLoc,dept,idnt, hdrobj, sSelectcol , sItemcol

   WriteToReport micPass, "####### "&GlobalDictionary("TestName")&" ###########", " "&GlobalDictionary("TestObjective")&"  ", false 

   If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then

   '''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
             wait 3
        if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
            WriteToReport micPass, "Standard Billing Page loaded successfully", "Standard Billing Page loaded successfully", false
        Else
	        WriteToReport micFail, "Standard Billing Page not loaded", "Standard Billing Page loading failed, so failing the test case", true
	        Exit Function
        End If


         Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span><abbr class=""PTUNDERLINE"">A</abbr>dd a New Value</span>").Click
	     element_Click getObjectInfoFromXML("AddNewValue_WebElement", objectsFile, "Value"),("Add a New Value Tab Clilcked")
	
	
		if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Add a New Value","index:=0").Exist(30) Then
            WriteToReport micPass, "Add a New Value Tabbed Page loaded successfully", "Add a New Value Tabbed Page loaded successfully", false
		Else
			WriteToReport micFail, "Add a New Value Tabbed Page not loaded", "Add a New Value Tabbed Page Loading failed, so failing the test case", true
			Exit Function  
		End If  
           recordCount = cccardreviwlast((GlobalDictionary("BusinessUnit")))
         If IsArrayEmpty(recordCount) Then
                   GlobalDictionary("dataAvailable") = false
                   Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
                   Exit function
           else
                   GlobalDictionary("dataAvailable") = True
                      custid = trim(recordCount(1))
                      itemid = trim(recordCount(2))
			          acct=trim(recordCount(7))
			          dept=trim(recordCount(8))
			          shipTo=trim(recordCount(5))
			          shipToLoc=trim(recordCount(6))
			          idnt=trim(recordCount(4))
          End if 
				   wait 3
		setValue_WebEdit getObjectInfoFromXML("Unit_addnewvalue_webedit",objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_addnewvalue_webedit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Billtype_addnewvalue_webedit",objectsFile, "Value"),GlobalDictionary("BillType"),false, getObjectInfoFromXML("Billtype_addnewvalue_webedit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("BillSource_addnewvalue_webedit",objectsFile, "Value"),GlobalDictionary("BillSource"),false, getObjectInfoFromXML("BillSource_addnewvalue_webedit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Customer_addnewvalue_webedit",objectsFile, "Value"),custID,false, getObjectInfoFromXML("Customer_addnewvalue_webedit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("InvoiceDate_addnewvalue_webedit",objectsFile, "Value"),DATE,false, getObjectInfoFromXML("InvoiceDate_addnewvalue_webedit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("AcctngDate_addnewvalue_webedit",objectsFile, "Value"),DATE,false, getObjectInfoFromXML("AcctngDate_addnewvalue_webedit",objectsFile, "Description")
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
		wait 3
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
				 WriteToReport micPass, "Header Info 1 Page loaded successfully", "Header Info 1 Page loaded successfully", false
		 Else
				WriteToReport micFail, "Header Info 1 Page not loaded", "Header Info 1 Page Loading failed, so failing the test case", true
				Exit Function
		End If
		WebList_select getObjectInfoFromXML("Paymethod_CC_weblist",objectsFile, "Value"),"Credit Card", ("Credit Card option was successfully selected from the Payment Method WebList ")
		btn_click getObjectInfoFromXML("CreditCardInfo_IMG",objectsFile, "Value"), getObjectInfoFromXML("CreditCardInfo_IMG",objectsFile, "Description")
		wait 3
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
			WriteToReport micPass, "Header - Credit Card Page loaded successfully", "Header - Credit Card Page loaded successfully", false
		 Else
			WriteToReport micFail, "Header - Credit Card Page not loaded", "Header - Credit Card Page Loading failed, so failing the test case", true
			Exit Function	
		End If
		wait 3
        webList_select getObjectInfoFromXML("CCTYPE_Weblist",objectsFile, "Value"),GlobalDictionary("cctyp"),(""&GlobalDictionary("cctyp")&" is selected from Credit Card Type Drop Down")

        setValue_WebEdit getObjectInfoFromXML("CCNUM_WebEdit", objectsFile, "Value"),GlobalDictionary("ccnum"),false, getObjectInfoFromXML("CCNUM_WebEdit", objectsFile, "Description")

        setValue_WebEdit getObjectInfoFromXML("EXPMNTH_WebEdit", objectsFile, "Value"),GlobalDictionary("expmnt"),false, getObjectInfoFromXML("EXPMNTH_WebEdit", objectsFile, "Description")

        setValue_WebEdit getObjectInfoFromXML("EXPYEAR_WebEdit", objectsFile, "Value"),GlobalDictionary("expyr"),false, getObjectInfoFromXML("EXPYEAR_WebEdit", objectsFile, "Description")

         setValue_WebEdit getObjectInfoFromXML("CCFIRSTNAME_WebEdit", objectsFile, "Value"),GlobalDictionary("ccfstname"),false, getObjectInfoFromXML("CCFIRSTNAME_WebEdit", objectsFile, "Description")

        setValue_WebEdit getObjectInfoFromXML("CCLASTNAME_WebEdit", objectsFile, "Value"),GlobalDictionary("cclstname"),false, getObjectInfoFromXML("CCLASTNAME_WebEdit", objectsFile, "Description")

        setValue_WebEdit getObjectInfoFromXML("CCEMAIL_WebEdit", objectsFile, "Value"),GlobalDictionary("emailadd"),false, getObjectInfoFromXML("CCEMAIL_WebEdit", objectsFile, "Description")

        setValue_WebEdit getObjectInfoFromXML("CCPhone_WebEdit", objectsFile, "Value"),GlobalDictionary("phnum"),false, getObjectInfoFromXML("CCPhone_WebEdit", objectsFile, "Description")

		btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn", objectsFile, "Description")
		wait 5
		btn_click  getObjectInfoFromXML("Headerinfo1_WebElement", objectsFile, "Value"), getObjectInfoFromXML("Headerinfo1_WebElement", objectsFile, "Description")

		If Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSTABLINKSSELECTED","innertext:=Header - Info 1","html tag:=A").Exist(30) Then
			WriteToReport micPass, "Header Info 1 Page loaded successfully", "Header Info 1 Page loaded successfully", false
		Else
			WriteToReport micFail, "Header Info 1 Page not loaded", "Header Info 1 Page Loading failed, so failing the test case", true
			Exit Function
		End If
		WebList_select getObjectInfoFromXML("NavigationHeaderinfo_WebList",objectsFile, "Value"),"Line - Misc Info",("Line - Misc Info option was successfully selected from the Navigation dropdown WebList ")
		If Browser("creationtime:=0").Page("index:=1").WebElement("class:=PSTABLINKSSELECTED","innertext:=Line - Misc Info","html tag:=A").Exist(30) Then
			Call WriteToReport (micPass,"Line Misc Info  Page","Line Misc Info Page is Loaded Successfully", False)
		Else
			Call WriteToReport (micFail, "Line Misc Info Page", "Line Misc Info Page is not Loaded Successfully", True)
		End If
		setValue_WebEdit getObjectInfoFromXML("StartDate_Lineinfo_WebEdit",objectsFile, "Value"),DATE,false, getObjectInfoFromXML("StartDate_Lineinfo_WebEdit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("EndDate_Lineinfo_WebEdit",objectsFile, "Value"),DATE,false, getObjectInfoFromXML("EndDate_Lineinfo_WebEdit",objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Description")

		btn_click  getObjectInfoFromXML("Tax_Lineinfo_Link", objectsFile, "Value"), getObjectInfoFromXML("Tax_Lineinfo_Link", objectsFile, "Description")

        If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
		   WriteToReport micPass, "Line Tax Info Page loaded successfully", "Line Tax Info Page loaded successfully", false
        Else
           WriteToReport micFail, "Line Tax Info Page not loaded", "Line Tax Info Page Loading failed, so failing the test case", true
           Exit Function
        End If
		wait 3 
		setValue_WebEdit getObjectInfoFromXML("ShipTO_Webedit",objectsFile, "Value"),shipTo,false, getObjectInfoFromXML("ShipTO_Webedit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("ShipTOLoc_Webedit",objectsFile, "Value"),shipToLoc,false, getObjectInfoFromXML("ShipTOLoc_Webedit",objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Description")

		btn_click  getObjectInfoFromXML("Lineinfo1tab_WebEdit",objectsFile, "Value"), getObjectInfoFromXML("Lineinfo1tab_WebEdit",objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
			WriteToReport micPass, "Line Info 1 Page loaded successfully", "Line Info 1 Page loaded successfully", false
		Else
			WriteToReport micFail, "Line Info 1 Page not loaded", "Line Info 1 Page Loading failed, so failing the test case", true
			Exit Function
		End If

		setValue_WebEdit getObjectInfoFromXML("Table_WebEdit",objectsFile, "Value"),GlobalDictionary("Table"),false, getObjectInfoFromXML("Table_WebEdit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Identifier_WebEdit",objectsFile, "Value"),idnt,false, getObjectInfoFromXML("Identifier_WebEdit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Quantity_WebEdit",objectsFile, "Value"),GlobalDictionary("Quantity"),false, getObjectInfoFromXML("Quantity_WebEdit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Unitprice_WebEdit",objectsFile, "Value"),GlobalDictionary("UnitPrice"),false, getObjectInfoFromXML("Unitprice_WebEdit",objectsFile, "Description")

		wait 3
		WebList_select getObjectInfoFromXML("NavigationHeaderinfo_WebList",objectsFile, "Value"),"Acctg - Rev Distribution", ("Acctg - Rev Distribution option was successfully selected from the Navigation dropdown WebList")
		wait 3
		setValue_WebEdit getObjectInfoFromXML("Account_Acctrev_Webedit",objectsFile, "Value"),acct,false, getObjectInfoFromXML("Account_Acctrev_Webedit",objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Dept_Acctrev_Webedit",objectsFile, "Value"),dept,false, getObjectInfoFromXML("Dept_Acctrev_Webedit",objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Description")
		wait 5
		If Browser("creationtime:=0").page("index:=1").WebElement("outerhtml:=.*PTUNDERLINE.*","index:=0").Exist(30) Then
			Browser("creationtime:=0").page("index:=1").WebElement("outerhtml:=.*PTUNDERLINE.*","index:=0").Click
		 else
			 WriteToReport micFail, "Header Info 1 tab ", "Header Info 1 tab not clicked , so failing the test case", true 
		End If
		'btn_click getObjectInfoFromXML("Headerinfo1_WebElement",objectsFile, "Value"), getObjectInfoFromXML("Headerinfo1_WebElement",objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
			WriteToReport micPass, "Header Info 1 Page loaded successfully", "Header Info 1 Page loaded successfully", false
		Else
			WriteToReport micFail, "Header Info 1 Page not loaded", "Header Info 1 Page Loading failed, so failing the test case", true
			Exit Function
		End If
		wait 3
		setValue_WebEdit getObjectInfoFromXML("StatusHeaderinfo1_WebEdit",objectsFile, "Value"),"RDY",false, getObjectInfoFromXML("StatusHeaderinfo1_WebEdit",objectsFile, "Description")
		Dim invoice,sAI,cDWBI,runcontrol
		invoice=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=BI_HDR_INVOICE","html tag:=SPAN").getROProperty("innertext")

		WriteToReport micDone," "&invoice&" is creadted",""&invoice&" is creadted",false

		btn_click  getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Value"), getObjectInfoFromXML("Save_Selectionparameters_btn",objectsFile, "Description")
		 wait 3
		 ''''''''''''''''''''''''''&*%^%^%^%^*(^*(*('''''''''''''
		if SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True then

			''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
				  wait 3
					if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span>Find an Existing Value</span>").Exist(30) Then
						WriteToReport micPass, "Review Pending Transactions Page loaded successfully", "Review Pending Transactions Page loaded successfully", false
					Else
						 WriteToReport micFail, "Review Pending Transactions Page not loaded", "Review Pending Transactions Page loading failed, so failing the test case", true
						 Exit Function 
					End If
			 
			 setValue_WebEdit getObjectInfoFromXML("bilbusiness_ss",objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("bilbusiness_ss",objectsFile, "Description")
			 
			 btn_click  getObjectInfoFromXML("Search_button",objectsFile, "Value"),("Search button Clicked")
			 
				
				   ' if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Pending CC Trans</span>").Exist(30) Then
			 if Browser("creationtime:=0").Page("index:=1").WebElement("outertext:=Pending Credit Card Transactions").Exist(30) Then
				 WriteToReport micPass, "'Pending Credit Card Transactions' label found", "Pending Credit Card Transactions Tabbed Page under Review Pending Transactions Main Page loaded successfully", false
			 Else
				 WriteToReport micFail, "'Pending Credit Card Transactions' label not found", "Pending Credit Card Transactions Tabbed Page under Review Pending Transactions Main Page loading failed, so failing the test case", true
				 Exit Function 
			 End If


			'Add Click for Transactions tab als find a way to verify it is on that tab
			 if NOT Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Edit").Exist(5) Then
				Browser("creationtime:=0").Page("index:=1").WebTabStrip("html tag:=TR").Select "Transactions"
			 End If

			If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=EDIT_PB\$0").exist(10) Then
				btn_click  getObjectInfoFromXML("edit_btn_cdw",objectsFile, "Value"),("Edit Button Clicked")
			Else
				WriteToReport micFail, "'Edit not found in Pending Transaction", "There are no Editable Pending Credit Card Transactions, failing the test case", true
				Exit Function
			End If
	 
			 if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Credit Card Address</span>").Exist(30) Then
				  WriteToReport micPass, "Credit Card Address Tab - Done", "Credit Card Address Tabbed Page under Review Pending Transactions Main Page loaded successfully", false
			 Else
				  WriteToReport micFail, "Credit Card Address Tab - Not Found", "Credit Card Address Tabbed page under Review Pending Transactions Main Page loading failed, so failing the test case", true
				  Exit Function 
			 End If
	 
			click_Link  getObjectInfoFromXML("cchistory_linkcc",objectsFile, "Value"),("Credit Card History Link Clicked")
			 
			If isObjectExist(getObjectInfoFromXML("bhist_blankk",objectsFile, "Value"), getObjectInfoFromXML("bhist_blankk",objectsFile, "Description")) = True Then
				WriteToReport micPass, "Credit Card History Page loaded successfully", "Credit Card History Page loaded successfully", false
			Else
				WriteToReport micFail, "Credit Card History Page not loaded", "Credit Card History Page loading failed, so failing the test case", true
				Exit Function
			End If
			  
			btn_click  getObjectInfoFromXML("Cancel_Button",objectsFile, "Value"),("Return Button Clicked") 
		  
		End if
''''''''''''''''''''''''''&*%^%^%^%^*(^*(*('''''''''''''
		if SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True then

				''''''''''''''''''''Find an Existing Value Page'''''''''''''''''''''''
				wait 3
						if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Balances</span>").Exist(30) Then
							WriteToReport micPass, "Account Overview Page loaded successfully", "Account Overview Page loaded successfully", false
						Else
							WriteToReport micFail, "Account Overview Page not loaded", "Account Overview Page loading failed, so failing the test case", true
							Exit Function 
						End If

				 Dim  invoicdd,last4d,custid1,itemid1  
				recordCount = cccnewlistiwlast((GlobalDictionary("BusinessUnit")))
						 If IsArrayEmpty(recordCount) Then
								 GlobalDictionary("dataAvailable") = false
								   Call WriteToReport(micDone, "WARNING :Customer info From DB", "DB query returned zero records ",True)  
								 Exit function
						  else
								   GlobalDictionary("dataAvailable") = True

									  custid1 = trim(recordCount(1))
										 itemid1 = trim(recordCount(2))
										 invoicdd=trim(recordCount(3))
										last4d=trim(recordCount(8))
						   
						 End if

				setValue_WebEdit getObjectInfoFromXML("SetID_TXT",objectsFile, "Value"),GlobalDictionary("SetID"),false, getObjectInfoFromXML("SetID_TXT",objectsFile, "Description")
				setValue_WebEdit getObjectInfoFromXML("Unit_TXT",objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_TXT",objectsFile, "Description")
				 setValue_WebEdit getObjectInfoFromXML("Customer_TXT",objectsFile, "Value"),custid1,false, getObjectInfoFromXML("Customer_TXT",objectsFile, "Description")
				btn_click  getObjectInfoFromXML("Search_Btn_WebEdit111",objectsFile, "Value"),("Search Button Clicked") 

						if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Balances</span>").Exist(30) Then
							 WriteToReport micPass, "Balances Tabbed Page under Account Overview Main Page loaded successfully", "Balances Tabbed Page under Account Overview Main Page loaded successfully", false
						Else
							WriteToReport micFail, "Balances Tabbed Page under Account Overview Main Page not loaded", "Balances Tabbed Page under Account Overview Main Page loading failed, so failing the test case", true
							Exit Function 
						End If
        
				click_Link  getObjectInfoFromXML("linkclick_test1_checked_WebEdit111",objectsFile, "Value"),("Balance Link Clicked")

						if Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Customer Item Inquiry","index:=2").Exist(60) Then
							WriteToReport micPass, "Customer Item Inquiry floatting tabbed Page loaded successfully", "Customer Item Inquiry floatting tabbed Page loaded successfully", false
						Else
							WriteToReport micFail, "Customer Item Inquiry floatting tabbed Page not loaded", "Customer Item Inquiry floatting tabbed Page loading failed, so failing the test case", true
							Exit Function 
						End If

			   if Browser("creationtime:=0").Page("index:=1").WebElement("outerhtml:=<span id=""app_label"">Item List</span>").Exist(30) Then
					WriteToReport micPass, "Item List tabbed page under Customer Item Inquiry floatting tabbed Page loaded successfully", "Item List tabbed page under Customer Item Inquiry floatting tabbed Page loaded successfully", false
				Else
					WriteToReport micFail, "Item List tabbed page under Customer Item Inquiry floatting tabbed Page not loaded", "Item List tabbed page under Customer Item Inquiry floatting tabbed Page loading failed, so failing the test case", true
					Exit Function 
				End If

			If isObjExistNOReport(getObjectInfoFromXML("viwelall",objectsFile, "Value"), getObjectInfoFromXML("viwelall",objectsFile, "Description")) = True Then
			   btn_click  getObjectInfoFromXML("viwelall",objectsFile, "Value"), getObjectInfoFromXML("viwelall",objectsFile, "Description")
			End if

			wait 20
				set tableobj=Browser("creationtime:=0").Page("index:=1").WebTable("html id:=tdgblITEM_DSP_VW\$0","html tag:=TABLE")
				
				Set hdrobj = Browser("creationtime:=0").Page("index:=1").WebTable("rows:=1","cols:=15","html tag:=TABLE")
					sSelectcol = GetColumn(hdrobj, "Select")
					sItemcol = GetColumn(hdrobj, "Item")
					rowNumber=getRownumberfromWebTable (tableobj,itemid1,sItemcol)
					tableobj.ChildItem(rowNumber,sSelectcol,"WebCheckBox",0).Click

				Call WriteToReport (micPass,"Check box with item ID "&itemid1&" for Customer ID "&custid1&" is selected Successfully","Check box with item ID "&itemid1&" is selected Successfully", True)

				webList_select getObjectInfoFromXML("opt1_sng1_new1_WebEdit111",objectsFile, "Value"),"Pay by Credit Card",("Pay by Credit Card option selected from Weblist")
				wait 2
				btn_click  getObjectInfoFromXML("gosec_Btn_WebEdit111",objectsFile, "Value"),("Go Button Clicked")
				wait 5
					if Browser("creationtime:=0").Page("index:=1").Link("html id:=HYPERLINK_LABEL").Exist(30) Then
					   WriteToReport micPass, "Credit Card Details Page loaded successfully", "Credit Card Details Page loaded successfully", false
							Else
							WriteToReport micFail, "Credit Card Details Page not loaded", "Credit Card Details Page loading failed, so failing the test case", true         
						 Exit Function
					end if

			click_Link  getObjectInfoFromXML("cconfile",objectsFile, "Value"),("Credit Cards On File Link Clicked")

			Dim last4dw11,last4ddd
			Set last4ddd = eval(getObjectInfoFromXML("lastfourdd",objectsFile, "Value"))
			last4dw11 =last4ddd.getROProperty("innerhtml")

						If (trim(last4dw11)) = (trim(last4d)) Then
							  WriteToReport micPass, "Last four digits on Credit Card Details Page "&last4d&" matches with last four digits from the query "&last4dw11&"  ", "Last 4 Digits Value is Validated successfully", false
						  Else
							   WriteToReport micFail, "Last four digits on Credit Card Details Page "&last4d&" does not matches with last four digits from the query "&last4dw11&" ", "Last four digits Value is Validation failed", false       
						 End If
		End if
	End if
End Function

'**************************************************************************************************************
''' <summary> 
'''Generate Invoices for Large Amount of interfaced Data
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'12/20/2017			Eric Trout		Updated to pull New Invoice
'**************************************************************************************************************
Public Function generateinvoicesforlargeamountofinterfaceddata()
Call  WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)

Dim finalizeandPrint,convertCurrencyAmounts,preLoadProcess,createacctngEntries,loadInvoicestoAR,val1,Validation1,val2,validation2,invoice,srtBusinessValue,strSQL,sConnectionString,sheetName,arrRecordValues,recordCount,recordCount1,rangeselection
Dim sNewInvoice 

    if SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True then
       wait 5
        setValue_WebEdit getObjectInfoFromXML("business_unit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("business_unit", objectsFile, "Description")
       wait 3
        btn_click  getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
        
        If Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT1\$0").Exist(30) Then
            Invoice=Browser("creationtime:=0").Page("index:=1").Link("html id:=RESULT1\$0").GetROProperty("innerhtml")        
            Call WriteToReport (micPass,"Invoice Copied","[" &Invoice& "]", True)
          Else
            Call WriteToReport (micFail, "Invoice", "Results from Search not populated.", True)           
        End If
           
       If IsObjectExist(getObjectInfoFromXML("invoice_id", objectsFile, "Value"), getObjectInfoFromXML("invoice_id", objectsFile, "Description")) = True Then
            Call WriteToReport (micPass,"Invoice Copied is "&Invoice&"","", True)
          Else
            Call WriteToReport (micFail, "Invoice is not Captured", "", True)
            Exit Function
        End If

        click_Link getObjectInfoFromXML("invoice_id", objectsFile, "Value"), getObjectInfoFromXML("invoice_id", objectsFile, "Description")
        
        wait 2 
        If isObjectExist(getObjectInfoFromXML("copy_bill", objectsFile, "Value"), getObjectInfoFromXML("copy_bill", objectsFile, "Description")) = True Then
            WriteToReport micPass, "Copy Single Bill Page loaded successfully", "Copy Single Bill Page loaded successfully", false
        Else
            WriteToReport micFail, "Copy Single Bill Page not loaded", "Copy Single Bill Page loading failed, so failing the test case", true
            Exit Function
        End If
        btn_click  getObjectInfoFromXML("copy_bill", objectsFile, "Value"), getObjectInfoFromXML("copy_bill", objectsFile, "Description")
            btn_click  getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
      If Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=BI_ADJ_WRK_ADJ_INVOICE1\$7\$").Exist(15) Then
      	sNewInvoice = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=BI_ADJ_WRK_ADJ_INVOICE1\$7\$").GetRoProperty("default value")
        Call WriteToReport (micPass,"New Invoice","["&sNewInvoice&"]", True)
      Else
            WriteToReport micFail, "New Invoice", "New Invoice is not displayed, so failing the test case", true
            Exit Function      
      End If
	
     click_Link getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Value"), getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Description")
  
	'.Exist Added to account for page loading
	If Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_BILL_STATUS").Exist(15) Then
	    WriteToReport micPass, "New Invoice", "Bill Header of New Invoice is displayed.", true
	Else	
	    WriteToReport micFail, "New Invoice", "Bill Header of New Invoice is not displayed, so failing the test case", true
	    Exit Function   	
	End If

	Browser("creationtime:=1").Page("index:=1").WebEdit("html id:=BI_HDR_BILL_STATUS").Set"RDY"
	Browser("creationtime:=1").Page("index:=1").WebList("html id:=BI_HDR_PAYMENT_METHOD").Select"Check"
	
	'Needs to wait for record to refresh after selecting from Weblist before saving
	wait 5
	
	Browser("creationtime:=1").Page("index:=1").WebButton("html id:=#ICSave").Click
	
	wait 2
End IF

loginCDWBATCH()

finalizeandPrint = singleActionInvoiceBIJOB03(sNewInvoice,GlobalDictionary("RunControl"))

recordCount = dbGetVerifyRecords(sNewInvoice,(GlobalDictionary("BusinessUnit")))

   If  IsArrayEmpty(recordCount) Then

       GlobalDictionary("dataAvailable") = false
        Call WriteToReport(micFail, "DB query returned zero records", "DB query returned zero records ",True)
       Exit Function
     else
       GlobalDictionary("dataAvailable") = True
       Call WriteToReport(micPass, "DB query returned one record", "DB query returned one record ",True)     
    End If

convertCurrencyAmounts=processCDWBIJOB(sNewInvoice ,GlobalDictionary("RunControl1"))

recordCount1 = dbGetVerifyRecords1(sNewInvoice ,(GlobalDictionary("BusinessUnit")))

End Function
'**************************************************************************************************************
''' <summary> 
'''Generate Journals for Invoices Generated
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function generateJournalsforInvoicesGenerated()
	Dim finalizeandPrint, convertCurrencyAmounts, preLoadProcess, createacctngEntries, loadInvoicestoAR, generateJournals1, invoice

	Call WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Copy Single Bill","index:=1","html tag:=H1").Exist(60) Then
		     Call  WriteToReport (micPass, "Copy Single Bill Search Page loaded successfully", "Copy Single Bill Search Page loaded successfully", False)
		Else
		     Call WriteToReport (micFail, "Copy Single Bill Search Page not loaded", "Copy Single Bill Page loading failed, so failing the test case", True)
			Exit Function
		End If

        setValue_WebEdit getObjectInfoFromXML("business_unit", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("business_unit", objectsFile, "Description")
		wait 3
        btn_click getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
        click_Link getObjectInfoFromXML("invoice_id", objectsFile, "Value"), getObjectInfoFromXML("invoice_id", objectsFile, "Description")
        wait 2
        If isObjectExist(getObjectInfoFromXML("copy_bill", objectsFile, "Value"), getObjectInfoFromXML("copy_bill", objectsFile, "Description")) = True Then
            WriteToReport micPass, "Copy Single Bill Page loaded successfully", "Copy Single Bill Page loaded successfully", False
        Else
            WriteToReport micFail, "Copy Single Bill Page not loaded", "Copy Single Bill Page loading failed, so failing the test case", True
            Exit Function
        End If

        btn_click getObjectInfoFromXML("copy_bill", objectsFile, "Value"), getObjectInfoFromXML("copy_bill", objectsFile, "Description")
        btn_click getObjectInfoFromXML("Save_Button", objectsFile, "Value"), getObjectInfoFromXML("Save_Button", objectsFile, "Description") 
		Wait 5
		click_Link getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Value"), getObjectInfoFromXML("Bill_Header_Info_link", objectsFile, "Description")
		If Browser("creationtime:=1").Page("index:=1").WebElement("innertext:=Unit","html tag:=SPAN").Exist(30) Then
			Call  WriteToReport (micPass, "Header Info 1 Tabbed Page loaded successfully", "Header Info 1 Tabbed Page loaded successfully", False)
		Else
			Call WriteToReport (micFail, "Header Info 1 Tabbed Page not loaded", "Header Info 1 Tabbed Page loading failed, so failing the test case", True)
			Exit Function
		End If

		Invoice=Browser("creationtime:=1").Page("index:=1").WebElement("html id:=BI_HDR_INVOICE","html tag:=SPAN").GetROProperty("innerhtml")
		Call WriteToReport (micPass,"Invoice Captured is "&Invoice&"","", True)
		setValue_WebEdit getObjectInfoFromXML("Status_RDY", objectsFile, "Value"),"RDY",false, getObjectInfoFromXML("Status_RDY", objectsFile, "Description")  
		WebList_select getObjectInfoFromXML("Paymethod_Chk_weblist", objectsFile, "Value"),"Check", ("Check option was successfully selected from the Payment Method WebList ")
		btn_click  getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Description")
		wait 5
	End If
	
	Browser("creationtime:=1").Close
	finalizeandPrint = singleActionInvoiceBIJOB03(Invoice,GlobalDictionary("RunControl"))
	convertCurrencyAmounts=processCDWBIJOB(Invoice,GlobalDictionary("RunControl1"))
	login(GlobalDictionary("SignInUser1"))
	generateJournals1=generateJournals(Invoice,GlobalDictionary("RunControl2"))
End Function

'**************************************************************************************************************
''' <summary> 
'''Mass Correction of Invalid Billing Lines
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'23Apr2018			Eric Trout	Updated objects for Page Title, also updated Search for Invoice 
'03May2018			Eric Trout	Updated filter to also filter on custid, Updated so code would update to a new Contact Seq Num, Added Validation of Message Logs for Bill Headers created and Bill Lines Created., Verified Bill Lines Created matched Error Count, Verified Gross Extended Amount and Error Count with query, Updated Review Billing Information > Summary to check all Invoices if more than one was created
'14May2018			Eric Trout	Updated to include Validation of Billing Status is HLD, Change Status to RDY and run BIJB03 and verify Sttus is INV
'**************************************************************************************************************
Public Function massCorrectInvalidBillingLines()
	Dim masscorrect,sinterface,errorstatus,customer,getinv,runStatus,invoice,srtBusinessValue,billstatus, rowVal, aBillsCreated, aBillLinesCreated, sSum, sInvoice
	Dim i, nColumn, nrows, oNewContactSeqNum, sOldValue, sContactSeqNum, sCustID, sErrorCount, sGrossExtAmnt, oTable, sBillsCreated, sBillLinesCreated, sNewContactSeqNum
	Dim sVerifyInvoice, sErrorMessage, finalizeandPrint, nResult 
	Call WriteToReport (micPass, "####### " & GlobalDictionary("TestName") & "_" & GlobalDictionary("combinedTCSpecs") & " ###########", "" & GlobalDictionary("TestObjective") & "", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		srtBusinessValue = GlobalDictionary("BusinessUnit")
		masscorrect = dbGetmasscorrect(srtBusinessValue)
		If IsArrayEmpty(masscorrect) Then
			GlobalDictionary("dataAvailable") = False
			Call WriteToReport(micFail, "DB query returned zero records", "DB query returned zero records ", True)
			Exit Function
		Else
			GlobalDictionary("dataAvailable") = True
			Call WriteToReport(micPass, "DB query returned one record", "DB query returned one record ", True)
		End If

		sInterface = masscorrect(0)
		customer = masscorrect(4)
		If Browser("CreationTime:=0").Page("index:=1").WebEdit("html id:=BI_INTFC_ERR_VW_INTFC_ID", "html tag:=INPUT").Exist(30) Then
			Call WriteToReport (micPass, "Mass Update Tabbed Page loaded successfully", "Mass Update Tabbed Page loaded successfully", False)
		Else
			Call WriteToReport (micFail, "Mass Update Tabbed Page not loaded", "Mass Update Tabbed Page loading failed, so failing the test case", True)
						
		End If

		setValue_WebEdit getObjectInfoFromXML("Bunit_mass_webedit", objectsFile, "Value"), GlobalDictionary("BusinessUnit"), False, getObjectInfoFromXML("Bunit_mass_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("intrfcid_mass_webedit", objectsFile, "Value"), sInterface, False, getObjectInfoFromXML("intrfcid_mass_webedit", objectsFile, "Description")
		Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Billing Mass Change").WebEdit("BI_INTFC_ERR_VW_BILL_TO_CUST_I").Set customer

		btn_click getObjectInfoFromXML("Applyfilter_mass_Link", objectsFile, "Value"), getObjectInfoFromXML("Applyfilter_mass_Link", objectsFile, "Description")
		errorstatus = Browser("CreationTime:=0").Page("index:=1").WebElement("html id:=ERROR_STATUS1\$0", "html tag:=SPAN").GetROProperty("innertext")
		WebList_select getObjectInfoFromXML("errorstatus_mass_webedit", objectsFile, "Value"), "" & errorstatus & "", ("" & errorstatus & " option was successfully selected from the Error Status WebList")
		btn_click getObjectInfoFromXML("Applyfilter_mass_Link", objectsFile, "Value"), getObjectInfoFromXML("Applyfilter_mass_Link", objectsFile, "Description")
		Wait 5
		check_CheckBox getObjectInfoFromXML("errorvalue_mass_chkbox", objectsFile, "Value"), getObjectInfoFromXML("errorvalue_mass_chkbox", objectsFile, "Description")
		Wait 3

		'Get Current Sequence Number
		sOldValue = Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Billing Mass Change").WebElement("OLDVALUE").GetROProperty("innertext")
		
		'Click Search icon for Contact Sequence Search
		Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Billing Mass Change").WebButton("CNTCT_SEQ_NUM_Search").Click
		
		'Get number of rows
		nrows = Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Look Up Contact Sequence").WebTable("Contact Sequence Number").GetROProperty("rows")
		
		Set oTable = Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Look Up Contact Sequence").WebTable("Contact Sequence Number")
		
		'use function to find column number
		nColumn = GetColumn(oTable, "Contact Sequence Number")
		
		For i = 2 To nrows
			sContactSeqNum = Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Look Up Contact Sequence").WebTable("Contact Sequence Number").GetCellData(i,nColumn)
			If Trim(sContactSeqNum) <> Trim(sOldValue) Then
				Set oNewContactSeqNum = Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Look Up Contact Sequence").WebTable("Contact Sequence Number").ChildItem(i,nColumn,"Link",0)
				sNewContactSeqNum = oNewContactSeqNum.GetROProperty("innertext")
				oNewContactSeqNum.click
				Exit For
			End If
			If i=nrows Then
				Call WriteToReport (micFail, "ContactSeqNum", "Unable to find a different Contact Sequence Number.", True)			
				ExitTest	
			End If
		Next	

		'Grab Values for validation later
		'Gross Extended Amount
		sGrossExtAmnt = Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Billing Mass Change").WebElement("GROSS_EXTENDED_AMT").GetROProperty("innertext")
		
		'Error Count
		sErrorCount = Browser("PeopleSoft Browser").Page("Mass Update Interface").PSFrame("Billing Mass Change").Link("Error Count").GetROProperty("innertext")
		
		'Click update button
		btn_click getObjectInfoFromXML("updatevalues_webbutton", objectsFile, "Value"), getObjectInfoFromXML("updatevalues_webbutton", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK", "html tag:=INPUT").Exist(30) Then
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICOK", "html tag:=INPUT").Click
			Call WriteToReport (micPass, "Process Billing Interface Page loaded successfully", "Process Billing Interface Page loaded successfully", False)
			Browser("creationtime:=0").Page("index:=1").Image("alt:=Look up Customer.*", "name:=BILL_TO_CUST_ID\$prompt\$img\$0").Click
			Call WriteToReport (micPass, "Process Billing Interface Page loaded successfully", "Process Billing Interface Page loaded successfully", False)
			btn_click getObjectInfoFromXML("RunControlId_Search", objectsFile, "Value"), getObjectInfoFromXML("RunControlId_Search", objectsFile, "Description")
		End If

		Wait 3
		btn_click getObjectInfoFromXML("updatevalues_webbutton", objectsFile, "Value"), getObjectInfoFromXML("updatevalues_webbutton", objectsFile, "Description")
	End If

	If SelectMainMenu1(GlobalDictionary("MainMenuSelection1")) = True Then
		'If Browser("CreationTime:=0").Page("index:=1").WebElement("innertext:=Process Billing Interface","html tag:=H1").Exist(30) Then
		If Browser("title:=Process Billing Interface").Page("title:=Process Billing Interface").frame("html id:=ptifrmtgtframe").WebElement("innertext:=Process Billing Interface", "html tag:=H1").Exist(30) Then
			Call  WriteToReport (micPass, "Find an Existing Value Tab on Process Billing Interface Page loaded successfully", "Find an Existing Value Tab on Process Billing Interface Page loaded successfully", False)
		Else
			Call WriteToReport (micFail, "Find an Existing Value Tab on Process Billing Interface Page not loaded", "Find an Existing Value Tab on Process Billing Interface Page loading failed, so failing the test case", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Value"), GlobalDictionary("RunControl"), False, getObjectInfoFromXML("Runcontrol_Webedit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		'If Browser("CreationTime:=0").Page("index:=1").WebElement("innertext:=Process Billing Interface","html tag:=SPAN").Exist(30) Then
		If Browser("title:=Process Billing Interface").Page("title:=Process Billing Interface").frame("html id:=ptifrmtgtframe").WebElement("innertext:=Process Billing Interface", "html tag:=SPAN").Exist(30) Then
			Call WriteToReport (micPass, "Process Billing Interface Page loaded successfully", "Process Billing Interface Page loaded successfully", False)
		Else
			Call WriteToReport (micFail, "Process Billing Interface Page not loaded", "Process Billing Interface Page loading failed, so failing the test case", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("Frominterface_webedit", objectsFile, "Value"), sInterface, False, getObjectInfoFromXML("Frominterface_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("Tointerface_webedit", objectsFile, "Value"), sInterface, False, getObjectInfoFromXML("Tointerface_webedit", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Value"), getObjectInfoFromXML("Run_SingleActionInvoice_btn", objectsFile, "Description")
		If Browser("CreationTime:=0").Page("index:=1").WebElement("innerhtml:=User ID", "html tag:=SPAN").Exist(30) Then
			Call WriteToReport (micPass,"Process Scheduler Page is Loaded Successfully", "", True)
	   	Else
			Call WriteToReport (micFail, "Process scheduler Page is not Loaded Successfully", "", True)
		End If

		Wait 2
		check_CheckBox getObjectInfoFromXML("BIIF0001_webcheckbox", objectsFile, "Value"), getObjectInfoFromXML("BIIF0001_webcheckbox", objectsFile, "Description")
		btn_click getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Value"), getObjectInfoFromXML("OK_ProcessScheduler_btn", objectsFile, "Description")
		Dim processInstance
		processInstance = Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Process Instance:.*","index:=1").GetROProperty("innertext")
		btn_click getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Value"), getObjectInfoFromXML("ProcessMonitor_link", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").webbutton("name:=Refresh", "html id:=REFRESH_BTN").Exist(30) Then
			Call WriteToReport (micPass,"Process Monitor Page is Loaded Successfully", "", True)
		Else
			Call WriteToReport (micFail, "Process Monitor Page is not Loaded Successfully", "", True)
		End If

		Wait 3
		runStatus = getStatus(split(processInstance,":")(1),GlobalDictionary("SignInUser"))
		
		'Insert check here
		Browser("PeopleSoft Browser").Page("Process Monitor").PSFrame("Process Monitor").Link("Details").Click
		Browser("PeopleSoft Browser").Page("Process Monitor").PSFrame("Process Detail").Link("Message Log").Click
		
		sBillsCreated = Browser("PeopleSoft Browser").Page("Process Monitor").PSFrame("Message Log").WebElement("New Bill Headers Created").GetROProperty("innertext")
		
		aBillsCreated=Split(sBillsCreated,":")
		sBillsCreated = aBillsCreated(1)
		
		If Trim(sBillsCreated) > 0 Then
			Call WriteToReport(micPass, "Bills Created", "Message Log shows [" & sBillsCreated &"] - Bills Created", True)
		Else
			Call WriteToReport(micFail, "Bills Created", "Message Log shows [" & sBillsCreated &"] - Bills Created", True)
			Exit Function
		End If
			
		sBillLinesCreated = Browser("PeopleSoft Browser").Page("Process Monitor").PSFrame("Message Log").WebElement("New Bill Lines Created").GetROProperty("innertext")
		
		aBillLinesCreated=Split(sBillLinesCreated,":")
		sBillLinesCreated = aBillLinesCreated(1)

		If Trim(sBillLinesCreated) = sErrorCount  Then
			Call WriteToReport(micPass, "Bill Lines Created", "Message Log shows [" & sBillLinesCreated &"] - Bill Lines Created", True)
		Else
			Call WriteToReport(micFail, "Bills Lines Created", "Message Log shows [" & sBillLinesCreated &"] - Bill Lines Created", True)			
		End If
			
		getinv = dbGetmasscorrectinv(sInterface, customer, sNewContactSeqNum, "", "PS_INTFC_BI_CMP")
		If IsArrayEmpty(getinv) Then
			Call WriteToReport(micFail, "DB query returned zero records", "DB query returned zero records ", True)
			Exit Function
		End If
		On Error GoTo 0
		
		'Pulls numbr of rows and compares to ErrorCount fron Interface page
		rowVal = DataTable.GetSheet("PS_INTFC_BI_CMP").GetRowCount
		
		If cDbl(rowVal) = cDbl(sErrorCount) Then
			Call WriteToReport(micPass, "Error Count", "Records returned match Error Count", True)
		Else
			Call WriteToReport(micFail, "Error Count", "Records returned ["&rowVal&"] do not match Error Count [" &sErrorCount &"]", True)
		End If
			
		'Gets Sum of GROSS_EXTENDED_AMT and verifies with Gross Extended Amount from Interface page
		getinv = dbGetmasscorrectinv(sInterface, customer, sNewContactSeqNum, "GROSS_EXTENDED_AMT", "PS_INTFC_BI_CMP")
		If IsArrayEmpty(getinv) Then
			Call WriteToReport(micFail, "DB query returned zero records", "DB query returned zero records ", True)
			Exit Function
		End If
		On Error GoTo 0
		
		If cDbl(getinv(0)) = cDbl(sGrossExtAmnt) Then
			Call WriteToReport(micPass, "Gross Extended Amount", "Sum of Records returned match Gross Exended Amount", True)
		Else
			Call WriteToReport(micFail, "Gross Extended Amount", "Sum of Records returned ["&getinv(0)&"] do not match Gross Exended Amount ["& sGrossExtAmnt &"]", True)
		End If							
										
	End If
	
		' Verify if Bill is in INV Status annd process if not.  Accounts for if there is more than one Bill Created
		
		For i = 1 To rowval
		
			invoice = DataTable.SetCurrentRow(i)
			
				invoice = DataTable.Value("INVOICE","PS_INTFC_BI_CMP")

				If sInvoice <> invoice Then					
					
					'Verfiy Bill Status is HLD
					nResult = GetBillingStatus(srtBusinessValue,invoice)
					
					If nResult = "INV" Then
						Call WriteToReport(micPass, "Bill Status", "Bill Status was INV.", True)						
					ElseIf nResult = "HLD" Then
						Call WriteToReport(micPass, "Bill Status", "Bill Status was HLD.", True)
						'Change Bill Status
						nResult = ChangeBillStatus(srtBusinessValue,invoice,"RDY")
					
						If nResult = 1 Then
							Call WriteToReport(micFail, "Change Bill Status", "Sum of Records returned ["&getinv(0)&"] do not match Gross Exended Amount ["& sGrossExtAmnt &"]", True)
							Exit Function
						End If
						
						'finalizeandPrint function uses MainMenuSelection1 for Navigation in function, since it is already used in this function, need to update					
						GlobalDictionary("MainMenuSelection1") = GetDataFrmAllVars("$Navigation_BillingGenInvSingleAction") 	
						'Single process of invoice
						finalizeandPrint = singleActionInvoiceBIJOB03(invoice,GlobalDictionary("RunControl"))
						
						'Verfiy Bill Status is HLD
						nResult = GetBillingStatus(srtBusinessValue,invoice)	
						If nResult = "INV" Then
							Call WriteToReport(micPass, "Bill Status", "Bill Status was INV.", True)	
						Else
							Call WriteToReport(micFail, "Bill Status", "Bill Status was [" &nResult & "]", True)
						End If																		
					Else
						Call WriteToReport(micFail, "Bill Status", "Bill Status was [" &nResult & "]", True)
					End If							
				End If			
			
				sInvoice  = invoice

		Next
End Function

'**************************************************************************************************************
''' <summary> 
'''Customer Duplicate Payment
''' </summary>
''' <author>Rama Peela</author>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'**************************************************************************************************************
Public Function customerDuplicatePayment()
	Dim srtBusinessValue,depositid,arup,runcontrol,status,paymntamt,details,customer,pmntid,amt,amt1,item,amt2,cust
	Dim itemIDDefaultVal, isExpectedItemIDExist, itemRow
	Dim keys

	Call WriteToReport (micPass, "####### "&GlobalDictionary("TestName")&"_"&GlobalDictionary("combinedTCSpecs")&" ###########", ""&GlobalDictionary("TestObjective")&"", False)
	If SelectMainMenu1(GlobalDictionary("MainMenuSelection")) = True Then
		srtBusinessValue=GlobalDictionary("BusinessUnit")
		runcontrol=GlobalDictionary("Runcontrol")
		details=dbgetcustomerduplicatepmnt(srtBusinessValue)
		customer = Trim(details(1))
		item=details(2)
		amt=details(3)
		amt1=2*amt
		amt2="-"&amt
		pmntid="Test"&(getRandomNumber(2))
		If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=H1","innertext:=Regular Deposit","index:=0").Exist(30) Then
			Call WriteToReport (micPass,"Regular Deposit Page is Loaded Successfully","Regular Deposit Page is Loaded Successfully", True)
		Else
			Call WriteToReport (micFail, "Regular Deposit Page is not Loaded Successfully", "Regular Deposit Page is not Loaded Successfully", True)
		End If

		btn_click getObjectInfoFromXML("add_new_value_ccc", objectsFile, "Value"), getObjectInfoFromXML("add_new_value_ccc", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=H1","innertext:=Regular Deposit","index:=0").Exist(30) Then
			Call WriteToReport (micPass,"Add a new Value Tab on Regular Deposit Page is Loaded Successfully","Add a new Value Tab on Regular Deposit Page is Loaded Successfully", True)
		Else
			Call WriteToReport (micFail, "Add a new Value Tab on Regular Deposit Page is not Loaded Successfully", "Add a new Value Tab on Regular Deposit Page is not Loaded Successfully", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("depositunit_rd_webedit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("depositunit_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("depositid_rd_webedit", objectsFile, "Value"),GlobalDictionary("DepositID"),false, getObjectInfoFromXML("depositid_rd_webedit", objectsFile, "Description")
		'btn_click getObjectInfoFromXML("Add_CCC", objectsFile, "Value"), getObjectInfoFromXML("Add_CCC", objectsFile, "Description")
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#icsearch").Click
		If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","html id:=app_label").Exist(30) Then
			Call WriteToReport (micPass,"Totals Tabbed Page is Loaded Successfully","Totals Tabbed Page is Loaded Successfully", True)
		Else
			Call WriteToReport (micFail, "Totals Tabbed Page is not Loaded Successfully", "Totals Tabbed Page is not Loaded Successfully", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("AcctngDate_rd_webedit", objectsFile, "Value"),DATE,false, getObjectInfoFromXML("AcctngDate_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("bankcode_rd_webedit", objectsFile, "Value"),GlobalDictionary("BankCode"),false, getObjectInfoFromXML("bankcode_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("bankaccnt_rd_webedit", objectsFile, "Value"),GlobalDictionary("BankAccount"),false, getObjectInfoFromXML("bankaccnt_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("deposittype_rd_webedit", objectsFile, "Value"),GlobalDictionary("DepositType"),false, getObjectInfoFromXML("deposittype_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("controlTA_rd_webedit", objectsFile, "Value"),amt1,false, getObjectInfoFromXML("controlTA_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("count_rd_webedit", objectsFile, "Value"),GlobalDictionary("Count"),false, getObjectInfoFromXML("count_rd_webedit", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("payments_rd_Tab", objectsFile, "Value"), getObjectInfoFromXML("payments_rd_Tab", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","html id:=app_label","index:=0").Exist(30) Then
			Call WriteToReport (micPass,"Payments Tabbed Page is Loaded Successfully","Payments Tabbed Page is Loaded Successfully", True)
		Else
			Call WriteToReport (micFail, "Payments Tabbed Page is not Loaded Successfully", "Payments Tabbed Page is not Loaded Successfully", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("amnt_rd_webedit", objectsFile, "Value"),amt1,false, getObjectInfoFromXML("amnt_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("pymnt_rd_webedit", objectsFile, "Value"),pmntid,false, getObjectInfoFromXML("pymnt_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("currency_rd_webedit", objectsFile, "Value"),GlobalDictionary("Currency"),false, getObjectInfoFromXML("currency_rd_webedit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("custid_rd_webedit", objectsFile, "Value"),customer,false, getObjectInfoFromXML("custid_rd_webedit", objectsFile, "Description")
		'btn_click  getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Description")
		Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSave").Click
		wait 3
		depositid = Browser("creationtime:=0").Page("index:=1").WebElement("html id:=DEPOSIT_CONTROL_DEPOSIT_ID","html tag:=SPAN").GetROProperty("innertext")
		Call WriteToReport (micPass,"Deposit ID captured is "&depositid&"","Deposit ID captured is "&depositid&"", True)
		If SelectMainMenu1(GlobalDictionary("MainMenuSelection3")) = True Then
			If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=H1","innertext:=Create Payment Worksheet","index:=0").Exist(30) Then
				Call WriteToReport (micPass,"Create Payment Worksheet Page is Loaded Successfully","Create Payment Worksheet Page is Loaded Successfully", True)
				Call WriteToReport (micPass,"Find an Existing Value Tabbed Page is Loaded Successfully","Find an Existing Value Tabbed Page is Loaded Successfully", True)
			Else
				Call WriteToReport (micFail, "Create Payment Worksheet Page is not Loaded Successfully", "Create Payment Worksheet Page is not Loaded Successfully", True)
			End If

			setValue_WebEdit getObjectInfoFromXML("depositUnit_cpw_webEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("depositUnit_cpw_webEdit", objectsFile, "Description")
			setValue_WebEdit getObjectInfoFromXML("depositid_cpw_webEdit", objectsFile, "Value"),depositid,false, getObjectInfoFromXML("depositid_cpw_webEdit", objectsFile, "Description")
			btn_click getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
			If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innertext:=Payment Worksheet Selection","index:=0").Exist(30) Then
				Call WriteToReport (micPass,"Payment Worksheet Selection Page is Loaded Successfully","Payment Worksheet Selection Page is Loaded Successfully", True)
			Else
				Call WriteToReport (micFail, "Payment Worksheet Selection Page is not Loaded Successfully", "Payment Worksheet Selection Page is not Loaded Successfully", True)
			End If
	
			cust=Browser("creationtime:=0").Page("index:=1").Webedit("html id:=PAYMENT_ID_CUST_CUST_ID\$0").GetROProperty("Value")
			'cust=Browser("creationtime:=0").Page("index:=1").Webedit("html id:=PAYMENT_SEL_VW_PAYMENT_ID").GetROProperty("Value")
			If Trim(cust) = Trim(customer) Then
				Call WriteToReport (micPass,"Defaulted Information is Verified","Defaulted Information is Verified", True)
			Else
				Call WriteToReport (micFail, "Defaulted Information is not Verified", "Defaulted Information is not Verified", True)
			End If
	
			'setValue_WebEdit getObjectInfoFromXML("Qual_code_CCC", objectsFile, "Value"),GlobalDictionary("Qualcode"),false, getObjectInfoFromXML("Qual_code_CCC", objectsFile, "Description")
			'setValue_WebEdit getObjectInfoFromXML("Reference", objectsFile, "Value"),item,false, getObjectInfoFromXML("Reference", objectsFile, "Description")
			Browser("title:=Create Worksheet").Page("title:=Create Worksheet").WebEdit("html id:=PAYMENT_ID_ITEM_REF_QUALIFIER_CODE\$0").Set GlobalDictionary("Qualcode")
			Browser("title:=Create Worksheet").Page("title:=Create Worksheet").WebEdit("html id:=PAYMENT_ID_ITEM_REF_VALUE\$0").Set item
			btn_click getObjectInfoFromXML("Build_CCC", objectsFile, "Value"), getObjectInfoFromXML("Build_CCC", objectsFile, "Description")
			If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innertext:=Payment Worksheet Application","index:=0").Exist(30) Then
				Call WriteToReport (micPass,"Payment Worksheet Application Page is Loaded Successfully","Payment Worksheet Application Page is Loaded Successfully", True)
			Else
				Call WriteToReport (micFail, "Payment Worksheet Application Page is not Loaded Successfully", "Payment Worksheet Application Page is not Loaded Successfully", True)
			End If
	
			'itemIDDefaultVal = Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$0").GetROProperty("default value")
			If NOT (verifyItemIDVal(item)) Then
				itemRow = getRowNumberForNewItem()
				If NOT IsEmpty(itemRow) Then
					'Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
					Browser("creationtime:=0").Page("index:=1").Image("name:=ITEM\$prompt\$img\$"&itemRow).click
					wait 7
					Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(item)
					Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
					wait 5
					If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(item)).exist(5) Then
						Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(item)).click
					Else
						Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&itemid&" is not selected",True)  
					End If
		
					'Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_ITEM_ITEM\$"&itemRow).Set RfndCC(2) PAYMENT_ITEM_ITEM$prompt$img$1 ITEM_ITEM2_VW_ITEM
					If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
						Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&item&" is selected", False)
					Else
						Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
					End If
		
				Else
					Set keys = CreateObject("wscript.shell")
					Browser("creationtime:=0").Page("index:=1").PSFrame("html id:=ptifrmtgtframe").WebButton("html id:=PAYMENT_ITEM\$newm\$0\$\$0").Object.Focus
					'Sendkeys shortcuts: ~ is Enter, % is Alt, Ctrl is ^
					keys.sendkeys("~")
					Set keys = Nothing
					Browser("creationtime:=0").Sync
					Browser("name:=Update Worksheet").Dialog("text:=cdw\.com needs some information").WinButton("text:=OK").Click
					Browser("creationtime:=0").Sync
					itemRow = getRowNumberForNewItem()
					Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
					Wait 5
					Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(item)
					Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
					If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(item)).exist(10) Then
						Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(item)).click
					Else
						Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&RfndCC(2)&" is not selected",True)     
					End If

					If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
						Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&item&" is selected", False)
					Else
						Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
					End If	 
				End If
	             
			 Else
				If  Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&Trim(item)).exist(20) Then
					Dim rNum
					rNum = Browser("creationtime:=0").Page("index:=1").WebEdit("default value:="&Trim(item)).getroproperty("html id")
					If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).GetROProperty("checked") = 1 Then
						Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&item&" is selected", False)
					Else
						Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&split(rNum,"$")(1)).Click 
					End If
	
				Else
					itemRow = getRowNumberForNewItem()
					Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ITEM\$prompt\$img\$"&itemRow).click
					Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=ITEM_ITEM2_VW_ITEM").Set Trim(itemid)
					Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
					If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(item)).exist(5) Then
						Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(item)).click
					Else
						Call WriteToReport(micFail, "Item ID is not displayed", "c item ID "&item&" is not selected",True)     
					End If
	
					If Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).GetROProperty("checked") = 1 Then
						Call WriteToReport(micPass, "CheckBox is selected", "checkbox for item ID "&item&" is selected", False)
					Else
						Browser("creationtime:=0").Page("index:=1").WebCheckBox("html id:=PAYMENT_ITEM_ITEM_SELECTED\$"&itemRow).Click 
					End If
	
				End If
	
	 		End If
	
			'''''''''''''''''''''''''''to make sure only expected item id is selected
			unSelectItemID(item)
	
			''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'			btn_click getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Description")
'			Wait 3
'			btn_click getObjectInfoFromXML("plus_rd_button", objectsFile, "Value"), getObjectInfoFromXML("plus_rd_button", objectsFile, "Description")
'			btn_click getObjectInfoFromXML("OK_rd_button", objectsFile, "Value"), getObjectInfoFromXML("OK_rd_button", objectsFile, "Description")

			'Objects updated from the XML file
			Browser("name:=Update Worksheet").Page("title:=Update Worksheet").WebButton("html id:=#ICSave").Click
			Browser("name:=Update Worksheet").Sync
			Set keys = CreateObject("wscript.shell")
			Browser("name:=Update Worksheet").Page("title:=Update Worksheet").PSFrame("html id:=ptifrmtgtframe").WebButton("html id:=PAYMENT_ITEM\$newm\$0\$\$0").Object.Focus
			'Sendkeys shortcuts: ~ is Enter, % is Alt, Ctrl is ^
			keys.sendkeys("~")
			Set keys = Nothing
			
			Browser("name:=Update Worksheet").Sync
			Browser("name:=Update Worksheet").Dialog("text:=cdw\.com needs some information").WinButton("text:=OK").Click
			Browser("name:=Update Worksheet").Sync

			'''''''''''''''''''''''''''''''''''' 06/29-venu
			Dim emptyRowNum
			'emptyRowNum = getRowNumberForNewItem()
			
			'There might not always be an empty row. How do we account for that?
'			If Isempty(emptyRowNum) Then
'				emptyRowNum = 0
'			End If

			'We didn't always get the new row with just the GetRowNumber line since we can't change the Item Entry Type on existing items. This makes sure we're getting the new completely blank line
			If itemrow >= 0 Then
				emptyrownum = itemrow + 1
			Else
				emptyRowNum = getRowNumberForNewItem()
			End If

			Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_CUST_ID\$prompt\$img\$"&emptyRowNum).click
			'Wait 7
			Browser("creationtime:=0").Sync
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=CUST_SRCH_VW_CUST_ID").Set Trim(cust)
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
			Wait 5
			If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(cust),"index:=0").exist(5) Then
				Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim(cust),"index:=0").click
			Else
				Call WriteToReport(micFail, "customer ID is not displayed", "c item ID " & cust & " is not selected", True)
			End If
	
			Browser("creationtime:=0").Page("index:=1").Image("name:=PAYMENT_ITEM_ENTRY_TYPE\$prompt\$img\$"&emptyRowNum).click
			Wait 7
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=AUTO_ENT_PY_VW_ENTRY_TYPE").Set Trim("OA")
			Browser("creationtime:=0").Page("index:=1").WebButton("html id:=#ICSearch").Click
			Wait 5
			If Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim("OA")).exist(5) Then
				Browser("creationtime:=0").Page("index:=1").Link("name:="&Trim("OA")).click
			Else
				Call WriteToReport(micFail, "OA ID is not displayed", "c item ID OA is not selected",True)     
			End If
			
			Wait 3
			Browser("creationtime:=0").Page("index:=1").WebEdit("html id:=PAYMENT_WRK_PAY_AMT\$"&emptyRowNum).set(amt2)
	
			''''''''''''''''''''''''''''''''' PAYMENT_WRK_PAY_AMT$2
			If Trim(customer) = Trim(customer)  Then
				Call WriteToReport (micPass,"Defaulted Customer ID is Verified","Defaulted Customer ID is Verified", True)
			Else
				Call WriteToReport (micFail, "Defaulted Information is not Verified", "Defaulted Information is not Verified", True)
			End If
	
			btn_click  getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Value"), getObjectInfoFromXML("Click_Save_Delete", objectsFile, "Description")
			btn_click  getObjectInfoFromXML("worksheet_action_delete_ccc", objectsFile, "Value"), getObjectInfoFromXML("worksheet_action_delete_ccc", objectsFile, "Description")
			If Browser("creationtime:=0").Page("index:=1").WebElement("html tag:=SPAN","innertext:=Payment Worksheet Action","index:=0").Exist(30) Then
			  Call WriteToReport (micPass,"Payment Worksheet Action Page is Loaded Successfully","Payment Worksheet Action Page is Loaded Successfully", True)
			Else
			  Call WriteToReport (micFail, "Payment Worksheet Action Page is not Loaded Successfully", "Payment Worksheet Action Page is not Loaded Successfully", True)
			End If
	
			WebList_select getObjectInfoFromXML("PostingAction_Weblist1", objectsFile, "Value"),"Batch Standard", ("Batch Standard option was successfully selected from the Action WebList ")
			btn_click  getObjectInfoFromXML("Ok_Button", objectsFile, "Value"), getObjectInfoFromXML("Ok_Button", objectsFile, "Description")
			arup=arupdate(srtBusinessValue,runcontrol)
		End If

    End If

  	If SelectMainMenu1(GlobalDictionary("MainMenuSelection2")) = True Then
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=View/Update Item Details","html tag:=H1","index:=0").Exist(30) Then
		     Call WriteToReport(micPass, "View/Update Item Details Page is Loaded Successfully ", "View/Update Item Details  Page is Loaded Successfully ", False)
		Else
		     Call WriteToReport(micFail, "View/Update Item Details Page is not Loaded Successfully ", "View/Update Item Details Page is not Loaded Successfully ", True)
		End If

		setValue_WebEdit getObjectInfoFromXML("Unit_Vuitem_WebEdit", objectsFile, "Value"),GlobalDictionary("BusinessUnit"),false, getObjectInfoFromXML("Unit_Vuitem_WebEdit", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("itemid_Vuitem_WebEdit", objectsFile, "Value"),item,false, getObjectInfoFromXML("itemid_Vuitem_WebEdit", objectsFile, "Description")
		btn_click  getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Value"), getObjectInfoFromXML("Search_RunControlId_Btn", objectsFile, "Description")
		Wait 3
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Line","html tag:=SPAN").Exist(30) Then
		     Call WriteToReport(micPass, "Details 1 Tabbed Page is Loaded Successfully ", "Details 1 Tabbed  Page is Loaded Successfully ", False)
		Else
		     Call WriteToReport(micFail, "Details 1 Tabbed Page is not Loaded Successfully ", "Details 1 Tabbed Page is not Loaded Successfully ", True)
		End If

		status=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=PSXLATITEM_XLATSHORTNAME","html tag:=SPAN").GetROProperty("innertext")
		If status="Closed" Then
	          Call WriteToReport (micPass,"Status of the item is Closed for ITEM ID "&item&"","Status of the item is Closed for ITEM ID "&item&"", True)
	    Else
			  Call WriteToReport (micFail, "Status of the item is Open", "Status of the item is Open", True)		
		End If

		btn_click  getObjectInfoFromXML("itemActivity_tab", objectsFile, "Value"), getObjectInfoFromXML("itemActivity_tab", objectsFile, "Description")
		If Browser("creationtime:=0").Page("index:=1").WebElement("innertext:=Unit:","html tag:=SPAN").Exist(30) Then
			Call WriteToReport(micPass, "Items Activity Tabbed Page is Loaded Successfully ", "Items Activity Tabbed  Page is Loaded Successfully ", False)
		Else
		    Call WriteToReport(micFail, "Items Activity Tabbed Page is not Loaded Successfully ", "Items Activity Tabbed Page is not Loaded Successfully ", True)
		End If

		paymntamt=Browser("creationtime:=0").Page("index:=1").WebElement("html id:=ITEM_ACTIVITY_ENTRY_AMT\$1","html tag:=SPAN").GetROProperty("innertext")
		If paymntamt <> 0 Then
        	Call WriteToReport (micPass,"The OA Payment is available ","The OA Payment is available ", True)
     	Else
			Call WriteToReport (micFail, "The OA Payment is available ", "The OA Payment is available ", True)		
		End If

	End If

End Function

'**************************************************************************************************************
''' <summary> 
'''Create a maintenance worksheet to write off a customer's balance
''' </summary>
''' <author>Eric Trout</author>
''' <datecreated>13Nov2017</datecreated>
''' <startstate>NA</startstate>
''' <endstate>N/A</endstate>
''' <returns type="NA"> </returns>
'Change Control: 
'Date of Change     Author         Description of change
'12/7/2017          Eric Trout      Updated for NonRevRec tests
'12/12/2017         Eric Trout      Updated for Timing Issues
'**************************************************************************************************************
Public Function CreateMaintWorksheetWO

    Dim arrResult, nResult, arrApprover, arrRecordValues()
    Dim sBU, sCustID, sItem, arrResults, sWOReason, sSeqNum, sSQL, sWOType, sWorksheetID, sSetID
    
    sBU = GlobalDictionary("BusinessUnit")
    sSetID = GlobalDictionary("SetID")
    
    'Get Worksheet Item
    arrResult = dbGetWOItem(sBU)
    
    On Error Resume Next
	nResult = UBound(arrResult)
	If nResult > 0 Then
		On Error Goto 0
		WriteToReport micPass, "GetWOItem - SQL Query Executed", "SQL query successfully executed. Values were returned with query.", False
    Else
    	On Error Goto 0
    	WriteToReport micFail, "GetWOItem - SQL Query Executed", "SQL query unsuccessfully executed. No values were returned with query [" & sSQL & "] and the test will stop.", False
    	ExitTest 
	End If

    'Data pulled from Query for Writeoff Item, stored for validation later 
    GlobalDictionary("CustID") = Trim(arrResult(1))
    GlobalDictionary("ITEM") = Trim(arrResult(2))

   'Data assigned and used in this function
    sCustID = Trim(arrResult(1))   
    sItem = Trim(arrResult(2))  
    
    'Writeoff Type
    sWOType = GlobalDictionary("WOType")
    sWOReason = GlobalDictionary("WOReason")

    If sWOReason = "" Then

        If UCASE(GlobalDictionary("Source")) <> "NONREVREC" Then
            arrResults = dbgetWOReason(sSetID)
        ElseIf UCASE(GlobalDictionary("Source")) = "NONREVREC" Then
            arrResults = dbgetNonRevRecWOReason(sSetID)
        Else
            WriteToReport micFail, "Reason Query", "Source does not match.  Check Data.", false
            ExitTest        
        End If
        
        'Checks to see if results are returned as an array
        If NOT IsArrayEmpty(arrResults) Then
            sWOReason = arrResults(0)
        Else
            WriteToReport micFail, "Reason Query", "Returned Zero Results", false
            ExitTest  
        End If
     End If
     
    With Browser("title:=Create Worksheet").Page("title:=Create Worksheet")
    'Navigate to Create Worksheet
        If SelectMainMenu1(GlobalDictionary("CreateWorksheet")) = True Then        
            'Create Worksheet
             Call WriteToReport(micPass, "Create Worksheet Search", "Page is displayed.", False)
             If NOT .WebTabStrip("innertext:=Find an Existing ValueAdd a New Value").Exist(30) Then
	            Call WriteToReport (micFail, "Create Worksheet Search", "Page is not displayed.", True)  
	            ExitTest              	
             End If
            .WebTabStrip("innertext:=Find an Existing ValueAdd a New Value").Select "Add a New Value"
        Else
            Call WriteToReport (micFail, "Create Worksheet Search", "Page is not displayed.", True)  
            ExitTest 
        End If
 
        .WebEdit("html id:=WS_CONTROL_WS_BU").Set sBU
        
        .WebButton("name:=Add").Click
        
        If .WebEdit("html id:=WS_ID_CUST_CUST_ID\$0").Exist(5) Then
             Call WriteToReport (micPass, "Worksheet Selection", "Page is displayed.", False)
        Else
             Call WriteToReport (micFail, "Worksheet Selection", "Page is not displayed.", True)  
             ExitTest         
        End If

        .WebEdit("html id:=WS_ID_CUST_CUST_ID\$0").Set sCustID
        
        wait(10)

        .WebList("html id:=WS_WRK_REF_OPTIONS\$13\$").Select "Specific Value"
 
        'Clicks search for Qualifier    
        .WebButton("html id:=WS_ID_ITEM_REF_QUALIFIER_CODE\$prompt\$0").Click
        
        If .WebEdit("html id:=AR_FLD_REF_VW_REF_QUALIFIER_CODE").exist(10) Then
           Call WriteToReport (micPass, "Qualifier Lookup", "Qualifier Lookup is displayed", False)
        Else 
           Call WriteToReport (micFail, "Qualifier Lookup", "Qualifier Lookup is not displayed.", True)  
           ExitTest 
        End If

        'Looks for Qualifier I for Item
        .WebEdit("html id:=AR_FLD_REF_VW_REF_QUALIFIER_CODE").Set "i"
        .WebButton("html id:=#ICSearch").Click        
        wait(5)
        .Link("innertext:=I").Click		
        wait(5)

        'Clicks search for Item
        .WebButton("html id:=WS_ID_ITEM_REF_VALUE\$prompt\$0").Click
    	.Sync
        If .WebEdit("html id:=ITEM_ITEM_VW_ITEM").exist(10) Then
           Call WriteToReport (micPass, "Item Lookup", "Item Lookup is displayed.", False)
        Else 
           Call WriteToReport (micFail, "Item Lookup", "Item Lookup is not displayed.", True)  
          	ExitTest 
        End If
        
        'Searches Lookup for Item and selects
        .WebEdit("html id:=ITEM_ITEM_VW_ITEM").Set sItem	
        .WebButton("html id:=#ICSearch").Click
        If .Link("innertext:="&sItem).Exist(10) Then
            .Link("innertext:="&sItem).Click
        Else
           Call WriteToReport (micFail, "Item Lookup", "Item was not found.", False)  
           ExitTest         
        End If
            
        'Click Build
        .WebButton("html id:=WS_WRK_WS_BUILD").Click
            
    End With
        
    'Update Worksheet
    With Browser("title:=Create Worksheet").Page("title:=Update Worksheet")
    
    	.Sync
        If .WebTable("html id:=WS_ITEM\$scrolli\$0", "name:=Personalize").Exist(30) Then
             Call WriteToReport (micPass, "Worksheet Application", "Page is displayed.", False)
        Else
             Call WriteToReport (micFail, "Worksheet Application", "Page is not displayed.", True)  
             ExitTest
        End If

       	If .WebCheckBox("html id:=WS_ITEM_ITEM_SELECTED\$0").Exist(10) Then
            Call WriteToReport (micPass, "Item Page", "Is displayed", False)
        End If

        If .WebCheckBox("html id:=WS_ITEM_ITEM_SELECTED\$0").GetROProperty("checked") = 1 AND .WebElement("html id:=WS_ITEM_ITEM\$0").GetRoProperty("innertext") = Trim(sItem) Then
             Call WriteToReport (micPass, "Item checked and displayed", "Item ["&Trim(sItem)&"] is selected and displayed", False)
        Else
            'Find, select and save
            .Link("text:=Find").Click
            If Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinEdit("regexpwndclass:=Edit").Exist(10) Then
                Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinEdit("regexpwndclass:=Edit").Set sItem
                Browser("creationtime:=0").Dialog("regexpwndtitle:=cdw\.com needs some information").WinButton("regexpwndtitle:=OK").Click
                'Select Item after verifying it is on top row
                If .WebElement("html id:=WS_ITEM_ITEM\$0").GetRoProperty("innertext") = Trim(sItem) Then
                    .WebCheckBox("html id:=WS_ITEM_ITEM_SELECTED\$0").Set "ON"
                Else
                    Call WriteToReport (micFail, "CreateWorksheet", "Unable to find Item in table.", True)
                    ExitTest
                End If    
                'Click Save
                .WebButton("html id:=#ICSave").Click
                
            Else
                Call WriteToReport (micFail, "CreateWorksheet", "Dialog box to find item is not shown.", True)
                ExitTest
            End If
	
        End If
             
        
        
        'needs comments
        .WebList("html id:=FUNCLIB_AR_NEXT_MNT_WS_DISP_OPTNS").Select "Selected"
        
        wait(5)
    
        .WebButton("html id:=WS_WRK_MAINTWS_GO").Click
        
        Wait(10) 'Page needs to refresh

        'Set Type		
        .WebEdit("html id:=WS_ITEM_ENTRY_TYPE\$0").Set sWOType
        
        'Set Reason
        .WebEdit("html id:=WS_ITEM_ENTRY_REASON\$0").Set sWOReason
        
        wait(5)
        
        'Click Save
        .WebButton("html id:=#ICSave").Click
        
        'Capture Worksheet ID  
        sWorksheetId = .WebElement("html id:=WS_CONTROL_WS_ID").GetROProperty("innertext") 
        
        If Trim(sWorksheetID) <> "" Then
            Call WriteToReport (micPass, "CreateWorksheet", "Worksheet ID is ["&sWorksheetID&"].", False)
        Else
           Call WriteToReport (micFail, "CreateWorksheet", "Worksheet failed to show a Worksheet ID.", True)  
           ExitTest 		
        End If
   
        'Export WorksheetID and SeqNum
        GlobalDictionary("WorksheetId") = sWorksheetID
    
        'Click on Worksheet Action Link
        .Link("innertext:=Worksheet Action").Click
    End With
    
    'Comment what section is doing
    With Browser("title:=Create Worksheet").Page("title:=Finalize Worksheet")
        'Verify on Worksheet Action Page
        If .WebList("html id:=REALTIME_WRK_RTM_PROCESS_LIST").Exist(30) Then
           Call WriteToReport (micPass, "Worksheet Action", "Page is displayed.", False)
        Else
           Call WriteToReport (micFail, "Worksheet Action", "Page is not displayed.", True)  
           ExitTest  
        End If
        
        'Select Submit to Workflow
        .WebList("html id:=REALTIME_WRK_RTM_PROCESS_LIST").Select "Submit to Workflow"
        
        'Click OK
        .WebButton("html id:=REALTIME_WRK_RTM_RUN").Click
         
        'Click Save
        .WebButton("html id:=#ICSave").Click
            
        If .WebElement("html id:=REALTIME_WRK_RTM_PROCESS_LIST").Exist(5) Then
            Call WriteToReport (micPass, "Worksheet Status", "Worksheet is Pending Approval", False)
        Else
           Call WriteToReport (micFail, "Worksheet Status", "Worksheet is not in the correct status.", True)  
           ExitTest 
        End If
        
       'Go home
        .WebButton("html id:=pthdr2home").Click           

    End With
    
    arrApprover = dbgetApprover(GlobalDictionary("SignInUser"))
    
        'Checks to see if results are returned as an array
        If NOT IsArrayEmpty(arrApprover) Then
            WriteToReport micPass, "Approver", "Approved User is [" & arrApprover(0)&"].", False
        Else
            WriteToReport micFail, "Approver", "Returned Zero Results", false
            ExitTest  
        End If
    
    'Pass out Approver
   GlobalDictionary("ApprovedUser") = TRIM(arrApprover(0))      

End Function
'**************************************************************************************************************
''' <summary> 
''' This Function navigates to StandardBilling searches by invoice and changes the bill status
''' </summary>
''' <author>Eric Trout</author>
''' <datecreated>14-May-2018</datecreated>
''' <param name="BU" type="string">Business Unit</param>
''' <param name="invoice" type="string">Invoice looking fcor</param>
''' <param name="status" type="string">what to change the status to</param>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="boolean"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function ChangeBillStatus(BU,invoice,status)

	Dim sErrorMessage, sVerifyInvoice 
	
	ChangeBillStatus = 0
	
	SelectMainMenu1(GlobalDictionary("StandardBilling")) 
	If Browser("PeopleSoft Browser").Page("Standard Billing").WebElement("Bill Entry").Exist(10) Then
		'Enter BU and Invoice
		Browser("PeopleSoft Browser").Page("Standard Billing").PSFrame("TargetContent").WebEdit("BUSINESS_UNIT").Set BU
		Browser("PeopleSoft Browser").Page("Standard Billing").PSFrame("TargetContent").WebEdit("INVOICE").Set invoice
		
		'Click Search
		Browser("PeopleSoft Browser").Page("Standard Billing").PSFrame("TargetContent").WebButton("Search").Click
		
		If Browser("PeopleSoft Browser").Page("Standard Billing").PSFrame("TargetContent").WebElement("No matching values were").Exist(10) Then
			Call WriteToReport (micFail, "Invoice:", "Invoice [" & sVerifyInvoice & "] was displayed. Invoice [" & invoice & "] should be displayed", True)
			ChangeBillStatus = 1	
			Exit Function			
		End If

		'Bill Entry page is displayed for Invoice
		If Browser("PeopleSoft Browser").Page("Standard Billing").WebElement("Bill Entry").Exist(10) Then
			sVerifyInvoice = Browser("PeopleSoft Browser").Page("Standard Billing").PSFrame("TargetContent").WebElement("INVOICE").GetROProperty("innertext")
			If Trim(sVerifyInvoice) = invoice Then
				Call WriteToReport (micPass, "Invoice:", "Invoice [" & invoice & "] is displayed", True)
			Else
				Call WriteToReport (micFail, "Invoice:", "Invoice [" & sVerifyInvoice & "] was displayed. Invoice [" & invoice & "] should be displayed", True)
				ChangeBillStatus = 1
				Exit Function
			End If
		Else
			Call WriteToReport (micFail, "Bill Entry Page", "Page is not correct.", True)
			ChangeBillStatus = 1
			Exit Function
		End if	
		
		'Enter Status
		Browser("PeopleSoft Browser").Page("Standard Billing").PSFrame("TargetContent").WebEdit("BILL_STATUS").Set status
		
		'Save Bill
		Browser("PeopleSoft Browser").Page("Standard Billing").PSFrame("TargetContent").WebButton("Save").Click
		
		'If error message displays, get error, click ok and fail.
		If Browser("PeopleSoft Browser").Page("Standard Billing").WebElement("alertmsg").Exist(10) Then
			sErrorMessage = Browser("PeopleSoft Browser").Page("Standard Billing").WebElement("alertmsg").GetROProperty("innertext")
			Call WriteToReport (micFail, "Status Update Error", sErrorMessage, True)
			Browser("PeopleSoft Browser").Page("Standard Billing").WebButton("OK").Click
			ChangeBillStatus = 1
			Exit Function
		End If
	Else
		Call WriteToReport (micFail, "Bill Entry Page", "Page is not correct.", True)
		ChangeBillStatus = 1
		Exit Function			
	End If
End Function	
	
'**************************************************************************************************************
''' <summary> 
''' This Function navigates to Billing Summary, and passes out Bill Status
''' </summary>
''' <author>Eric Trout</author>
''' <datecreated>14-May-2018</datecreated>
''' <param name="BU" type="string">Business Unit</param>
''' <param name="invoice" type="string">Invoice looking fcor</param>
''' <startstate>NA</startstate>
''' <endstate>Completed</endstate>
''' <returns type="boolean"> </returns>
'Change Control: 
'Date of Change 	Author 		Description of change
'**************************************************************************************************************
Public Function GetBillingStatus(BU,invoice)
	
	Dim sbillstatus
	
	GetBillingStatus = 0
	
	If SelectMainMenu1(GlobalDictionary("BillingSummary")) = True Then

		setValue_WebEdit getObjectInfoFromXML("busntt_cc4", objectsFile, "Value"), BU, False, getObjectInfoFromXML("busntt_cc4", objectsFile, "Description")
		setValue_WebEdit getObjectInfoFromXML("invtt_cc4", objectsFile, "Value"), invoice, False, getObjectInfoFromXML("invtt_cc4", objectsFile, "Description")
		btn_click getObjectInfoFromXML("Search_button", objectsFile, "Value"), getObjectInfoFromXML("Search_button", objectsFile, "Description")
		
		GetBillingStatus = Browser("CreationTime:=0").Page("index:=1").WebElement("html id:=BI_HDR_BILL_STATUS").GetROProperty("innertext")
		
	Else
		GetBillingStatus = 1
	End If		
End Function















